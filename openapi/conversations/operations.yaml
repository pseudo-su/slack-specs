paths:
  /admin.conversations.archive:
    post:
      tags:
        - admin.conversations
        - admin
      description: Archive a public or private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.archive
      operationId: admin_conversations_archive
      parameters:
        - name: token
          in: header
          description: "Authentication token. Requires scope: `admin.conversations:write`"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - channel_id
              properties:
                channel_id:
                  type: string
                  description: The channel to archive.
          application/json:
            schema:
              required:
                - channel_id
              properties:
                channel_id:
                  type: string
                  description: The channel to archive.
        required: true
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: admin.conversations.archive schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response of admin.conversations.archive
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: admin.conversations.archive error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from admin.conversations.archive
      security:
        - slackAuth:
            - admin.conversations:write
  /admin.conversations.convertToPrivate:
    post:
      tags:
        - admin.conversations
        - admin
      description: Convert a public channel to a private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.convertToPrivate
      operationId: admin_conversations_convertToPrivate
      parameters:
        - name: token
          in: header
          description: "Authentication token. Requires scope: `admin.conversations:write`"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - channel_id
              properties:
                channel_id:
                  type: string
                  description: The channel to convert to private.
          application/json:
            schema:
              required:
                - channel_id
              properties:
                channel_id:
                  type: string
                  description: The channel to convert to private.
        required: true
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: admin.conversations.convertToPrivate schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response of admin.conversations.convertToPrivate
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: admin.conversations.convertToPrivate error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from admin.conversations.convertToPrivate
      security:
        - slackAuth:
            - admin.conversations:write
  /admin.conversations.create:
    post:
      tags:
        - admin.conversations
        - admin
      description: Create a public or private channel-based conversation.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.create
      operationId: admin_conversations_create
      parameters:
        - name: token
          in: header
          description: "Authentication token. Requires scope: `admin.conversations:write`"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - is_private
                - name
              properties:
                name:
                  type: string
                  description: Name of the public or private channel to create.
                description:
                  type: string
                  description: Description of the public or private channel to create.
                is_private:
                  type: boolean
                  description:
                    When `true`, creates a private channel instead of a
                    public channel
                org_wide:
                  type: boolean
                  description:
                    "When `true`, the channel will be available org-wide.
                    Note: if the channel is not `org_wide=true`, you must specify
                    a `team_id` for this channel"
                team_id:
                  type: string
                  description:
                    "The workspace to create the channel in. Note: this
                    argument is required unless you set `org_wide=true`."
          application/json:
            schema:
              required:
                - is_private
                - name
              properties:
                name:
                  type: string
                  description: Name of the public or private channel to create.
                description:
                  type: string
                  description: Description of the public or private channel to create.
                is_private:
                  type: boolean
                  description:
                    When `true`, creates a private channel instead of a
                    public channel
                org_wide:
                  type: boolean
                  description:
                    "When `true`, the channel will be available org-wide.
                    Note: if the channel is not `org_wide=true`, you must specify
                    a `team_id` for this channel"
                team_id:
                  type: string
                  description:
                    "The workspace to create the channel in. Note: this
                    argument is required unless you set `org_wide=true`."
        required: true
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: admin.conversations.create schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response of admin.conversations.create
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: admin.conversations.create error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from admin.conversations.create
      security:
        - slackAuth:
            - admin.conversations:write
  /admin.conversations.delete:
    post:
      tags:
        - admin.conversations
        - admin
      description: Delete a public or private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.delete
      operationId: admin_conversations_delete
      parameters:
        - name: token
          in: header
          description: "Authentication token. Requires scope: `admin.conversations:write`"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - channel_id
              properties:
                channel_id:
                  type: string
                  description: The channel to delete.
          application/json:
            schema:
              required:
                - channel_id
              properties:
                channel_id:
                  type: string
                  description: The channel to delete.
        required: true
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: admin.conversations.delete schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response of admin.conversations.delete
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: admin.conversations.delete error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from admin.conversations.delete
      security:
        - slackAuth:
            - admin.conversations:write
  /admin.conversations.disconnectShared:
    post:
      tags:
        - admin.conversations
        - admin
      description: Disconnect a connected channel from one or more workspaces.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.disconnectShared
      operationId: admin_conversations_disconnectShared
      parameters:
        - name: token
          in: header
          description: "Authentication token. Requires scope: `admin.conversations:write`"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - channel_id
              properties:
                channel_id:
                  type: string
                  description: The channel to be disconnected from some workspaces.
                leaving_team_ids:
                  type: string
                  description:
                    The team to be removed from the channel. Currently
                    only a single team id can be specified.
          application/json:
            schema:
              required:
                - channel_id
              properties:
                channel_id:
                  type: string
                  description: The channel to be disconnected from some workspaces.
                leaving_team_ids:
                  type: string
                  description:
                    The team to be removed from the channel. Currently
                    only a single team id can be specified.
        required: true
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: admin.conversations.rename schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response of admin.conversations.disconnectShared
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: admin.conversations.disconnectShared error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from admin.conversations.disconnectShared
      security:
        - slackAuth:
            - admin.conversations:write
  /admin.conversations.ekm.listOriginalConnectedChannelInfo:
    get:
      tags:
        - admin.conversations.ekm
        - admin
      description:
        List all disconnected channels—i.e., channels that were once connected
        to other workspaces and then disconnected—and the corresponding original channel
        IDs for key revocation with EKM.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.ekm.listOriginalConnectedChannelInfo
      operationId: admin_conversations_ekm_listOriginalConnectedChannelInfo
      parameters:
        - name: token
          in: query
          description: "Authentication token. Requires scope: `admin.conversations:read`"
          required: true
          schema:
            type: string
        - name: channel_ids
          in: query
          description: A comma-separated list of channels to filter to.
          schema:
            type: string
        - name: team_ids
          in: query
          description:
            A comma-separated list of the workspaces to which the channels
            you would like returned belong.
          schema:
            type: string
        - name: limit
          in: query
          description:
            The maximum number of items to return. Must be between 1 - 1000
            both inclusive.
          schema:
            type: integer
        - name: cursor
          in: query
          description:
            Set `cursor` to `next_cursor` returned by the previous call to
            list items in the next page.
          schema:
            type: string
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description:
                  This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description:
                  This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
      security:
        - slackAuth:
            - admin.conversations:read
  /admin.conversations.getConversationPrefs:
    get:
      tags:
        - admin.conversations
        - admin
      description: Get conversation preferences for a public or private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.getConversationPrefs
      operationId: admin_conversations_getConversationPrefs
      parameters:
        - name: token
          in: header
          description: "Authentication token. Requires scope: `admin.conversations:read`"
          required: true
          schema:
            type: string
        - name: channel_id
          in: query
          description: The channel to get preferences for.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: admin.conversations.getConversationPrefs schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response of admin.conversations.getConversationPrefs
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: admin.conversations.unarchive error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from admin.conversations.getConversationPrefs
      security:
        - slackAuth:
            - admin.conversations:read
  /admin.conversations.getTeams:
    get:
      tags:
        - admin.conversations
        - admin
      description:
        Get all the workspaces a given public or private channel is connected
        to within this Enterprise org.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.getTeams
      operationId: admin_conversations_getTeams
      parameters:
        - name: token
          in: header
          description: "Authentication token. Requires scope: `admin.conversations:read`"
          required: true
          schema:
            type: string
        - name: channel_id
          in: query
          description:
            The channel to determine connected workspaces within the organization
            for.
          required: true
          schema:
            type: string
        - name: cursor
          in: query
          description:
            Set `cursor` to `next_cursor` returned by the previous call to
            list items in the next page
          schema:
            type: string
        - name: limit
          in: query
          description:
            The maximum number of items to return. Must be between 1 - 1000
            both inclusive.
          schema:
            type: integer
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: admin.conversations.getTeams schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response of admin.conversations.getTeams
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: admin.conversations.getTeams error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from admin.conversations.getTeams
      security:
        - slackAuth:
            - admin.conversations:read
  /admin.conversations.invite:
    post:
      tags:
        - admin.conversations
        - admin
      description: Invite a user to a public or private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.invite
      operationId: admin_conversations_invite
      parameters:
        - name: token
          in: header
          description: "Authentication token. Requires scope: `admin.conversations:write`"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - channel_id
                - user_ids
              properties:
                user_ids:
                  type: string
                  description: The users to invite.
                channel_id:
                  type: string
                  description: The channel that the users will be invited to.
          application/json:
            schema:
              required:
                - channel_id
                - user_ids
              properties:
                user_ids:
                  type: string
                  description: The users to invite.
                channel_id:
                  type: string
                  description: The channel that the users will be invited to.
        required: true
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: admin.conversations.invite schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response of admin.conversations.invite
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: admin.conversations.invite error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from admin.conversations.invite
      security:
        - slackAuth:
            - admin.conversations:write
  /admin.conversations.rename:
    post:
      tags:
        - admin.conversations
        - admin
      description: Rename a public or private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.rename
      operationId: admin_conversations_rename
      parameters:
        - name: token
          in: header
          description: "Authentication token. Requires scope: `admin.conversations:write`"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - channel_id
                - name
              properties:
                channel_id:
                  type: string
                  description: The channel to rename.
                name:
                  type: string
          application/json:
            schema:
              required:
                - channel_id
                - name
              properties:
                channel_id:
                  type: string
                  description: The channel to rename.
                name:
                  type: string
        required: true
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: admin.conversations.rename schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response of admin.conversations.rename
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: admin.conversations.unarchive error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from admin.conversations.rename
      security:
        - slackAuth:
            - admin.conversations:write
  /admin.conversations.restrictAccess.addGroup:
    post:
      tags:
        - admin.conversations.restrictAccess
        - admin
      description: Add an allowlist of IDP groups for accessing a channel
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.restrictAccess.addGroup
      operationId: admin_conversations_restrictAccess_addGroup
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - channel_id
                - group_id
                - token
              properties:
                token:
                  type: string
                  description: "Authentication token. Requires scope: `admin.conversations:write`"
                team_id:
                  type: string
                  description:
                    The workspace where the channel exists. This argument
                    is required for channels only tied to one workspace, and optional
                    for channels that are shared across an organization.
                group_id:
                  type: string
                  description:
                    The [IDP Group](https://slack.com/help/articles/115001435788-Connect-identity-provider-groups-to-your-Enterprise-Grid-org)
                    ID to be an allowlist for the private channel.
                channel_id:
                  type: string
                  description: The channel to link this group to.
        required: true
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description:
                  This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description:
                  This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
      security:
        - slackAuth:
            - admin.conversations:write
  /admin.conversations.restrictAccess.listGroups:
    get:
      tags:
        - admin.conversations.restrictAccess
        - admin
      description: List all IDP Groups linked to a channel
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.restrictAccess.listGroups
      operationId: admin_conversations_restrictAccess_listGroups
      parameters:
        - name: token
          in: query
          description: "Authentication token. Requires scope: `admin.conversations:read`"
          required: true
          schema:
            type: string
        - name: channel_id
          in: query
          required: true
          schema:
            type: string
        - name: team_id
          in: query
          description:
            The workspace where the channel exists. This argument is required
            for channels only tied to one workspace, and optional for channels that
            are shared across an organization.
          schema:
            type: string
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description:
                  This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description:
                  This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
      security:
        - slackAuth:
            - admin.conversations:read
  /admin.conversations.restrictAccess.removeGroup:
    post:
      tags:
        - admin.conversations.restrictAccess
        - admin
      description: Remove a linked IDP group linked from a private channel
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.restrictAccess.removeGroup
      operationId: admin_conversations_restrictAccess_removeGroup
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - channel_id
                - group_id
                - team_id
                - token
              properties:
                token:
                  type: string
                  description: "Authentication token. Requires scope: `admin.conversations:write`"
                team_id:
                  type: string
                  description:
                    The workspace where the channel exists. This argument
                    is required for channels only tied to one workspace, and optional
                    for channels that are shared across an organization.
                group_id:
                  type: string
                  description:
                    The [IDP Group](https://slack.com/help/articles/115001435788-Connect-identity-provider-groups-to-your-Enterprise-Grid-org)
                    ID to remove from the private channel.
                channel_id:
                  type: string
                  description: The channel to remove the linked group from.
        required: true
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description:
                  This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description:
                  This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
      security:
        - slackAuth:
            - admin.conversations:write
  /admin.conversations.search:
    get:
      tags:
        - admin.conversations
        - admin
      description: Search for public or private channels in an Enterprise organization.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.search
      operationId: admin_conversations_search
      parameters:
        - name: token
          in: header
          description: "Authentication token. Requires scope: `admin.conversations:read`"
          required: true
          schema:
            type: string
        - name: team_ids
          in: query
          description:
            Comma separated string of team IDs, signifying the workspaces
            to search through.
          schema:
            type: string
        - name: query
          in: query
          description: Name of the the channel to query by.
          schema:
            type: string
        - name: limit
          in: query
          description:
            Maximum number of items to be returned. Must be between 1 - 20
            both inclusive. Default is 10.
          schema:
            type: integer
        - name: cursor
          in: query
          description:
            Set `cursor` to `next_cursor` returned by the previous call to
            list items in the next page.
          schema:
            type: string
        - name: search_channel_types
          in: query
          description:
            The type of channel to include or exclude in the search. For
            example `private` will search private channels, while `private_exclude`
            will exclude them. For a full list of types, check the [Types section](#types).
          schema:
            type: string
        - name: sort
          in: query
          description:
            "Possible values are `relevant` (search ranking based on what
            we think is closest), `name` (alphabetical), `member_count` (number of users
            in the channel), and `created` (date channel was created). You can optionally
            pair this with the `sort_dir` arg to change how it is sorted "
          schema:
            type: string
        - name: sort_dir
          in: query
          description:
            Sort direction. Possible values are `asc` for ascending order
            like (1, 2, 3) or (a, b, c), and `desc` for descending order like (3, 2,
            1) or (c, b, a)
          schema:
            type: string
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: admin.conversations.search schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response of admin.conversations.search
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: admin.conversations.search error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from admin.conversations.search
      security:
        - slackAuth:
            - admin.conversations:read
  /admin.conversations.setConversationPrefs:
    post:
      tags:
        - admin.conversations
        - admin
      description: Set the posting permissions for a public or private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.setConversationPrefs
      operationId: admin_conversations_setConversationPrefs
      parameters:
        - name: token
          in: header
          description: "Authentication token. Requires scope: `admin.conversations:write`"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - channel_id
                - prefs
              properties:
                channel_id:
                  type: string
                  description: The channel to set the prefs for
                prefs:
                  type: string
                  description: The prefs for this channel in a stringified JSON format.
          application/json:
            schema:
              required:
                - channel_id
                - prefs
              properties:
                channel_id:
                  type: string
                  description: The channel to set the prefs for
                prefs:
                  type: string
                  description: The prefs for this channel in a stringified JSON format.
        required: true
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: admin.conversations.setConversationPrefs schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response of admin.conversations.setConversationPrefs
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: admin.conversations.setConversationPrefs error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from admin.conversations.setConversationPrefs
      security:
        - slackAuth:
            - admin.conversations:write
  /admin.conversations.setTeams:
    post:
      tags:
        - admin.conversations
        - admin
      description:
        Set the workspaces in an Enterprise grid org that connect to a
        public or private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.setTeams
      operationId: admin_conversations_setTeams
      parameters:
        - name: token
          in: header
          description: "Authentication token. Requires scope: `admin.conversations:write`"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - channel_id
              properties:
                channel_id:
                  type: string
                  description: The encoded `channel_id` to add or remove to workspaces.
                team_id:
                  type: string
                  description:
                    The workspace to which the channel belongs. Omit this
                    argument if the channel is a cross-workspace shared channel.
                target_team_ids:
                  type: string
                  description:
                    A comma-separated list of workspaces to which the channel
                    should be shared. Not required if the channel is being shared
                    org-wide.
                org_channel:
                  type: boolean
                  description: True if channel has to be converted to an org channel
          application/json:
            schema:
              required:
                - channel_id
              properties:
                channel_id:
                  type: string
                  description: The encoded `channel_id` to add or remove to workspaces.
                team_id:
                  type: string
                  description:
                    The workspace to which the channel belongs. Omit this
                    argument if the channel is a cross-workspace shared channel.
                target_team_ids:
                  type: string
                  description:
                    A comma-separated list of workspaces to which the channel
                    should be shared. Not required if the channel is being shared
                    org-wide.
                org_channel:
                  type: boolean
                  description: True if channel has to be converted to an org channel
        required: true
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description:
                  This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description:
                  This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
      security:
        - slackAuth:
            - admin.conversations:write
  /admin.conversations.unarchive:
    post:
      tags:
        - admin.conversations
        - admin
      description: Unarchive a public or private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.unarchive
      operationId: admin_conversations_unarchive
      parameters:
        - name: token
          in: header
          description: "Authentication token. Requires scope: `admin.conversations:write`"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - channel_id
              properties:
                channel_id:
                  type: string
                  description: The channel to unarchive.
          application/json:
            schema:
              required:
                - channel_id
              properties:
                channel_id:
                  type: string
                  description: The channel to unarchive.
        required: true
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: admin.conversations.unarchive schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response of admin.conversations.unarchive
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: admin.conversations.unarchive error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from admin.conversations.unarchive
      security:
        - slackAuth:
            - admin.conversations:write
  /conversations.archive:
    post:
      tags:
        - conversations
      description: Archives a conversation.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.archive
      operationId: conversations_archive
      parameters:
        - name: token
          in: header
          description: "Authentication token. Requires scope: `conversations:write`"
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  type: string
                  description: ID of conversation to archive
          application/json:
            schema:
              properties:
                channel:
                  type: string
                  description: ID of conversation to archive
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: conversations.archive success schema
                type: object
                additionalProperties:
                  type: object
                description:
                  Schema for successful response conversations.archive
                  method
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: conversations.archive error schema
                type: object
                additionalProperties:
                  type: object
                description:
                  Schema for error response from conversations.archive
                  method
      security:
        - slackAuth:
            - channels:write
            - groups:write
            - im:write
            - mpim:write
  /conversations.close:
    post:
      tags:
        - conversations
      description: Closes a direct message or multi-person direct message.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.close
      operationId: conversations_close
      parameters:
        - name: token
          in: header
          description: "Authentication token. Requires scope: `conversations:write`"
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  type: string
                  description: Conversation to close.
          application/json:
            schema:
              properties:
                channel:
                  type: string
                  description: Conversation to close.
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: conversations.close success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response conversations.close method
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: conversations.close error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.close method
      security:
        - slackAuth:
            - channels:write
            - groups:write
            - im:write
            - mpim:write
  /conversations.create:
    post:
      tags:
        - conversations
      description: Initiates a public or private channel-based conversation
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.create
      operationId: conversations_create
      parameters:
        - name: token
          in: header
          description: "Authentication token. Requires scope: `conversations:write`"
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Name of the public or private channel to create
                is_private:
                  type: boolean
                  description: Create a private channel instead of a public one
          application/json:
            schema:
              properties:
                name:
                  type: string
                  description: Name of the public or private channel to create
                is_private:
                  type: boolean
                  description: Create a private channel instead of a public one
      responses:
        "200":
          description:
            If successful, the command returns a rather stark [conversation
            object](/types/conversation)
          content:
            application/json:
              schema:
                title: conversations.create success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response conversations.create method
        default:
          description: Typical error response when name already in use
          content:
            application/json:
              schema:
                title: conversations.create error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.create method
      security:
        - slackAuth:
            - channels:write
            - groups:write
            - im:write
            - mpim:write
  /conversations.history:
    get:
      tags:
        - conversations
      description: Fetches a conversation's history of messages and events.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.history
      operationId: conversations_history
      parameters:
        - name: token
          in: query
          description: "Authentication token. Requires scope: `conversations:history`"
          schema:
            type: string
        - name: channel
          in: query
          description: Conversation ID to fetch history for.
          schema:
            type: string
        - name: latest
          in: query
          description: End of time range of messages to include in results.
          schema:
            type: number
        - name: oldest
          in: query
          description: Start of time range of messages to include in results.
          schema:
            type: number
        - name: inclusive
          in: query
          description:
            Include messages with latest or oldest timestamp in results only
            when either timestamp is specified.
          schema:
            type: boolean
        - name: limit
          in: query
          description:
            The maximum number of items to return. Fewer than the requested
            number of items may be returned, even if the end of the users list hasn't
            been reached.
          schema:
            type: integer
        - name: cursor
          in: query
          description:
            Paginate through collections of data by setting the `cursor`
            parameter to a `next_cursor` attribute returned by a previous request's
            `response_metadata`. Default value fetches the first "page" of the collection.
            See [pagination](/docs/pagination) for more detail.
          schema:
            type: string
      responses:
        "200":
          description: Typical success response containing a channel's messages
          content:
            application/json:
              schema:
                title: conversations.history success schema
                type: object
                additionalProperties:
                  type: object
                description:
                  Schema for successful response from conversations.history
                  method
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: conversations.history error schema
                type: object
                additionalProperties:
                  type: object
                description:
                  Schema for error response from conversations.history
                  method
      security:
        - slackAuth:
            - channels:history
            - groups:history
            - im:history
            - mpim:history
  /conversations.info:
    get:
      tags:
        - conversations
      description: Retrieve information about a conversation.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.info
      operationId: conversations_info
      parameters:
        - name: token
          in: query
          description: "Authentication token. Requires scope: `conversations:read`"
          schema:
            type: string
        - name: channel
          in: query
          description: Conversation ID to learn more about
          schema:
            type: string
        - name: include_locale
          in: query
          description:
            Set this to `true` to receive the locale for this conversation.
            Defaults to `false`
          schema:
            type: boolean
        - name: include_num_members
          in: query
          description:
            Set to `true` to include the member count for the specified conversation.
            Defaults to `false`
          schema:
            type: boolean
      responses:
        "200":
          description:
            Typical success response for a public channel. (Also, a response
            from a private channel and a multi-party IM is very similar to this example.)
          content:
            application/json:
              schema:
                title: conversations.info success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response conversations.info
        default:
          description: Typical error response when a channel cannot be found
          content:
            application/json:
              schema:
                title: conversations.info error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.info method
      security:
        - slackAuth:
            - channels:read
            - groups:read
            - im:read
            - mpim:read
  /conversations.invite:
    post:
      tags:
        - conversations
      description: Invites users to a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.invite
      operationId: conversations_invite
      parameters:
        - name: token
          in: header
          description: "Authentication token. Requires scope: `conversations:write`"
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  type: string
                  description:
                    The ID of the public or private channel to invite user(s)
                    to.
                users:
                  type: string
                  description:
                    A comma separated list of user IDs. Up to 1000 users
                    may be listed.
          application/json:
            schema:
              properties:
                channel:
                  type: string
                  description:
                    The ID of the public or private channel to invite user(s)
                    to.
                users:
                  type: string
                  description:
                    A comma separated list of user IDs. Up to 1000 users
                    may be listed.
      responses:
        "200":
          description: Typical success response when an invitation is extended
          content:
            application/json:
              schema:
                title: conversations.invite error schema
                type: object
                additionalProperties:
                  type: object
                description:
                  Schema for successful response from conversations.invite
                  method
        default:
          description:
            Typical error response when an invite is attempted on a conversation
            type that does not support it
          content:
            application/json:
              schema:
                title: conversations.invite error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.invite method
      security:
        - slackAuth:
            - channels:write
            - groups:write
            - im:write
            - mpim:write
  /conversations.join:
    post:
      tags:
        - conversations
      description: Joins an existing conversation.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.join
      operationId: conversations_join
      parameters:
        - name: token
          in: header
          description: "Authentication token. Requires scope: `channels:write`"
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  type: string
                  description: ID of conversation to join
          application/json:
            schema:
              properties:
                channel:
                  type: string
                  description: ID of conversation to join
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: conversations.join success schema
                type: object
                additionalProperties:
                  type: object
                description:
                  Schema for successful response from conversations.join
                  method
        default:
          description:
            Typical error response if the conversation is archived and
            cannot be joined
          content:
            application/json:
              schema:
                title: conversations.join error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.join method
      security:
        - slackAuth:
            - channels:write
  /conversations.kick:
    post:
      tags:
        - conversations
      description: Removes a user from a conversation.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.kick
      operationId: conversations_kick
      parameters:
        - name: token
          in: header
          description: "Authentication token. Requires scope: `conversations:write`"
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  type: string
                  description: ID of conversation to remove user from.
                user:
                  type: string
                  description: User ID to be removed.
          application/json:
            schema:
              properties:
                channel:
                  type: string
                  description: ID of conversation to remove user from.
                user:
                  type: string
                  description: User ID to be removed.
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: conversations.kick success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response conversations.kick method
        default:
          description:
            Typical error response when you attempt to kick yourself from
            a channel
          content:
            application/json:
              schema:
                title: conversations.kick error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response conversations.kick method
      security:
        - slackAuth:
            - channels:write
            - groups:write
            - im:write
            - mpim:write
  /conversations.leave:
    post:
      tags:
        - conversations
      description: Leaves a conversation.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.leave
      operationId: conversations_leave
      parameters:
        - name: token
          in: header
          description: "Authentication token. Requires scope: `conversations:write`"
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  type: string
                  description: Conversation to leave
          application/json:
            schema:
              properties:
                channel:
                  type: string
                  description: Conversation to leave
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: conversations.leave success schema
                type: object
                additionalProperties:
                  type: object
                description:
                  Schema for successful response from conversations.leave
                  method
        default:
          description:
            Typical error response when attempting to leave a workspace's
            "general" channel
          content:
            application/json:
              schema:
                title: conversations.leave error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.leave method
      security:
        - slackAuth:
            - channels:write
            - groups:write
            - im:write
            - mpim:write
  /conversations.list:
    get:
      tags:
        - conversations
      description: Lists all channels in a Slack team.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.list
      operationId: conversations_list
      parameters:
        - name: token
          in: query
          description: "Authentication token. Requires scope: `conversations:read`"
          schema:
            type: string
        - name: exclude_archived
          in: query
          description: Set to `true` to exclude archived channels from the list
          schema:
            type: boolean
        - name: types
          in: query
          description:
            Mix and match channel types by providing a comma-separated list
            of any combination of `public_channel`, `private_channel`, `mpim`, `im`
          schema:
            type: string
        - name: limit
          in: query
          description:
            The maximum number of items to return. Fewer than the requested
            number of items may be returned, even if the end of the list hasn't been
            reached. Must be an integer no larger than 1000.
          schema:
            type: integer
        - name: cursor
          in: query
          description:
            Paginate through collections of data by setting the `cursor`
            parameter to a `next_cursor` attribute returned by a previous request's
            `response_metadata`. Default value fetches the first "page" of the collection.
            See [pagination](/docs/pagination) for more detail.
          schema:
            type: string
      responses:
        "200":
          description: Typical success response with only public channels
          content:
            application/json:
              schema:
                title: conversations.list success schema
                type: object
                additionalProperties:
                  type: object
                description:
                  Schema for successful response from conversations.list
                  method
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: conversations.list error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.list method
      security:
        - slackAuth:
            - channels:read
            - groups:read
            - im:read
            - mpim:read
  /conversations.mark:
    post:
      tags:
        - conversations
      description: Sets the read cursor in a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.mark
      operationId: conversations_mark
      parameters:
        - name: token
          in: header
          description: "Authentication token. Requires scope: `conversations:write`"
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  type: string
                  description: Channel or conversation to set the read cursor for.
                ts:
                  type: number
                  description:
                    Unique identifier of message you want marked as most
                    recently seen in this conversation.
          application/json:
            schema:
              properties:
                channel:
                  type: string
                  description: Channel or conversation to set the read cursor for.
                ts:
                  type: number
                  description:
                    Unique identifier of message you want marked as most
                    recently seen in this conversation.
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: conversations.mark success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response conversations.mark method
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: conversations.mark error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.mark method
      security:
        - slackAuth:
            - channels:write
            - groups:write
            - im:write
            - mpim:write
  /conversations.members:
    get:
      tags:
        - conversations
      description: Retrieve members of a conversation.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.members
      operationId: conversations_members
      parameters:
        - name: token
          in: query
          description: "Authentication token. Requires scope: `conversations:read`"
          schema:
            type: string
        - name: channel
          in: query
          description: ID of the conversation to retrieve members for
          schema:
            type: string
        - name: limit
          in: query
          description:
            The maximum number of items to return. Fewer than the requested
            number of items may be returned, even if the end of the users list hasn't
            been reached.
          schema:
            type: integer
        - name: cursor
          in: query
          description:
            Paginate through collections of data by setting the `cursor`
            parameter to a `next_cursor` attribute returned by a previous request's
            `response_metadata`. Default value fetches the first "page" of the collection.
            See [pagination](/docs/pagination) for more detail.
          schema:
            type: string
      responses:
        "200":
          description: Typical paginated success response
          content:
            application/json:
              schema:
                title: conversations.members success schema
                type: object
                additionalProperties:
                  type: object
                description:
                  Schema for successful response conversations.members
                  method
        default:
          description: Typical error response when an invalid cursor is provided
          content:
            application/json:
              schema:
                title: conversations.members error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response conversations.members method
      security:
        - slackAuth:
            - channels:read
            - groups:read
            - im:read
            - mpim:read
  /conversations.open:
    post:
      tags:
        - conversations
      description: Opens or resumes a direct message or multi-person direct message.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.open
      operationId: conversations_open
      parameters:
        - name: token
          in: header
          description: "Authentication token. Requires scope: `conversations:write`"
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  type: string
                  description:
                    Resume a conversation by supplying an `im` or `mpim`'s
                    ID. Or provide the `users` field instead.
                users:
                  type: string
                  description:
                    Comma separated lists of users. If only one user is
                    included, this creates a 1:1 DM.  The ordering of the users is
                    preserved whenever a multi-person direct message is returned.
                    Supply a `channel` when not supplying `users`.
                return_im:
                  type: boolean
                  description:
                    Boolean, indicates you want the full IM channel definition
                    in the response.
          application/json:
            schema:
              properties:
                channel:
                  type: string
                  description:
                    Resume a conversation by supplying an `im` or `mpim`'s
                    ID. Or provide the `users` field instead.
                users:
                  type: string
                  description:
                    Comma separated lists of users. If only one user is
                    included, this creates a 1:1 DM.  The ordering of the users is
                    preserved whenever a multi-person direct message is returned.
                    Supply a `channel` when not supplying `users`.
                return_im:
                  type: boolean
                  description:
                    Boolean, indicates you want the full IM channel definition
                    in the response.
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: conversations.open success schema
                type: object
                additionalProperties:
                  type: object
                description:
                  Schema for successful response from conversations.open
                  method when opening channels, ims, mpims
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: conversations.open error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.open method
      security:
        - slackAuth:
            - channels:write
            - groups:write
            - im:write
            - mpim:write
  /conversations.rename:
    post:
      tags:
        - conversations
      description: Renames a conversation.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.rename
      operationId: conversations_rename
      parameters:
        - name: token
          in: header
          description: "Authentication token. Requires scope: `conversations:write`"
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  type: string
                  description: ID of conversation to rename
                name:
                  type: string
                  description: New name for conversation.
          application/json:
            schema:
              properties:
                channel:
                  type: string
                  description: ID of conversation to rename
                name:
                  type: string
                  description: New name for conversation.
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: conversations.rename success schema
                type: object
                additionalProperties:
                  type: object
                description:
                  Schema for successful response from conversations.rename
                  method
        default:
          description:
            Typical error response when the calling user is not a member
            of the conversation
          content:
            application/json:
              schema:
                title: conversations.rename error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.rename method
      security:
        - slackAuth:
            - channels:write
            - groups:write
            - im:write
            - mpim:write
  /conversations.replies:
    get:
      tags:
        - conversations
      description: Retrieve a thread of messages posted to a conversation
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.replies
      operationId: conversations_replies
      parameters:
        - name: token
          in: query
          description: "Authentication token. Requires scope: `conversations:history`"
          schema:
            type: string
        - name: channel
          in: query
          description: Conversation ID to fetch thread from.
          schema:
            type: string
        - name: ts
          in: query
          description:
            Unique identifier of a thread's parent message. `ts` must be
            the timestamp of an existing message with 0 or more replies. If there are
            no replies then just the single message referenced by `ts` will return -
            it is just an ordinary, unthreaded message.
          schema:
            type: number
        - name: latest
          in: query
          description: End of time range of messages to include in results.
          schema:
            type: number
        - name: oldest
          in: query
          description: Start of time range of messages to include in results.
          schema:
            type: number
        - name: inclusive
          in: query
          description:
            Include messages with latest or oldest timestamp in results only
            when either timestamp is specified.
          schema:
            type: boolean
        - name: limit
          in: query
          description:
            The maximum number of items to return. Fewer than the requested
            number of items may be returned, even if the end of the users list hasn't
            been reached.
          schema:
            type: integer
        - name: cursor
          in: query
          description:
            Paginate through collections of data by setting the `cursor`
            parameter to a `next_cursor` attribute returned by a previous request's
            `response_metadata`. Default value fetches the first "page" of the collection.
            See [pagination](/docs/pagination) for more detail.
          schema:
            type: string
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: conversations.replies success schema
                type: object
                additionalProperties:
                  type: object
                description:
                  Schema for successful response from conversations.replies
                  method
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: conversations.replies error schema
                type: object
                additionalProperties:
                  type: object
                description:
                  Schema for error response from conversations.replies
                  method
      security:
        - slackAuth:
            - channels:history
            - groups:history
            - im:history
            - mpim:history
  /conversations.setPurpose:
    post:
      tags:
        - conversations
      description: Sets the purpose for a conversation.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.setPurpose
      operationId: conversations_setPurpose
      parameters:
        - name: token
          in: header
          description: "Authentication token. Requires scope: `conversations:write`"
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  type: string
                  description: Conversation to set the purpose of
                purpose:
                  type: string
                  description: A new, specialer purpose
          application/json:
            schema:
              properties:
                channel:
                  type: string
                  description: Conversation to set the purpose of
                purpose:
                  type: string
                  description: A new, specialer purpose
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: conversations.setPurpose success schema
                type: object
                additionalProperties:
                  type: object
                description:
                  Schema for successful response from conversations.setPurpose
                  method
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: conversations.setPurpose error schema
                type: object
                additionalProperties:
                  type: object
                description:
                  Schema for error response from conversations.setPurpose
                  method
      security:
        - slackAuth:
            - channels:write
            - groups:write
            - im:write
            - mpim:write
  /conversations.setTopic:
    post:
      tags:
        - conversations
      description: Sets the topic for a conversation.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.setTopic
      operationId: conversations_setTopic
      parameters:
        - name: token
          in: header
          description: "Authentication token. Requires scope: `conversations:write`"
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  type: string
                  description: Conversation to set the topic of
                topic:
                  type: string
                  description:
                    The new topic string. Does not support formatting or
                    linkification.
          application/json:
            schema:
              properties:
                channel:
                  type: string
                  description: Conversation to set the topic of
                topic:
                  type: string
                  description:
                    The new topic string. Does not support formatting or
                    linkification.
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: conversations.setTopic success schema
                type: object
                additionalProperties:
                  type: object
                description:
                  Schema for successful response from conversations.setTopic
                  method
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: conversations.setTopic error schema
                type: object
                additionalProperties:
                  type: object
                description:
                  Schema for error response from conversations.setTopic
                  method
      security:
        - slackAuth:
            - channels:write
            - groups:write
            - im:write
            - mpim:write
  /conversations.unarchive:
    post:
      tags:
        - conversations
      description: Reverses conversation archival.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.unarchive
      operationId: conversations_unarchive
      parameters:
        - name: token
          in: header
          description: "Authentication token. Requires scope: `conversations:write`"
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  type: string
                  description: ID of conversation to unarchive
          application/json:
            schema:
              properties:
                channel:
                  type: string
                  description: ID of conversation to unarchive
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: conversations.unarchive success schema
                type: object
                additionalProperties:
                  type: object
                description:
                  Schema for successful response from conversations.unarchive
                  method
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: conversations.unarchive error schema
                type: object
                additionalProperties:
                  type: object
                description:
                  Schema for error response from conversations.unarchive
                  method
      security:
        - slackAuth:
            - channels:write
            - groups:write
            - im:write
            - mpim:write
