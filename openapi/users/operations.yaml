paths:
  /admin.users.assign:
    post:
      tags:
      - admin.users
      - admin
      description: Add an Enterprise user to a workspace.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.users.assign
      operationId: admin_users_assign
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `admin.users:write`'
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - team_id
              - user_id
              properties:
                team_id:
                  type: string
                  description: The ID (`T1234`) of the workspace.
                user_id:
                  type: string
                  description: The ID of the user to add to the workspace.
                is_restricted:
                  type: boolean
                  description: True if user should be added to the workspace as a
                    guest.
                is_ultra_restricted:
                  type: boolean
                  description: True if user should be added to the workspace as a
                    single-channel guest.
                channel_ids:
                  type: string
                  description: Comma separated values of channel IDs to add user in
                    the new workspace.
          application/json:
            schema:
              required:
              - team_id
              - user_id
              properties:
                team_id:
                  type: string
                  description: The ID (`T1234`) of the workspace.
                user_id:
                  type: string
                  description: The ID of the user to add to the workspace.
                is_restricted:
                  type: boolean
                  description: True if user should be added to the workspace as a
                    guest.
                is_ultra_restricted:
                  type: boolean
                  description: True if user should be added to the workspace as a
                    single-channel guest.
                channel_ids:
                  type: string
                  description: Comma separated values of channel IDs to add user in
                    the new workspace.
        required: true
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
      security:
      - slackAuth:
        - admin.users:write
  /admin.users.invite:
    post:
      tags:
      - admin.users
      - admin
      description: Invite a user to a workspace.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.users.invite
      operationId: admin_users_invite
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `admin.users:write`'
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - channel_ids
              - email
              - team_id
              properties:
                team_id:
                  type: string
                  description: The ID (`T1234`) of the workspace.
                email:
                  type: string
                  description: The email address of the person to invite.
                channel_ids:
                  type: string
                  description: A comma-separated list of `channel_id`s for this user
                    to join. At least one channel is required.
                custom_message:
                  type: string
                  description: An optional message to send to the user in the invite
                    email.
                real_name:
                  type: string
                  description: Full name of the user.
                resend:
                  type: boolean
                  description: 'Allow this invite to be resent in the future if a
                    user has not signed up yet. (default: false)'
                is_restricted:
                  type: boolean
                  description: 'Is this user a multi-channel guest user? (default:
                    false)'
                is_ultra_restricted:
                  type: boolean
                  description: 'Is this user a single channel guest user? (default:
                    false)'
                guest_expiration_ts:
                  type: string
                  description: Timestamp when guest account should be disabled. Only
                    include this timestamp if you are inviting a guest user and you
                    want their account to expire on a certain date.
          application/json:
            schema:
              required:
              - channel_ids
              - email
              - team_id
              properties:
                team_id:
                  type: string
                  description: The ID (`T1234`) of the workspace.
                email:
                  type: string
                  description: The email address of the person to invite.
                channel_ids:
                  type: string
                  description: A comma-separated list of `channel_id`s for this user
                    to join. At least one channel is required.
                custom_message:
                  type: string
                  description: An optional message to send to the user in the invite
                    email.
                real_name:
                  type: string
                  description: Full name of the user.
                resend:
                  type: boolean
                  description: 'Allow this invite to be resent in the future if a
                    user has not signed up yet. (default: false)'
                is_restricted:
                  type: boolean
                  description: 'Is this user a multi-channel guest user? (default:
                    false)'
                is_ultra_restricted:
                  type: boolean
                  description: 'Is this user a single channel guest user? (default:
                    false)'
                guest_expiration_ts:
                  type: string
                  description: Timestamp when guest account should be disabled. Only
                    include this timestamp if you are inviting a guest user and you
                    want their account to expire on a certain date.
        required: true
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
      security:
      - slackAuth:
        - admin.users:write
  /admin.users.list:
    get:
      tags:
      - admin.users
      - admin
      description: List users on a workspace
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.users.list
      operationId: admin_users_list
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `admin.users:read`'
        required: true
        schema:
          type: string
      - name: team_id
        in: query
        description: The ID (`T1234`) of the workspace.
        required: true
        schema:
          type: string
      - name: cursor
        in: query
        description: Set `cursor` to `next_cursor` returned by the previous call to
          list items in the next page.
        schema:
          type: string
      - name: limit
        in: query
        description: Limit for how many users to be retrieved per page
        schema:
          type: integer
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
      security:
      - slackAuth:
        - admin.users:read
  /admin.users.remove:
    post:
      tags:
      - admin.users
      - admin
      description: Remove a user from a workspace.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.users.remove
      operationId: admin_users_remove
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `admin.users:write`'
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - team_id
              - user_id
              properties:
                team_id:
                  type: string
                  description: The ID (`T1234`) of the workspace.
                user_id:
                  type: string
                  description: The ID of the user to remove.
          application/json:
            schema:
              required:
              - team_id
              - user_id
              properties:
                team_id:
                  type: string
                  description: The ID (`T1234`) of the workspace.
                user_id:
                  type: string
                  description: The ID of the user to remove.
        required: true
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
      security:
      - slackAuth:
        - admin.users:write
  /admin.users.session.invalidate:
    post:
      tags:
      - admin.users.session
      - admin
      description: Invalidate a single session for a user by session_id
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.users.session.invalidate
      operationId: admin_users_session_invalidate
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `admin.users:write`'
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - session_id
              - team_id
              properties:
                team_id:
                  type: string
                  description: ID of the team that the session belongs to
                session_id:
                  type: integer
                  format: int32
          application/json:
            schema:
              required:
              - session_id
              - team_id
              properties:
                team_id:
                  type: string
                  description: ID of the team that the session belongs to
                session_id:
                  type: integer
                  format: int32
        required: true
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
      security:
      - slackAuth:
        - admin.users:write
  /admin.users.session.reset:
    post:
      tags:
      - admin.users.session
      - admin
      description: Wipes all valid sessions on all devices for a given user
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.users.session.reset
      operationId: admin_users_session_reset
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `admin.users:write`'
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - user_id
              properties:
                user_id:
                  type: string
                  description: The ID of the user to wipe sessions for
                mobile_only:
                  type: boolean
                  description: 'Only expire mobile sessions (default: false)'
                web_only:
                  type: boolean
                  description: 'Only expire web sessions (default: false)'
          application/json:
            schema:
              required:
              - user_id
              properties:
                user_id:
                  type: string
                  description: The ID of the user to wipe sessions for
                mobile_only:
                  type: boolean
                  description: 'Only expire mobile sessions (default: false)'
                web_only:
                  type: boolean
                  description: 'Only expire web sessions (default: false)'
        required: true
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
      security:
      - slackAuth:
        - admin.users:write
  /admin.users.setAdmin:
    post:
      tags:
      - admin.users
      - admin
      description: Set an existing guest, regular user, or owner to be an admin user.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.users.setAdmin
      operationId: admin_users_setAdmin
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `admin.users:write`'
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - team_id
              - user_id
              properties:
                team_id:
                  type: string
                  description: The ID (`T1234`) of the workspace.
                user_id:
                  type: string
                  description: The ID of the user to designate as an admin.
          application/json:
            schema:
              required:
              - team_id
              - user_id
              properties:
                team_id:
                  type: string
                  description: The ID (`T1234`) of the workspace.
                user_id:
                  type: string
                  description: The ID of the user to designate as an admin.
        required: true
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
      security:
      - slackAuth:
        - admin.users:write
  /admin.users.setExpiration:
    post:
      tags:
      - admin.users
      - admin
      description: Set an expiration for a guest user
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.users.setExpiration
      operationId: admin_users_setExpiration
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `admin.users:write`'
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - expiration_ts
              - team_id
              - user_id
              properties:
                team_id:
                  type: string
                  description: The ID (`T1234`) of the workspace.
                user_id:
                  type: string
                  description: The ID of the user to set an expiration for.
                expiration_ts:
                  type: integer
                  description: Timestamp when guest account should be disabled.
                  format: int32
          application/json:
            schema:
              required:
              - expiration_ts
              - team_id
              - user_id
              properties:
                team_id:
                  type: string
                  description: The ID (`T1234`) of the workspace.
                user_id:
                  type: string
                  description: The ID of the user to set an expiration for.
                expiration_ts:
                  type: integer
                  description: Timestamp when guest account should be disabled.
                  format: int32
        required: true
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
      security:
      - slackAuth:
        - admin.users:write
  /admin.users.setOwner:
    post:
      tags:
      - admin.users
      - admin
      description: Set an existing guest, regular user, or admin user to be a workspace
        owner.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.users.setOwner
      operationId: admin_users_setOwner
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `admin.users:write`'
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - team_id
              - user_id
              properties:
                team_id:
                  type: string
                  description: The ID (`T1234`) of the workspace.
                user_id:
                  type: string
                  description: Id of the user to promote to owner.
          application/json:
            schema:
              required:
              - team_id
              - user_id
              properties:
                team_id:
                  type: string
                  description: The ID (`T1234`) of the workspace.
                user_id:
                  type: string
                  description: Id of the user to promote to owner.
        required: true
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
      security:
      - slackAuth:
        - admin.users:write
  /admin.users.setRegular:
    post:
      tags:
      - admin.users
      - admin
      description: Set an existing guest user, admin user, or owner to be a regular
        user.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.users.setRegular
      operationId: admin_users_setRegular
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `admin.users:write`'
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - team_id
              - user_id
              properties:
                team_id:
                  type: string
                  description: The ID (`T1234`) of the workspace.
                user_id:
                  type: string
                  description: The ID of the user to designate as a regular user.
          application/json:
            schema:
              required:
              - team_id
              - user_id
              properties:
                team_id:
                  type: string
                  description: The ID (`T1234`) of the workspace.
                user_id:
                  type: string
                  description: The ID of the user to designate as a regular user.
        required: true
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: Default success template
                type: object
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: Default error template
                type: object
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
      security:
      - slackAuth:
        - admin.users:write

  /users.conversations:
    get:
      tags:
      - users
      description: List conversations the calling user may access.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.conversations
      operationId: users_conversations
      parameters:
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `conversations:read`'
        schema:
          type: string
      - name: user
        in: query
        description: Browse conversations by a specific user ID's membership. Non-public
          channels are restricted to those where the calling user shares membership.
        schema:
          type: string
      - name: types
        in: query
        description: Mix and match channel types by providing a comma-separated list
          of any combination of `public_channel`, `private_channel`, `mpim`, `im`
        schema:
          type: string
      - name: exclude_archived
        in: query
        description: Set to `true` to exclude archived channels from the list
        schema:
          type: boolean
      - name: limit
        in: query
        description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the list hasn't been
          reached. Must be an integer no larger than 1000.
        schema:
          type: integer
      - name: cursor
        in: query
        description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
        schema:
          type: string
      responses:
        "200":
          description: Typical success response with only public channels. Note how
            `num_members` and `is_member` are not returned like typical `conversations`
            objects.
          content:
            application/json:
              schema:
                title: users.conversations success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from users.conversations
                  method. Returned conversation objects do not include `num_members`
                  or `is_member`
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: users.conversations error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from users.conversations method
      security:
      - slackAuth:
        - channels:read
        - groups:read
        - im:read
        - mpim:read
  /users.deletePhoto:
    post:
      tags:
      - users
      description: Delete the user profile photo
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.deletePhoto
      operationId: users_deletePhoto
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - token
              properties:
                token:
                  type: string
                  description: 'Authentication token. Requires scope: `users.profile:write`'
        required: true
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: users.deletePhoto schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from users.deletePhoto
                  method
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: users.deletePhoto error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from users.deletePhoto method
      security:
      - slackAuth:
        - users.profile:write
  /users.getPresence:
    get:
      tags:
      - users
      description: Gets user presence information.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.getPresence
      operationId: users_getPresence
      parameters:
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `users:read`'
        required: true
        schema:
          type: string
      - name: user
        in: query
        description: User to get presence info on. Defaults to the authed user.
        schema:
          type: string
      responses:
        "200":
          description: When requesting information for a different user, this method
            just returns the current presence (either `active` or `away`).
          content:
            application/json:
              schema:
                title: 'API method: users.getPresence'
                type: object
                additionalProperties:
                  type: object
                description: Generated from users.getPresence with shasum e7251aec575d8863f9e0eb38663ae9dc26655f65
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: users.counts error schema
                type: object
                additionalProperties:
                  type: object
                  properties: {}
                description: Schema for error response users.getPresence method
      security:
      - slackAuth:
        - users:read
  /users.identity:
    get:
      tags:
      - users
      description: Get a user's identity.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.identity
      operationId: users_identity
      parameters:
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `identity.basic`'
        schema:
          type: string
      responses:
        "200":
          description: 'You will receive at a minimum the following information:'
          content:
            application/json:
              schema:
                title: users.identity schema
                type: object
                properties:
                  temp_oneof_00:
                    required:
                    - ok
                    - team
                    - user
                    type: object
                    properties:
                      ok:
                        $ref: '#/components/schemas/defs_ok_true'
                      team:
                        required:
                        - id
                        type: object
                        properties:
                          id:
                            $ref: '#/components/schemas/defs_team'
                      user:
                        required:
                        - id
                        - name
                        type: object
                        properties:
                          id:
                            $ref: '#/components/schemas/defs_user_id'
                          name:
                            type: string
                    description: Schema for 'identity.basic' scope
                  temp_oneof_01:
                    required:
                    - ok
                    - team
                    - user
                    type: object
                    properties:
                      ok:
                        $ref: '#/components/schemas/defs_ok_true'
                      team:
                        required:
                        - id
                        type: object
                        properties:
                          id:
                            $ref: '#/components/schemas/defs_team'
                      user:
                        required:
                        - email
                        - id
                        - name
                        type: object
                        properties:
                          email:
                            type: string
                            format: email
                          id:
                            $ref: '#/components/schemas/defs_user_id'
                          name:
                            type: string
                    description: Schema for 'identity.basic,identity.email' scopes
                  temp_oneof_02:
                    required:
                    - ok
                    - team
                    - user
                    type: object
                    properties:
                      ok:
                        $ref: '#/components/schemas/defs_ok_true'
                      team:
                        required:
                        - id
                        type: object
                        properties:
                          id:
                            $ref: '#/components/schemas/defs_team'
                      user:
                        required:
                        - id
                        - image_192
                        - image_24
                        - image_32
                        - image_48
                        - image_512
                        - image_72
                        - name
                        type: object
                        properties:
                          id:
                            $ref: '#/components/schemas/defs_user_id'
                          image_192:
                            type: string
                            format: url
                          image_24:
                            type: string
                            format: url
                          image_32:
                            type: string
                            format: url
                          image_48:
                            type: string
                            format: url
                          image_512:
                            type: string
                            format: url
                          image_72:
                            type: string
                            format: url
                          name:
                            type: string
                    description: Schema for 'identity.basic,identity.avatar' scopes
                  temp_oneof_03:
                    required:
                    - ok
                    - team
                    - user
                    type: object
                    properties:
                      ok:
                        $ref: '#/components/schemas/defs_ok_true'
                      team:
                        required:
                        - domain
                        - id
                        - image_102
                        - image_132
                        - image_230
                        - image_34
                        - image_44
                        - image_68
                        - image_88
                        - image_default
                        - name
                        type: object
                        properties:
                          domain:
                            type: string
                          id:
                            $ref: '#/components/schemas/defs_team'
                          image_102:
                            type: string
                            format: url
                          image_132:
                            type: string
                            format: url
                          image_230:
                            type: string
                            format: url
                          image_34:
                            type: string
                            format: url
                          image_44:
                            type: string
                            format: url
                          image_68:
                            type: string
                            format: url
                          image_88:
                            type: string
                            format: url
                          image_default:
                            type: boolean
                          name:
                            type: string
                      user:
                        required:
                        - id
                        - name
                        type: object
                        properties:
                          id:
                            $ref: '#/components/schemas/defs_user_id'
                          name:
                            type: string
                    description: Schema for 'identity.basic,identity.team' scopes
                description: Schema for successful response from users.identity method
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: users.identity error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from users.identity method
      security:
      - slackAuth:
        - identity.basic
  /users.info:
    get:
      tags:
      - users
      description: Gets information about a user.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.info
      operationId: users_info
      parameters:
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `users:read`'
        required: true
        schema:
          type: string
      - name: include_locale
        in: query
        description: Set this to `true` to receive the locale for this user. Defaults
          to `false`
        schema:
          type: boolean
      - name: user
        in: query
        description: User to get info on
        schema:
          type: string
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: users.info success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from users.info method
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: users.info error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from users.info method
      security:
      - slackAuth:
        - users:read
  /users.list:
    get:
      tags:
      - users
      description: Lists all users in a Slack team.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.list
      operationId: users_list
      parameters:
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `users:read`'
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the users list hasn't
          been reached. Providing no `limit` value will result in Slack attempting
          to deliver you the entire result set. If the collection is too large you
          may experience `limit_required` or HTTP 500 errors.
        schema:
          type: integer
      - name: cursor
        in: query
        description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
        schema:
          type: string
      - name: include_locale
        in: query
        description: Set this to `true` to receive the locale for users. Defaults
          to `false`
        schema:
          type: boolean
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: users.list schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from users.list method
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: users.list error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from users.list method
      security:
      - slackAuth:
        - users:read
  /users.lookupByEmail:
    get:
      tags:
      - users
      description: Find a user with an email address.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.lookupByEmail
      operationId: users_lookupByEmail
      parameters:
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `users:read.email`'
        required: true
        schema:
          type: string
      - name: email
        in: query
        description: An email address belonging to a user in the workspace
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: users.lookupByEmail success schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from users.lookupByEmail
                  method
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: users.lookupByEmail error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from users.lookupByEmail method
      security:
      - slackAuth:
        - users:read.email
  /users.profile.get:
    get:
      tags:
      - users.profile
      - users
      description: Retrieves a user's profile information.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.profile.get
      operationId: users_profile_get
      parameters:
      - name: token
        in: query
        description: 'Authentication token. Requires scope: `users.profile:read`'
        required: true
        schema:
          type: string
      - name: include_labels
        in: query
        description: Include labels for each ID in custom profile fields
        schema:
          type: boolean
      - name: user
        in: query
        description: User to retrieve profile info for
        schema:
          type: string
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: users.profile.get schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from users.profile.get
                  method
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: users.profile.get error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from users.profile.get method
      security:
      - slackAuth:
        - users.profile:read
  /users.profile.set:
    post:
      tags:
      - users.profile
      - users
      description: Set the profile information for a user.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.profile.set
      operationId: users_profile_set
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `users.profile:write`'
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Name of a single key to set. Usable only if `profile`
                    is not passed.
                profile:
                  type: string
                  description: Collection of key:value pairs presented as a URL-encoded
                    JSON hash. At most 50 fields may be set. Each field name is limited
                    to 255 characters.
                user:
                  type: string
                  description: ID of user to change. This argument may only be specified
                    by team admins on paid teams.
                value:
                  type: string
                  description: Value to set a single key to. Usable only if `profile`
                    is not passed.
          application/json:
            schema:
              properties:
                name:
                  type: string
                  description: Name of a single key to set. Usable only if `profile`
                    is not passed.
                profile:
                  type: string
                  description: Collection of key:value pairs presented as a URL-encoded
                    JSON hash. At most 50 fields may be set. Each field name is limited
                    to 255 characters.
                user:
                  type: string
                  description: ID of user to change. This argument may only be specified
                    by team admins on paid teams.
                value:
                  type: string
                  description: Value to set a single key to. Usable only if `profile`
                    is not passed.
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: users.profile.set schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from users.profile.set
                  method
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: users.profile.set error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from users.profile.set method
      security:
      - slackAuth:
        - users.profile:write
  /users.setActive:
    post:
      tags:
      - users
      description: Marked a user as active. Deprecated and non-functional.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.setActive
      operationId: users_setActive
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `users:write`'
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: users.setActive schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from users.setActive method
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: users.setActive error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from users.setActive method
      security:
      - slackAuth:
        - users:write
  /users.setPhoto:
    post:
      tags:
      - users
      description: Set the user profile photo
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.setPhoto
      operationId: users_setPhoto
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - token
              properties:
                token:
                  type: string
                  description: 'Authentication token. Requires scope: `users.profile:write`'
                crop_w:
                  type: string
                  description: Width/height of crop box (always square)
                crop_x:
                  type: string
                  description: X coordinate of top-left corner of crop box
                crop_y:
                  type: string
                  description: Y coordinate of top-left corner of crop box
                image:
                  type: string
                  description: File contents via `multipart/form-data`.
        required: true
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: users.setPhoto schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from users.setPhoto method
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: users.setPhoto error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from users.setPhoto method
      security:
      - slackAuth:
        - users.profile:write
  /users.setPresence:
    post:
      tags:
      - users
      description: Manually sets user presence.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.setPresence
      operationId: users_setPresence
      parameters:
      - name: token
        in: header
        description: 'Authentication token. Requires scope: `users:write`'
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - presence
              properties:
                presence:
                  type: string
                  description: Either `auto` or `away`
          application/json:
            schema:
              required:
              - presence
              properties:
                presence:
                  type: string
                  description: Either `auto` or `away`
        required: true
      responses:
        "200":
          description: Typical success response
          content:
            application/json:
              schema:
                title: users.setPresence schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for successful response from users.setPresence
                  method
        default:
          description: Typical error response
          content:
            application/json:
              schema:
                title: users.setPresence error schema
                type: object
                additionalProperties:
                  type: object
                description: Schema for error response from users.setPresence method
      security:
      - slackAuth:
        - users:write
