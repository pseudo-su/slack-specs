components:
  headers: {}
  parameters: {}
  responses: {}
  schemas:
    blocks:
      description: This is a very loose definition, in the future, we'll populate
        this with deeper schema in this definition namespace.
      items:
        properties:
          type:
            type: string
        required:
        - type
        type: object
      title: Block Kit blocks
      type: array
    conversations.list_Channel:
      description: Public slack channel
      properties:
        created:
          example: 1449252889
          type: number
        creator:
          example: U012A3CDE
          type: string
        id:
          example: C012AB3CD
          type: string
        is_archived:
          example: false
          type: boolean
        is_channel:
          example: true
          type: boolean
        is_ext_shared:
          example: false
          type: boolean
        is_general:
          example: true
          type: boolean
        is_group:
          example: false
          type: boolean
        is_im:
          example: false
          type: boolean
        is_member:
          example: true
          type: boolean
        is_mpim:
          example: false
          type: boolean
        is_org_shared:
          example: false
          type: boolean
        is_pending_ext_shared:
          example: false
          type: boolean
        is_private:
          example: false
          type: boolean
        is_shared:
          example: false
          type: boolean
        name:
          example: general
          type: string
        name_normalized:
          example: general
          type: string
        num_members:
          example: 4
          type: number
        pending_shared:
          example: []
          items:
            type: object
          type: array
        previous_names:
          items:
            example: previous-channel-name
            type: string
          type: array
        purpose:
          properties:
            creator:
              example: U061F7AUR
              type: string
            last_set:
              example: 1493657761
              type: number
            value:
              example: 'Group messaging with: @mr.banks @slactions-jackson @beforebot'
              type: string
          required:
          - value
          - creator
          - last_set
          type: object
        topic:
          properties:
            creator:
              example: U061F7AUR
              type: string
            last_set:
              example: 1493657761
              type: number
            value:
              example: Group messaging
              type: string
          required:
          - value
          - creator
          - last_set
          type: object
        unlinked:
          example: 0
          type: number
      required:
      - id
      - name
      - is_channel
      - created
      - creator
      - is_archived
      - is_general
      - unlinked
      - name_normalized
      - is_shared
      - is_ext_shared
      - is_org_shared
      - pending_shared
      - is_pending_ext_shared
      - is_member
      - is_private
      - topic
      - purpose
      - previous_names
      - num_members
      type: object
    conversations.list_ConversationType:
      enum:
      - public_channel
      - private_channel
      - im
      - npim
      type: string
    conversations.list_ErrorResponseBody:
      additionalProperties: true
      description: Schema for error response from conversations.list method
      properties:
        error:
          example: invalid_auth
          type: string
        ok:
          example: false
          type: boolean
      required:
      - ok
      - error
      title: conversations.list error schema
      type: object
    conversations.list_Group:
      description: Private slack channel
      properties:
        created:
          example: 1493657761
          type: number
        creator:
          example: U061F7AUR
          type: string
        id:
          example: G0AKFJBEU
          type: string
        is_archived:
          example: false
          type: boolean
        is_channel:
          example: false
          type: boolean
        is_ext_shared:
          example: false
          type: boolean
        is_general:
          example: false
          type: boolean
        is_group:
          example: true
          type: boolean
        is_im:
          example: false
          type: boolean
        is_member:
          example: true
          type: boolean
        is_mpim:
          example: true
          type: boolean
        is_open:
          example: true
          type: boolean
        is_org_shared:
          example: false
          type: boolean
        is_pending_ext_shared:
          example: false
          type: boolean
        is_private:
          example: true
          type: boolean
        is_shared:
          example: false
          type: boolean
        name:
          example: mpdm-mr.banks--slactions-jackson--beforebot-1
          type: string
        name_normalized:
          example: mpdm-mr.banks--slactions-jackson--beforebot-1
          type: string
        pending_shared:
          example: []
          items:
            type: object
          type: array
        priority:
          example: 0
          type: number
        purpose:
          properties:
            creator:
              example: U061F7AUR
              type: string
            last_set:
              example: 1493657761
              type: number
            value:
              example: 'Group messaging with: @mr.banks @slactions-jackson @beforebot'
              type: string
          required:
          - value
          - creator
          - last_set
          type: object
        topic:
          properties:
            creator:
              example: U061F7AUR
              type: string
            last_set:
              example: 1493657761
              type: number
            value:
              example: Group messaging
              type: string
          required:
          - value
          - creator
          - last_set
          type: object
        unlinked:
          example: 0
          type: number
      required:
      - id
      - name
      - is_group
      - created
      - creator
      - is_archived
      - is_general
      - unlinked
      - name_normalized
      - is_shared
      - is_ext_shared
      - is_org_shared
      - pending_shared
      - is_pending_ext_shared
      - is_member
      - is_private
      - is_open
      - topic
      - purpose
      - priority
      type: object
    conversations.list_Im:
      description: Single party instant message
      properties:
        created:
          example: 1498500348
          type: number
        id:
          example: D0C0F7S8Y
          type: string
        is_im:
          example: true
          type: boolean
        is_org_shared:
          example: false
          type: boolean
        is_user_deleted:
          example: false
          type: boolean
        priority:
          example: 0
          type: number
        user:
          example: U0BS9U4SV
          type: string
      required:
      - id
      - created
      - is_im
      - is_org_shared
      - user
      - is_user_deleted
      - priority
      type: object
    conversations.list_Mpim:
      description: Multi party instant message
      properties:
        created:
          example: 1493657761
          type: number
        creator:
          example: U061F7AUR
          type: string
        id:
          example: G0AKFJBEU
          type: string
        is_channel:
          example: false
          type: boolean
        is_group:
          example: true
          type: boolean
        is_im:
          example: false
          type: boolean
        is_mpim:
          example: true
          type: boolean
        name:
          example: mpdm-mr.banks--slactions-jackson--beforebot-1
          type: string
      required:
      - id
      - name
      - is_mpim
      - created
      - creator
      type: object
    conversations.list_ResponseBody:
      additionalProperties: true
      description: Schema for successful response from conversations.list method
      properties:
        channels:
          items:
            oneOf:
            - $ref: '#/components/schemas/conversations.list_Channel'
            - $ref: '#/components/schemas/conversations.list_Group'
            - $ref: '#/components/schemas/conversations.list_Im'
            - $ref: '#/components/schemas/conversations.list_Mpim'
          type: array
        ok:
          example: true
          type: boolean
        response_metadata:
          properties:
            next_cursor:
              example: dGVhbTpDMDYxRkE1UEI=
              type: string
          required:
          - next_cursor
          type: object
      required:
      - ok
      - channels
      - response_metadata
      title: conversations.list success schema
      type: object
    defs_app_id:
      pattern: ^A[A-Z0-9]{1,}$
      title: App ID
      type: string
    defs_bot_id:
      pattern: ^B[A-Z0-9]{8,}$
      title: Bot User ID
      type: string
    defs_channel:
      pattern: ^[CGD][A-Z0-9]{8,}$
      title: Channel-like conversation ID
      type: string
    defs_channel_id:
      pattern: ^[C][A-Z0-9]{2,}$
      title: Channel ID
      type: string
    defs_channel_name:
      title: Name of a channel
      type: string
    defs_comment_id:
      pattern: ^Fc[A-Z0-9]{8,}$
      title: File Comment ID
      type: string
    defs_dm_id:
      pattern: ^[D][A-Z0-9]{8,}$
      title: Direct Message Channel ID
      type: string
    defs_enterprise_id:
      pattern: ^[E][A-Z0-9]{8,}$
      title: Enterprise ID
      type: string
    defs_enterprise_name:
      title: Name of the enterprise org
      type: string
    defs_enterprise_user_id:
      pattern: ^[WU][A-Z0-9]{8,}$
      title: Enterprise User ID
      type: string
    defs_file_id:
      pattern: ^[F][A-Z0-9]{8,}$
      title: File ID
      type: string
    defs_group_id:
      pattern: ^[G][A-Z0-9]{8,}$
      title: Private Channel ID
      type: string
    defs_ok_false:
      enum:
      - false
      title: default failure response
      type: boolean
    defs_ok_true:
      enum:
      - true
      title: default success response
      type: boolean
    defs_optional_app_id:
      pattern: ^(A[A-Z0-9]{1,})?$
      title: App ID or empty string
      type: string
    defs_pinned_info:
      title: Info for a pinned item
      type: object
    defs_reminder_id:
      pattern: ^Rm[A-Z0-9]{8,}$
      title: Reminder ID
      type: string
    defs_subteam_id:
      pattern: ^S[A-Z0-9]{2,}$
      title: Subteam ID
      type: string
    defs_team:
      pattern: ^[T][A-Z0-9]{2,}$
      title: Team ID
      type: string
    defs_topic_purpose_creator:
      pattern: ^[UW][A-Z0-9]{8,}$|^$
      title: User ID or empty string, used for topic and purpose creation
      type: string
    defs_ts:
      pattern: ^\d{10}\.\d{6}$
      title: Timestamp in format 0123456789.012345
      type: string
    defs_user_id:
      pattern: ^[UW][A-Z0-9]{2,}$
      title: User ID
      type: string
    defs_workspace_id:
      pattern: ^[TE][A-Z0-9]{8,}$
      title: Team or Enterprise ID
      type: string
    objs_bot_profile:
      properties:
        app_id:
          $ref: '#/components/schemas/defs_app_id'
        deleted:
          type: boolean
        icons:
          properties:
            image_36:
              format: uri
              type: string
            image_48:
              format: uri
              type: string
            image_72:
              format: uri
              type: string
          required:
          - image_36
          - image_48
          - image_72
          type: object
        id:
          $ref: '#/components/schemas/defs_bot_id'
        name:
          type: string
        team_id:
          $ref: '#/components/schemas/defs_team'
        updated:
          type: integer
      required:
      - app_id
      - deleted
      - icons
      - id
      - name
      - team_id
      - updated
      title: Bot Profile Object
      type: object
    objs_channel:
      properties:
        accepted_user:
          $ref: '#/components/schemas/defs_user_id'
        created:
          type: integer
        creator:
          $ref: '#/components/schemas/defs_user_id'
        id:
          $ref: '#/components/schemas/defs_channel_id'
        is_archived:
          type: boolean
        is_channel:
          type: boolean
        is_frozen:
          type: boolean
        is_general:
          type: boolean
        is_member:
          type: boolean
        is_moved:
          type: integer
        is_mpim:
          type: boolean
        is_non_threadable:
          type: boolean
        is_org_shared:
          type: boolean
        is_pending_ext_shared:
          type: boolean
        is_private:
          type: boolean
        is_read_only:
          type: boolean
        is_shared:
          type: boolean
        is_thread_only:
          type: boolean
        last_read:
          $ref: '#/components/schemas/defs_ts'
        latest:
          type: object
        members:
          items:
            $ref: '#/components/schemas/defs_user_id'
          minItems: 0
          type: array
          uniqueItems: true
        name:
          type: string
        name_normalized:
          type: string
        num_members:
          type: integer
        pending_shared:
          items:
            $ref: '#/components/schemas/defs_team'
          minItems: 0
          type: array
          uniqueItems: true
        previous_names:
          items:
            $ref: '#/components/schemas/defs_channel_name'
          minItems: 0
          type: array
          uniqueItems: true
        priority:
          type: number
        purpose:
          properties:
            creator:
              $ref: '#/components/schemas/defs_topic_purpose_creator'
            last_set:
              type: integer
            value:
              type: string
          required:
          - creator
          - last_set
          - value
          type: object
        topic:
          properties:
            creator:
              $ref: '#/components/schemas/defs_topic_purpose_creator'
            last_set:
              type: integer
            value:
              type: string
          required:
          - creator
          - last_set
          - value
          type: object
        unlinked:
          title: Field to determine whether a channel has ever been shared/disconnected
            in the past
          type: integer
        unread_count:
          type: integer
        unread_count_display:
          type: integer
      required:
      - created
      - creator
      - id
      - is_channel
      - is_mpim
      - is_org_shared
      - is_private
      - is_shared
      - members
      - name
      - name_normalized
      - purpose
      - topic
      title: Channel Object
      type: object
    objs_comment:
      properties:
        comment:
          type: string
        created:
          type: integer
        id:
          $ref: '#/components/schemas/defs_comment_id'
        is_intro:
          type: boolean
        is_starred:
          type: boolean
        num_stars:
          type: integer
        pinned_info:
          $ref: '#/components/schemas/defs_pinned_info'
        pinned_to:
          items:
            $ref: '#/components/schemas/defs_channel'
          type: array
        reactions:
          items:
            $ref: '#/components/schemas/objs_reaction'
          type: array
        timestamp:
          type: integer
        user:
          $ref: '#/components/schemas/defs_user_id'
      required:
      - comment
      - created
      - id
      - is_intro
      - timestamp
      - user
      title: File Comment Object
      type: object
    objs_comments:
      items:
        type: object
      title: file comments object
      type: array
    objs_conversation:
      type: object
    objs_conversation_temp_oneof_01:
      type: object
    objs_conversation_temp_oneof_02:
      type: object
    objs_enterprise_user:
      properties:
        enterprise_id:
          $ref: '#/components/schemas/defs_enterprise_id'
        enterprise_name:
          $ref: '#/components/schemas/defs_enterprise_name'
        id:
          $ref: '#/components/schemas/defs_enterprise_user_id'
        is_admin:
          type: boolean
        is_owner:
          type: boolean
        teams:
          items:
            $ref: '#/components/schemas/defs_team'
          type: array
          uniqueItems: true
      required:
      - enterprise_id
      - enterprise_name
      - id
      - is_admin
      - is_owner
      - teams
      type: object
    objs_external_org_migrations:
      properties:
        current:
          items:
            properties:
              date_started:
                type: integer
              team_id:
                type: string
            required:
            - date_started
            - team_id
            type: object
          type: array
        date_updated:
          type: integer
      required:
      - current
      - date_updated
      title: External Org Migrations
      type: object
    objs_file:
      properties:
        channels:
          items:
            $ref: '#/components/schemas/defs_channel_id'
          type: array
          uniqueItems: true
        comments_count:
          type: integer
        created:
          type: integer
        date_delete:
          type: integer
        display_as_bot:
          type: boolean
        editable:
          type: boolean
        editor:
          $ref: '#/components/schemas/defs_user_id'
        external_id:
          type: string
        external_type:
          type: string
        external_url:
          format: uri
          type: string
        filetype:
          type: string
        groups:
          items:
            $ref: '#/components/schemas/defs_group_id'
          type: array
          uniqueItems: true
        has_rich_preview:
          type: boolean
        id:
          $ref: '#/components/schemas/defs_file_id'
        image_exif_rotation:
          type: integer
        ims:
          items:
            $ref: '#/components/schemas/defs_dm_id'
          type: array
          uniqueItems: true
        is_external:
          type: boolean
        is_public:
          type: boolean
        is_starred:
          type: boolean
        is_tombstoned:
          type: boolean
        last_editor:
          $ref: '#/components/schemas/defs_user_id'
        mimetype:
          type: string
        mode:
          type: string
        name:
          type: string
        non_owner_editable:
          type: boolean
        num_stars:
          type: integer
        original_h:
          type: integer
        original_w:
          type: integer
        permalink:
          format: uri
          type: string
        permalink_public:
          format: uri
          type: string
        pinned_info:
          $ref: '#/components/schemas/defs_pinned_info'
        pinned_to:
          items:
            $ref: '#/components/schemas/defs_channel'
          type: array
        pretty_type:
          type: string
        preview:
          type: string
        public_url_shared:
          type: boolean
        reactions:
          items:
            $ref: '#/components/schemas/objs_reaction'
          type: array
        shares:
          properties:
            private:
              type: object
            public:
              type: object
          type: object
        size:
          type: integer
        source_team:
          $ref: '#/components/schemas/defs_team'
        state:
          type: string
        thumb_64:
          format: uri
          type: string
        thumb_80:
          format: uri
          type: string
        thumb_160:
          format: uri
          type: string
        thumb_360:
          format: uri
          type: string
        thumb_360_h:
          type: integer
        thumb_360_w:
          type: integer
        thumb_480:
          format: uri
          type: string
        thumb_480_h:
          type: integer
        thumb_480_w:
          type: integer
        thumb_720:
          format: uri
          type: string
        thumb_720_h:
          type: integer
        thumb_720_w:
          type: integer
        thumb_800:
          format: uri
          type: string
        thumb_800_h:
          type: integer
        thumb_800_w:
          type: integer
        thumb_960:
          format: uri
          type: string
        thumb_960_h:
          type: integer
        thumb_960_w:
          type: integer
        thumb_1024:
          format: uri
          type: string
        thumb_1024_h:
          type: integer
        thumb_1024_w:
          type: integer
        thumb_tiny:
          type: string
        timestamp:
          type: integer
        title:
          type: string
        updated:
          type: integer
        url_private:
          format: uri
          type: string
        url_private_download:
          format: uri
          type: string
        user:
          type: string
        user_team:
          $ref: '#/components/schemas/defs_team'
        username:
          type: string
      title: file object
      type: object
    objs_icon:
      properties:
        image_34:
          type: string
        image_44:
          type: string
        image_68:
          type: string
        image_88:
          type: string
        image_102:
          type: string
        image_132:
          type: string
        image_230:
          type: string
        image_default:
          type: boolean
      type: object
    objs_message:
      properties:
        attachments:
          items:
            properties:
              fallback:
                type: string
              id:
                type: integer
              image_bytes:
                type: integer
              image_height:
                type: integer
              image_url:
                type: string
              image_width:
                type: integer
            required:
            - id
            type: object
          minItems: 1
          type: array
          uniqueItems: true
        blocks:
          $ref: '#/components/schemas/blocks'
        bot_id:
          type: object
        bot_profile:
          $ref: '#/components/schemas/objs_bot_profile'
        client_msg_id:
          type: string
        comment:
          $ref: '#/components/schemas/objs_comment'
        display_as_bot:
          type: boolean
        file:
          $ref: '#/components/schemas/objs_file'
        files:
          items:
            $ref: '#/components/schemas/objs_file'
          minItems: 1
          type: array
          uniqueItems: true
        icons:
          properties:
            emoji:
              type: string
            image_64:
              format: uri
              type: string
          type: object
        inviter:
          $ref: '#/components/schemas/defs_user_id'
        is_delayed_message:
          type: boolean
        is_intro:
          type: boolean
        is_starred:
          type: boolean
        last_read:
          $ref: '#/components/schemas/defs_ts'
        latest_reply:
          $ref: '#/components/schemas/defs_ts'
        name:
          type: string
        old_name:
          type: string
        parent_user_id:
          $ref: '#/components/schemas/defs_user_id'
        permalink:
          format: uri
          type: string
        pinned_to:
          items:
            $ref: '#/components/schemas/defs_channel'
          type: array
        purpose:
          type: string
        reactions:
          items:
            $ref: '#/components/schemas/objs_reaction'
          type: array
        reply_count:
          type: integer
        reply_users:
          items:
            $ref: '#/components/schemas/defs_user_id'
          minItems: 1
          type: array
          uniqueItems: true
        reply_users_count:
          type: integer
        source_team:
          $ref: '#/components/schemas/defs_workspace_id'
        subscribed:
          type: boolean
        subtype:
          type: string
        team:
          $ref: '#/components/schemas/defs_workspace_id'
        text:
          type: string
        thread_ts:
          $ref: '#/components/schemas/defs_ts'
        topic:
          type: string
        ts:
          $ref: '#/components/schemas/defs_ts'
        type:
          type: string
        unread_count:
          type: integer
        upload:
          type: boolean
        user:
          $ref: '#/components/schemas/defs_user_id'
        user_profile:
          $ref: '#/components/schemas/objs_user_profile_short'
        user_team:
          $ref: '#/components/schemas/defs_workspace_id'
        username:
          type: string
      required:
      - text
      - ts
      - type
      title: Message object
      type: object
    objs_paging:
      properties:
        count:
          type: integer
        page:
          type: integer
        pages:
          type: integer
        per_page:
          type: integer
        spill:
          type: integer
        total:
          type: integer
      required:
      - page
      - total
      title: paging object
      type: object
    objs_primary_owner:
      properties:
        email:
          type: string
        id:
          type: string
      required:
      - email
      - id
      type: object
    objs_reaction:
      properties:
        count:
          type: integer
        name:
          type: string
        users:
          items:
            $ref: '#/components/schemas/defs_user_id'
          type: array
      required:
      - count
      - name
      - users
      title: Reaction object
      type: object
    objs_reminder:
      properties:
        complete_ts:
          type: integer
        creator:
          $ref: '#/components/schemas/defs_user_id'
        id:
          $ref: '#/components/schemas/defs_reminder_id'
        recurring:
          type: boolean
        text:
          type: string
        time:
          type: integer
        user:
          $ref: '#/components/schemas/defs_user_id'
      required:
      - creator
      - id
      - recurring
      - text
      - user
      type: object
    objs_resources:
      properties:
        excluded_ids:
          items:
            items:
              $ref: '#/components/schemas/defs_channel'
            type: array
          type: array
        excluded_ids_temp_oneof_01:
          items:
            items:
              $ref: '#/components/schemas/defs_team'
            type: array
          type: array
        ids:
          items:
            items:
              $ref: '#/components/schemas/defs_channel'
            type: array
          type: array
        ids_temp_oneof_01:
          items:
            items:
              $ref: '#/components/schemas/defs_team'
            type: array
          type: array
        wildcard:
          type: boolean
      required:
      - ids
      title: resources in info from apps.permissions.info
      type: object
    objs_response_metadata:
      type: object
    objs_response_metadata_temp_oneof_01:
      type: object
    objs_response_metadata_temp_oneof_02:
      type: object
    objs_scopes:
      items:
        title: Named OAuth scopes
        type: string
      type: array
    objs_subteam:
      properties:
        auto_provision:
          type: boolean
        auto_type:
          type: object
        channel_count:
          type: integer
        created_by:
          $ref: '#/components/schemas/defs_user_id'
        date_create:
          type: integer
        date_delete:
          type: integer
        date_update:
          type: integer
        deleted_by:
          type: object
        description:
          type: string
        enterprise_subteam_id:
          type: string
        handle:
          type: string
        id:
          $ref: '#/components/schemas/defs_subteam_id'
        is_external:
          type: boolean
        is_subteam:
          type: boolean
        is_usergroup:
          type: boolean
        name:
          type: string
        prefs:
          properties:
            channels:
              items:
                $ref: '#/components/schemas/defs_channel_id'
              type: array
            groups:
              items:
                $ref: '#/components/schemas/defs_group_id'
              type: array
          required:
          - channels
          - groups
          type: object
        team_id:
          $ref: '#/components/schemas/defs_team'
        updated_by:
          $ref: '#/components/schemas/defs_user_id'
        user_count:
          type: integer
        users:
          items:
            $ref: '#/components/schemas/defs_user_id'
          type: array
      required:
      - auto_provision
      - auto_type
      - created_by
      - date_create
      - date_delete
      - date_update
      - deleted_by
      - description
      - enterprise_subteam_id
      - handle
      - id
      - is_external
      - is_subteam
      - is_usergroup
      - name
      - prefs
      - team_id
      - updated_by
      title: Subteam/Usergroup Object
      type: object
    objs_team:
      properties:
        archived:
          type: boolean
        avatar_base_url:
          format: uri
          type: string
        created:
          type: integer
        date_create:
          type: integer
        deleted:
          type: boolean
        description:
          type: string
        discoverable:
          type: object
        domain:
          type: string
        email_domain:
          type: string
        enterprise_id:
          $ref: '#/components/schemas/defs_enterprise_id'
        enterprise_name:
          $ref: '#/components/schemas/defs_enterprise_name'
        external_org_migrations:
          $ref: '#/components/schemas/objs_external_org_migrations'
        has_compliance_export:
          type: boolean
        icon:
          $ref: '#/components/schemas/objs_icon'
        id:
          $ref: '#/components/schemas/defs_workspace_id'
        is_assigned:
          type: boolean
        is_enterprise:
          type: integer
        is_over_storage_limit:
          type: boolean
        limit_ts:
          type: integer
        locale:
          type: string
        messages_count:
          type: integer
        msg_edit_window_mins:
          type: integer
        name:
          type: string
        over_integrations_limit:
          type: boolean
        over_storage_limit:
          type: boolean
        pay_prod_cur:
          type: string
        plan:
          enum:
          - ""
          - std
          - plus
          - compliance
          - enterprise
          type: string
        primary_owner:
          $ref: '#/components/schemas/objs_primary_owner'
        sso_provider:
          properties:
            label:
              type: string
            name:
              type: string
            type:
              type: string
          type: object
      required:
      - domain
      - email_domain
      - icon
      - id
      - name
      title: Team Object
      type: object
    objs_team_profile_field:
      properties:
        field_name:
          type: string
        hint:
          type: string
        id:
          pattern: ^X[a-zA-Z0-9]{9,}$
          type: string
        is_hidden:
          type: boolean
        label:
          type: string
        options:
          type: object
        ordering:
          type: number
        possible_values:
          items:
            type: string
          type: array
        type:
          enum:
          - text
          - date
          - link
          - mailto
          - options_list
          - user
          type: string
      required:
      - hint
      - id
      - label
      - ordering
      - type
      type: object
    objs_team_profile_field_option:
      properties:
        is_custom:
          type: boolean
        is_multiple_entry:
          type: boolean
        is_protected:
          type: boolean
        is_scim:
          type: boolean
      type: object
    objs_user:
      type: object
    objs_user_profile:
      properties:
        always_active:
          type: boolean
        api_app_id:
          $ref: '#/components/schemas/defs_optional_app_id'
        avatar_hash:
          type: string
        bot_id:
          $ref: '#/components/schemas/defs_bot_id'
        display_name:
          type: string
        display_name_normalized:
          type: string
        email:
          format: email
          type: string
        fields:
          items:
            properties: {}
            type: object
          type: array
        first_name:
          type: string
        guest_expiration_ts:
          type: integer
        guest_invited_by:
          type: string
        image_24:
          format: uri
          type: string
        image_32:
          format: uri
          type: string
        image_48:
          format: uri
          type: string
        image_72:
          format: uri
          type: string
        image_192:
          format: uri
          type: string
        image_512:
          format: uri
          type: string
        image_1024:
          format: uri
          type: string
        image_original:
          format: uri
          type: string
        is_app_user:
          type: boolean
        is_custom_image:
          type: boolean
        is_restricted:
          type: boolean
        is_ultra_restricted:
          type: boolean
        last_avatar_image_hash:
          type: string
        last_name:
          type: string
        memberships_count:
          type: integer
        name:
          type: string
        phone:
          type: string
        pronouns:
          type: string
        real_name:
          type: string
        real_name_normalized:
          type: string
        skype:
          type: string
        status_default_emoji:
          type: string
        status_default_text:
          type: string
        status_default_text_canonical:
          type: string
        status_emoji:
          type: string
        status_expiration:
          type: integer
        status_text:
          type: string
        status_text_canonical:
          type: string
        team:
          $ref: '#/components/schemas/defs_workspace_id'
        title:
          type: string
        updated:
          type: integer
        user_id:
          type: string
        username:
          type: string
      required:
      - avatar_hash
      - display_name
      - display_name_normalized
      - fields
      - phone
      - real_name
      - real_name_normalized
      - skype
      - status_emoji
      - status_text
      - title
      title: User profile object
      type: object
    objs_user_profile_short:
      properties:
        avatar_hash:
          type: string
        display_name:
          type: string
        display_name_normalized:
          type: string
        first_name:
          type: string
        image_72:
          format: uri
          type: string
        is_restricted:
          type: boolean
        is_ultra_restricted:
          type: boolean
        name:
          type: string
        real_name:
          type: string
        real_name_normalized:
          type: string
        team:
          $ref: '#/components/schemas/defs_workspace_id'
      required:
      - avatar_hash
      - display_name
      - first_name
      - image_72
      - is_restricted
      - is_ultra_restricted
      - name
      - real_name
      - team
      type: object
    objs_user_temp_oneof_01:
      type: object
    users.list_ErrorResponseBody:
      additionalProperties: true
      description: Schema for error response from users.list method
      properties:
        error:
          example: invalid_cursor
          type: string
        ok:
          example: false
          type: boolean
      required:
      - ok
      - error
      title: users.list error schema
      type: object
    users.list_Member:
      properties:
        color:
          example: 9f69e7
          type: string
        deleted:
          example: false
          type: boolean
        has_2fa:
          example: false
          type: boolean
        id:
          example: W012A3CDE
          type: string
        is_admin:
          example: true
          type: boolean
        is_app_user:
          example: false
          type: boolean
        is_bot:
          example: false
          type: boolean
        is_owner:
          example: false
          type: boolean
        is_primary_owner:
          example: false
          type: boolean
        is_restricted:
          example: false
          type: boolean
        is_ultra_restricted:
          example: false
          type: boolean
        name:
          example: spengler
          type: string
        profile:
          $ref: '#/components/schemas/users.list_MemberProfile'
        real_name:
          example: spengler
          type: string
        team_id:
          example: T012AB3C4
          type: string
        tz:
          example: America/Los_Angeles
          type: string
        tz_label:
          example: Pacific Daylight Time
          type: string
        tz_offset:
          example: -25200
          type: number
        updated:
          example: 1502138686
          type: number
      required:
      - id
      - team_id
      - name
      - deleted
      - profile
      - is_bot
      - updated
      type: object
    users.list_MemberProfile:
      properties:
        avatar_hash:
          example: ge3b51ca72de
          type: string
        display_name:
          example: spengler
          type: string
        display_name_normalized:
          example: spengler
          type: string
        email:
          example: spengler@ghostbusters.example.com
          type: string
        first_name:
          example: Glinda
          type: string
        image_24:
          example: https://a.slack-edge.com...png
          type: string
        image_32:
          example: https://a.slack-edge.com...png
          type: string
        image_48:
          example: https://a.slack-edge.com...png
          type: string
        image_72:
          example: https://a.slack-edge.com...png
          type: string
        image_192:
          example: https://a.slack-edge.com...png
          type: string
        image_512:
          example: https://a.slack-edge.com...png
          type: string
        image_1024:
          example: https://a.slack-edge.com...png
          type: string
        image_original:
          example: https://a.slack-edge.com...png
          type: string
        last_name:
          example: Southgood
          type: string
        phone:
          example: ""
          type: string
        real_name:
          example: Egon Spengler
          type: string
        real_name_normalized:
          example: Egon Spengler
          type: string
        skype:
          example: ""
          type: string
        status_emoji:
          example: ':books:'
          type: string
        status_text:
          example: Print is dead
          type: string
        team:
          example: T012AB3C4
          type: string
        title:
          example: Glinda the Good
          type: string
      required:
      - avatar_hash
      - status_text
      - status_emoji
      - real_name_normalized
      - display_name_normalized
      - team
      - display_name
      type: object
    users.list_ResponseBody:
      additionalProperties: true
      description: Schema for successful response from users.list method
      properties:
        cache_ts:
          example: 1498777272
          type: number
        members:
          items:
            $ref: '#/components/schemas/users.list_Member'
          type: array
        ok:
          example: true
          type: boolean
        response_metadata:
          properties:
            next_cursor:
              example: dGVhbTpDMDYxRkE1UEI=
              type: string
          required:
          - next_cursor
          type: object
      required:
      - ok
      - members
      - cache_ts
      - response_metadata
      title: users.list schema
      type: object
  securitySchemes:
    slackAuth:
      flows:
        authorizationCode:
          authorizationUrl: https://slack.com/oauth/authorize
          scopes:
            admin: admin
            admin.apps:read: admin.apps:read
            admin.apps:write: admin.apps:write
            admin.conversations:read: admin.conversations:read
            admin.conversations:write: admin.conversations:write
            admin.invites:read: admin.invites:read
            admin.invites:write: admin.invites:write
            admin.teams:read: admin.teams:read
            admin.teams:write: admin.teams:write
            admin.usergroups:read: admin.usergroups:read
            admin.usergroups:write: admin.usergroups:write
            admin.users:read: admin.users:read
            admin.users:write: admin.users:write
            authorizations:read: authorizations:read
            bot: Bot user scope
            calls:read: calls:read
            calls:write: calls:write
            channels:history: channels:history
            channels:manage: channels:manage
            channels:read: channels:read
            channels:write: channels:write
            chat:write: chat:write
            chat:write:bot: Author messages as a bot
            chat:write:user: Author messages as a user
            conversations:history: conversations:history
            conversations:read: conversations:read
            conversations:write: conversations:write
            dnd:read: dnd:read
            dnd:write: dnd:write
            emoji:read: emoji:read
            files:read: files:read
            files:write:user: files:write:user
            groups:history: groups:history
            groups:read: groups:read
            groups:write: groups:write
            identity.basic: identity.basic
            im:history: im:history
            im:read: im:read
            im:write: im:write
            links:write: links:write
            mpim:history: mpim:history
            mpim:read: mpim:read
            mpim:write: mpim:write
            none: No scope required
            pins:read: pins:read
            pins:write: pins:write
            reactions:read: reactions:read
            reactions:write: reactions:write
            reminders:read: reminders:read
            reminders:write: reminders:write
            remote_files:read: remote_files:read
            remote_files:share: remote_files:share
            remote_files:write: remote_files:write
            rtm:stream: rtm:stream
            search:read: search:read
            stars:read: stars:read
            stars:write: stars:write
            team:read: team:read
            tokens.basic: tokens.basic
            usergroups:read: usergroups:read
            usergroups:write: usergroups:write
            users.profile:read: users.profile:read
            users.profile:write: users.profile:write
            users:read: users:read
            users:read.email: users:read.email
            users:write: users:write
            workflow.steps:execute: workflow.steps:execute
          tokenUrl: https://slack.com/api/oauth.access
      type: oauth2
externalDocs:
  description: Learn more about the Slack Web API
  url: https://api.slack.com/web
info:
  contact:
    email: support@slack.com
    name: Slack developer relations
    url: https://api.slack.com/support
  description: One way to interact with the Slack platform is its HTTP RPC-based Web
    API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace
    tokens blessed with related OAuth scopes.
  title: Slack Web API
  version: 1.7.0
openapi: 3.0.1
paths:
  /admin.apps.approve:
    post:
      description: Approve an app for installation on a workspace.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.apps.approve
      operationId: admin_apps_approve
      parameters:
      - description: 'Authentication token. Requires scope: `admin.apps:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                app_id:
                  description: The id of the app to approve.
                  type: string
                request_id:
                  description: The id of the request to approve.
                  type: string
                team_id:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                app_id:
                  description: The id of the app to approve.
                  type: string
                request_id:
                  description: The id of the request to approve.
                  type: string
                team_id:
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.apps:write
      tags:
      - admin.apps
      - admin
  /admin.apps.approved.list:
    get:
      description: List approved apps for an org or workspace.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.apps.approved.list
      operationId: admin_apps_approved_list
      parameters:
      - description: 'Authentication token. Requires scope: `admin.apps:read`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - description: The maximum number of items to return. Must be between 1 - 1000
          both inclusive.
        in: query
        name: limit
        schema:
          type: integer
      - description: Set `cursor` to `next_cursor` returned by the previous call to
          list items in the next page
        in: query
        name: cursor
        schema:
          type: string
      - in: query
        name: team_id
        schema:
          type: string
      - in: query
        name: enterprise_id
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.apps:read
      tags:
      - admin.apps.approved
      - admin
  /admin.apps.requests.list:
    get:
      description: List app requests for a team/workspace.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.apps.requests.list
      operationId: admin_apps_requests_list
      parameters:
      - description: 'Authentication token. Requires scope: `admin.apps:read`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - description: The maximum number of items to return. Must be between 1 - 1000
          both inclusive.
        in: query
        name: limit
        schema:
          type: integer
      - description: Set `cursor` to `next_cursor` returned by the previous call to
          list items in the next page
        in: query
        name: cursor
        schema:
          type: string
      - in: query
        name: team_id
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.apps:read
      tags:
      - admin.apps.requests
      - admin
  /admin.apps.restrict:
    post:
      description: Restrict an app for installation on a workspace.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.apps.restrict
      operationId: admin_apps_restrict
      parameters:
      - description: 'Authentication token. Requires scope: `admin.apps:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                app_id:
                  description: The id of the app to restrict.
                  type: string
                request_id:
                  description: The id of the request to restrict.
                  type: string
                team_id:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                app_id:
                  description: The id of the app to restrict.
                  type: string
                request_id:
                  description: The id of the request to restrict.
                  type: string
                team_id:
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.apps:write
      tags:
      - admin.apps
      - admin
  /admin.apps.restricted.list:
    get:
      description: List restricted apps for an org or workspace.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.apps.restricted.list
      operationId: admin_apps_restricted_list
      parameters:
      - description: 'Authentication token. Requires scope: `admin.apps:read`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - description: The maximum number of items to return. Must be between 1 - 1000
          both inclusive.
        in: query
        name: limit
        schema:
          type: integer
      - description: Set `cursor` to `next_cursor` returned by the previous call to
          list items in the next page
        in: query
        name: cursor
        schema:
          type: string
      - in: query
        name: team_id
        schema:
          type: string
      - in: query
        name: enterprise_id
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.apps:read
      tags:
      - admin.apps.restricted
      - admin
  /admin.conversations.archive:
    post:
      description: Archive a public or private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.archive
      operationId: admin_conversations_archive
      parameters:
      - description: 'Authentication token. Requires scope: `admin.conversations:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel_id:
                  description: The channel to archive.
                  type: string
              required:
              - channel_id
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel_id:
                  description: The channel to archive.
                  type: string
              required:
              - channel_id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response of admin.conversations.archive
                title: admin.conversations.archive schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from admin.conversations.archive
                title: admin.conversations.archive error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.conversations:write
      tags:
      - admin.conversations
      - admin
  /admin.conversations.convertToPrivate:
    post:
      description: Convert a public channel to a private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.convertToPrivate
      operationId: admin_conversations_convertToPrivate
      parameters:
      - description: 'Authentication token. Requires scope: `admin.conversations:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel_id:
                  description: The channel to convert to private.
                  type: string
              required:
              - channel_id
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel_id:
                  description: The channel to convert to private.
                  type: string
              required:
              - channel_id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response of admin.conversations.convertToPrivate
                title: admin.conversations.convertToPrivate schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from admin.conversations.convertToPrivate
                title: admin.conversations.convertToPrivate error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.conversations:write
      tags:
      - admin.conversations
      - admin
  /admin.conversations.create:
    post:
      description: Create a public or private channel-based conversation.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.create
      operationId: admin_conversations_create
      parameters:
      - description: 'Authentication token. Requires scope: `admin.conversations:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: Description of the public or private channel to create.
                  type: string
                is_private:
                  description: When `true`, creates a private channel instead of a
                    public channel
                  type: boolean
                name:
                  description: Name of the public or private channel to create.
                  type: string
                org_wide:
                  description: 'When `true`, the channel will be available org-wide.
                    Note: if the channel is not `org_wide=true`, you must specify
                    a `team_id` for this channel'
                  type: boolean
                team_id:
                  description: 'The workspace to create the channel in. Note: this
                    argument is required unless you set `org_wide=true`.'
                  type: string
              required:
              - is_private
              - name
          application/x-www-form-urlencoded:
            schema:
              properties:
                description:
                  description: Description of the public or private channel to create.
                  type: string
                is_private:
                  description: When `true`, creates a private channel instead of a
                    public channel
                  type: boolean
                name:
                  description: Name of the public or private channel to create.
                  type: string
                org_wide:
                  description: 'When `true`, the channel will be available org-wide.
                    Note: if the channel is not `org_wide=true`, you must specify
                    a `team_id` for this channel'
                  type: boolean
                team_id:
                  description: 'The workspace to create the channel in. Note: this
                    argument is required unless you set `org_wide=true`.'
                  type: string
              required:
              - is_private
              - name
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response of admin.conversations.create
                title: admin.conversations.create schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from admin.conversations.create
                title: admin.conversations.create error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.conversations:write
      tags:
      - admin.conversations
      - admin
  /admin.conversations.delete:
    post:
      description: Delete a public or private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.delete
      operationId: admin_conversations_delete
      parameters:
      - description: 'Authentication token. Requires scope: `admin.conversations:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel_id:
                  description: The channel to delete.
                  type: string
              required:
              - channel_id
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel_id:
                  description: The channel to delete.
                  type: string
              required:
              - channel_id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response of admin.conversations.delete
                title: admin.conversations.delete schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from admin.conversations.delete
                title: admin.conversations.delete error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.conversations:write
      tags:
      - admin.conversations
      - admin
  /admin.conversations.disconnectShared:
    post:
      description: Disconnect a connected channel from one or more workspaces.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.disconnectShared
      operationId: admin_conversations_disconnectShared
      parameters:
      - description: 'Authentication token. Requires scope: `admin.conversations:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel_id:
                  description: The channel to be disconnected from some workspaces.
                  type: string
                leaving_team_ids:
                  description: The team to be removed from the channel. Currently
                    only a single team id can be specified.
                  type: string
              required:
              - channel_id
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel_id:
                  description: The channel to be disconnected from some workspaces.
                  type: string
                leaving_team_ids:
                  description: The team to be removed from the channel. Currently
                    only a single team id can be specified.
                  type: string
              required:
              - channel_id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response of admin.conversations.disconnectShared
                title: admin.conversations.rename schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from admin.conversations.disconnectShared
                title: admin.conversations.disconnectShared error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.conversations:write
      tags:
      - admin.conversations
      - admin
  /admin.conversations.ekm.listOriginalConnectedChannelInfo:
    get:
      description: List all disconnected channels—i.e., channels that were once connected
        to other workspaces and then disconnected—and the corresponding original channel
        IDs for key revocation with EKM.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.ekm.listOriginalConnectedChannelInfo
      operationId: admin_conversations_ekm_listOriginalConnectedChannelInfo
      parameters:
      - description: 'Authentication token. Requires scope: `admin.conversations:read`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - description: A comma-separated list of channels to filter to.
        in: query
        name: channel_ids
        schema:
          type: string
      - description: A comma-separated list of the workspaces to which the channels
          you would like returned belong.
        in: query
        name: team_ids
        schema:
          type: string
      - description: The maximum number of items to return. Must be between 1 - 1000
          both inclusive.
        in: query
        name: limit
        schema:
          type: integer
      - description: Set `cursor` to `next_cursor` returned by the previous call to
          list items in the next page.
        in: query
        name: cursor
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.conversations:read
      tags:
      - admin.conversations.ekm
      - admin
  /admin.conversations.getConversationPrefs:
    get:
      description: Get conversation preferences for a public or private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.getConversationPrefs
      operationId: admin_conversations_getConversationPrefs
      parameters:
      - description: 'Authentication token. Requires scope: `admin.conversations:read`'
        in: header
        name: token
        required: true
        schema:
          type: string
      - description: The channel to get preferences for.
        in: query
        name: channel_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response of admin.conversations.getConversationPrefs
                title: admin.conversations.getConversationPrefs schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from admin.conversations.getConversationPrefs
                title: admin.conversations.unarchive error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.conversations:read
      tags:
      - admin.conversations
      - admin
  /admin.conversations.getTeams:
    get:
      description: Get all the workspaces a given public or private channel is connected
        to within this Enterprise org.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.getTeams
      operationId: admin_conversations_getTeams
      parameters:
      - description: 'Authentication token. Requires scope: `admin.conversations:read`'
        in: header
        name: token
        required: true
        schema:
          type: string
      - description: The channel to determine connected workspaces within the organization
          for.
        in: query
        name: channel_id
        required: true
        schema:
          type: string
      - description: Set `cursor` to `next_cursor` returned by the previous call to
          list items in the next page
        in: query
        name: cursor
        schema:
          type: string
      - description: The maximum number of items to return. Must be between 1 - 1000
          both inclusive.
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response of admin.conversations.getTeams
                title: admin.conversations.getTeams schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from admin.conversations.getTeams
                title: admin.conversations.getTeams error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.conversations:read
      tags:
      - admin.conversations
      - admin
  /admin.conversations.invite:
    post:
      description: Invite a user to a public or private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.invite
      operationId: admin_conversations_invite
      parameters:
      - description: 'Authentication token. Requires scope: `admin.conversations:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel_id:
                  description: The channel that the users will be invited to.
                  type: string
                user_ids:
                  description: The users to invite.
                  type: string
              required:
              - channel_id
              - user_ids
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel_id:
                  description: The channel that the users will be invited to.
                  type: string
                user_ids:
                  description: The users to invite.
                  type: string
              required:
              - channel_id
              - user_ids
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response of admin.conversations.invite
                title: admin.conversations.invite schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from admin.conversations.invite
                title: admin.conversations.invite error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.conversations:write
      tags:
      - admin.conversations
      - admin
  /admin.conversations.rename:
    post:
      description: Rename a public or private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.rename
      operationId: admin_conversations_rename
      parameters:
      - description: 'Authentication token. Requires scope: `admin.conversations:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel_id:
                  description: The channel to rename.
                  type: string
                name:
                  type: string
              required:
              - channel_id
              - name
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel_id:
                  description: The channel to rename.
                  type: string
                name:
                  type: string
              required:
              - channel_id
              - name
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response of admin.conversations.rename
                title: admin.conversations.rename schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from admin.conversations.rename
                title: admin.conversations.unarchive error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.conversations:write
      tags:
      - admin.conversations
      - admin
  /admin.conversations.restrictAccess.addGroup:
    post:
      description: Add an allowlist of IDP groups for accessing a channel
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.restrictAccess.addGroup
      operationId: admin_conversations_restrictAccess_addGroup
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel_id:
                  description: The channel to link this group to.
                  type: string
                group_id:
                  description: The [IDP Group](https://slack.com/help/articles/115001435788-Connect-identity-provider-groups-to-your-Enterprise-Grid-org)
                    ID to be an allowlist for the private channel.
                  type: string
                team_id:
                  description: The workspace where the channel exists. This argument
                    is required for channels only tied to one workspace, and optional
                    for channels that are shared across an organization.
                  type: string
                token:
                  description: 'Authentication token. Requires scope: `admin.conversations:write`'
                  type: string
              required:
              - channel_id
              - group_id
              - token
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.conversations:write
      tags:
      - admin.conversations.restrictAccess
      - admin
  /admin.conversations.restrictAccess.listGroups:
    get:
      description: List all IDP Groups linked to a channel
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.restrictAccess.listGroups
      operationId: admin_conversations_restrictAccess_listGroups
      parameters:
      - description: 'Authentication token. Requires scope: `admin.conversations:read`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - in: query
        name: channel_id
        required: true
        schema:
          type: string
      - description: The workspace where the channel exists. This argument is required
          for channels only tied to one workspace, and optional for channels that
          are shared across an organization.
        in: query
        name: team_id
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.conversations:read
      tags:
      - admin.conversations.restrictAccess
      - admin
  /admin.conversations.restrictAccess.removeGroup:
    post:
      description: Remove a linked IDP group linked from a private channel
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.restrictAccess.removeGroup
      operationId: admin_conversations_restrictAccess_removeGroup
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel_id:
                  description: The channel to remove the linked group from.
                  type: string
                group_id:
                  description: The [IDP Group](https://slack.com/help/articles/115001435788-Connect-identity-provider-groups-to-your-Enterprise-Grid-org)
                    ID to remove from the private channel.
                  type: string
                team_id:
                  description: The workspace where the channel exists. This argument
                    is required for channels only tied to one workspace, and optional
                    for channels that are shared across an organization.
                  type: string
                token:
                  description: 'Authentication token. Requires scope: `admin.conversations:write`'
                  type: string
              required:
              - channel_id
              - group_id
              - team_id
              - token
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.conversations:write
      tags:
      - admin.conversations.restrictAccess
      - admin
  /admin.conversations.search:
    get:
      description: Search for public or private channels in an Enterprise organization.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.search
      operationId: admin_conversations_search
      parameters:
      - description: 'Authentication token. Requires scope: `admin.conversations:read`'
        in: header
        name: token
        required: true
        schema:
          type: string
      - description: Comma separated string of team IDs, signifying the workspaces
          to search through.
        in: query
        name: team_ids
        schema:
          type: string
      - description: Name of the the channel to query by.
        in: query
        name: query
        schema:
          type: string
      - description: Maximum number of items to be returned. Must be between 1 - 20
          both inclusive. Default is 10.
        in: query
        name: limit
        schema:
          type: integer
      - description: Set `cursor` to `next_cursor` returned by the previous call to
          list items in the next page.
        in: query
        name: cursor
        schema:
          type: string
      - description: The type of channel to include or exclude in the search. For
          example `private` will search private channels, while `private_exclude`
          will exclude them. For a full list of types, check the [Types section](#types).
        in: query
        name: search_channel_types
        schema:
          type: string
      - description: 'Possible values are `relevant` (search ranking based on what
          we think is closest), `name` (alphabetical), `member_count` (number of users
          in the channel), and `created` (date channel was created). You can optionally
          pair this with the `sort_dir` arg to change how it is sorted '
        in: query
        name: sort
        schema:
          type: string
      - description: Sort direction. Possible values are `asc` for ascending order
          like (1, 2, 3) or (a, b, c), and `desc` for descending order like (3, 2,
          1) or (c, b, a)
        in: query
        name: sort_dir
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response of admin.conversations.search
                title: admin.conversations.search schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from admin.conversations.search
                title: admin.conversations.search error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.conversations:read
      tags:
      - admin.conversations
      - admin
  /admin.conversations.setConversationPrefs:
    post:
      description: Set the posting permissions for a public or private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.setConversationPrefs
      operationId: admin_conversations_setConversationPrefs
      parameters:
      - description: 'Authentication token. Requires scope: `admin.conversations:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel_id:
                  description: The channel to set the prefs for
                  type: string
                prefs:
                  description: The prefs for this channel in a stringified JSON format.
                  type: string
              required:
              - channel_id
              - prefs
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel_id:
                  description: The channel to set the prefs for
                  type: string
                prefs:
                  description: The prefs for this channel in a stringified JSON format.
                  type: string
              required:
              - channel_id
              - prefs
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response of admin.conversations.setConversationPrefs
                title: admin.conversations.setConversationPrefs schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from admin.conversations.setConversationPrefs
                title: admin.conversations.setConversationPrefs error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.conversations:write
      tags:
      - admin.conversations
      - admin
  /admin.conversations.setTeams:
    post:
      description: Set the workspaces in an Enterprise grid org that connect to a
        public or private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.setTeams
      operationId: admin_conversations_setTeams
      parameters:
      - description: 'Authentication token. Requires scope: `admin.conversations:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel_id:
                  description: The encoded `channel_id` to add or remove to workspaces.
                  type: string
                org_channel:
                  description: True if channel has to be converted to an org channel
                  type: boolean
                target_team_ids:
                  description: A comma-separated list of workspaces to which the channel
                    should be shared. Not required if the channel is being shared
                    org-wide.
                  type: string
                team_id:
                  description: The workspace to which the channel belongs. Omit this
                    argument if the channel is a cross-workspace shared channel.
                  type: string
              required:
              - channel_id
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel_id:
                  description: The encoded `channel_id` to add or remove to workspaces.
                  type: string
                org_channel:
                  description: True if channel has to be converted to an org channel
                  type: boolean
                target_team_ids:
                  description: A comma-separated list of workspaces to which the channel
                    should be shared. Not required if the channel is being shared
                    org-wide.
                  type: string
                team_id:
                  description: The workspace to which the channel belongs. Omit this
                    argument if the channel is a cross-workspace shared channel.
                  type: string
              required:
              - channel_id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.conversations:write
      tags:
      - admin.conversations
      - admin
  /admin.conversations.unarchive:
    post:
      description: Unarchive a public or private channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.conversations.unarchive
      operationId: admin_conversations_unarchive
      parameters:
      - description: 'Authentication token. Requires scope: `admin.conversations:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel_id:
                  description: The channel to unarchive.
                  type: string
              required:
              - channel_id
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel_id:
                  description: The channel to unarchive.
                  type: string
              required:
              - channel_id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response of admin.conversations.unarchive
                title: admin.conversations.unarchive schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from admin.conversations.unarchive
                title: admin.conversations.unarchive error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.conversations:write
      tags:
      - admin.conversations
      - admin
  /admin.inviteRequests.approve:
    post:
      description: Approve a workspace invite request.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.inviteRequests.approve
      operationId: admin_inviteRequests_approve
      parameters:
      - description: 'Authentication token. Requires scope: `admin.invites:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                invite_request_id:
                  description: ID of the request to invite.
                  type: string
                team_id:
                  description: ID for the workspace where the invite request was made.
                  type: string
              required:
              - invite_request_id
          application/x-www-form-urlencoded:
            schema:
              properties:
                invite_request_id:
                  description: ID of the request to invite.
                  type: string
                team_id:
                  description: ID for the workspace where the invite request was made.
                  type: string
              required:
              - invite_request_id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.invites:write
      tags:
      - admin.inviteRequests
      - admin
  /admin.inviteRequests.approved.list:
    get:
      description: List all approved workspace invite requests.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.inviteRequests.approved.list
      operationId: admin_inviteRequests_approved_list
      parameters:
      - description: 'Authentication token. Requires scope: `admin.invites:read`'
        in: header
        name: token
        required: true
        schema:
          type: string
      - description: ID for the workspace where the invite requests were made.
        in: query
        name: team_id
        schema:
          type: string
      - description: Value of the `next_cursor` field sent as part of the previous
          API response
        in: query
        name: cursor
        schema:
          type: string
      - description: The number of results that will be returned by the API on each
          invocation. Must be between 1 - 1000, both inclusive
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.invites:read
      tags:
      - admin.inviteRequests.approved
      - admin
  /admin.inviteRequests.denied.list:
    get:
      description: List all denied workspace invite requests.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.inviteRequests.denied.list
      operationId: admin_inviteRequests_denied_list
      parameters:
      - description: 'Authentication token. Requires scope: `admin.invites:read`'
        in: header
        name: token
        required: true
        schema:
          type: string
      - description: ID for the workspace where the invite requests were made.
        in: query
        name: team_id
        schema:
          type: string
      - description: Value of the `next_cursor` field sent as part of the previous
          api response
        in: query
        name: cursor
        schema:
          type: string
      - description: The number of results that will be returned by the API on each
          invocation. Must be between 1 - 1000 both inclusive
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.invites:read
      tags:
      - admin.inviteRequests.denied
      - admin
  /admin.inviteRequests.deny:
    post:
      description: Deny a workspace invite request.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.inviteRequests.deny
      operationId: admin_inviteRequests_deny
      parameters:
      - description: 'Authentication token. Requires scope: `admin.invites:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                invite_request_id:
                  description: ID of the request to invite.
                  type: string
                team_id:
                  description: ID for the workspace where the invite request was made.
                  type: string
              required:
              - invite_request_id
          application/x-www-form-urlencoded:
            schema:
              properties:
                invite_request_id:
                  description: ID of the request to invite.
                  type: string
                team_id:
                  description: ID for the workspace where the invite request was made.
                  type: string
              required:
              - invite_request_id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.invites:write
      tags:
      - admin.inviteRequests
      - admin
  /admin.inviteRequests.list:
    get:
      description: List all pending workspace invite requests.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.inviteRequests.list
      operationId: admin_inviteRequests_list
      parameters:
      - description: 'Authentication token. Requires scope: `admin.invites:read`'
        in: header
        name: token
        required: true
        schema:
          type: string
      - description: ID for the workspace where the invite requests were made.
        in: query
        name: team_id
        schema:
          type: string
      - description: Value of the `next_cursor` field sent as part of the previous
          API response
        in: query
        name: cursor
        schema:
          type: string
      - description: The number of results that will be returned by the API on each
          invocation. Must be between 1 - 1000, both inclusive
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.invites:read
      tags:
      - admin.inviteRequests
      - admin
  /admin.teams.admins.list:
    get:
      description: List all of the admins on a given workspace.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.teams.admins.list
      operationId: admin_teams_admins_list
      parameters:
      - description: 'Authentication token. Requires scope: `admin.teams:read`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - description: The maximum number of items to return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Set `cursor` to `next_cursor` returned by the previous call to
          list items in the next page.
        in: query
        name: cursor
        schema:
          type: string
      - in: query
        name: team_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.teams:read
      tags:
      - admin.teams.admins
      - admin
  /admin.teams.create:
    post:
      description: Create an Enterprise team.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.teams.create
      operationId: admin_teams_create
      parameters:
      - description: 'Authentication token. Requires scope: `admin.teams:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                team_description:
                  description: Description for the team.
                  type: string
                team_discoverability:
                  description: Who can join the team. A team's discoverability can
                    be `open`, `closed`, `invite_only`, or `unlisted`.
                  type: string
                team_domain:
                  description: Team domain (for example, slacksoftballteam).
                  type: string
                team_name:
                  description: Team name (for example, Slack Softball Team).
                  type: string
              required:
              - team_domain
              - team_name
          application/x-www-form-urlencoded:
            schema:
              properties:
                team_description:
                  description: Description for the team.
                  type: string
                team_discoverability:
                  description: Who can join the team. A team's discoverability can
                    be `open`, `closed`, `invite_only`, or `unlisted`.
                  type: string
                team_domain:
                  description: Team domain (for example, slacksoftballteam).
                  type: string
                team_name:
                  description: Team name (for example, Slack Softball Team).
                  type: string
              required:
              - team_domain
              - team_name
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.teams:write
      tags:
      - admin.teams
      - admin
  /admin.teams.list:
    get:
      description: List all teams on an Enterprise organization
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.teams.list
      operationId: admin_teams_list
      parameters:
      - description: 'Authentication token. Requires scope: `admin.teams:read`'
        in: header
        name: token
        required: true
        schema:
          type: string
      - description: The maximum number of items to return. Must be between 1 - 100
          both inclusive.
        in: query
        name: limit
        schema:
          type: integer
      - description: Set `cursor` to `next_cursor` returned by the previous call to
          list items in the next page.
        in: query
        name: cursor
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.teams:read
      tags:
      - admin.teams
      - admin
  /admin.teams.owners.list:
    get:
      description: List all of the owners on a given workspace.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.teams.owners.list
      operationId: admin_teams_owners_list
      parameters:
      - description: 'Authentication token. Requires scope: `admin.teams:read`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - in: query
        name: team_id
        required: true
        schema:
          type: string
      - description: The maximum number of items to return. Must be between 1 - 1000
          both inclusive.
        in: query
        name: limit
        schema:
          type: integer
      - description: Set `cursor` to `next_cursor` returned by the previous call to
          list items in the next page.
        in: query
        name: cursor
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.teams:read
      tags:
      - admin.teams.owners
      - admin
  /admin.teams.settings.info:
    get:
      description: Fetch information about settings in a workspace
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.teams.settings.info
      operationId: admin_teams_settings_info
      parameters:
      - description: 'Authentication token. Requires scope: `admin.teams:read`'
        in: header
        name: token
        required: true
        schema:
          type: string
      - in: query
        name: team_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.teams:read
      tags:
      - admin.teams.settings
      - admin
  /admin.teams.settings.setDefaultChannels:
    post:
      description: Set the default channels of a workspace.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.teams.settings.setDefaultChannels
      operationId: admin_teams_settings_setDefaultChannels
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel_ids:
                  description: An array of channel IDs.
                  type: string
                team_id:
                  description: ID for the workspace to set the default channel for.
                  type: string
                token:
                  description: 'Authentication token. Requires scope: `admin.teams:write`'
                  type: string
              required:
              - channel_ids
              - team_id
              - token
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.teams:write
      tags:
      - admin.teams.settings
      - admin
  /admin.teams.settings.setDescription:
    post:
      description: Set the description of a given workspace.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.teams.settings.setDescription
      operationId: admin_teams_settings_setDescription
      parameters:
      - description: 'Authentication token. Requires scope: `admin.teams:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: The new description for the workspace.
                  type: string
                team_id:
                  description: ID for the workspace to set the description for.
                  type: string
              required:
              - description
              - team_id
          application/x-www-form-urlencoded:
            schema:
              properties:
                description:
                  description: The new description for the workspace.
                  type: string
                team_id:
                  description: ID for the workspace to set the description for.
                  type: string
              required:
              - description
              - team_id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.teams:write
      tags:
      - admin.teams.settings
      - admin
  /admin.teams.settings.setDiscoverability:
    post:
      description: An API method that allows admins to set the discoverability of
        a given workspace
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.teams.settings.setDiscoverability
      operationId: admin_teams_settings_setDiscoverability
      parameters:
      - description: 'Authentication token. Requires scope: `admin.teams:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                discoverability:
                  description: This workspace's discovery setting. It must be set
                    to one of `open`, `invite_only`, `closed`, or `unlisted`.
                  type: string
                team_id:
                  description: The ID of the workspace to set discoverability on.
                  type: string
              required:
              - discoverability
              - team_id
          application/x-www-form-urlencoded:
            schema:
              properties:
                discoverability:
                  description: This workspace's discovery setting. It must be set
                    to one of `open`, `invite_only`, `closed`, or `unlisted`.
                  type: string
                team_id:
                  description: The ID of the workspace to set discoverability on.
                  type: string
              required:
              - discoverability
              - team_id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.teams:write
      tags:
      - admin.teams.settings
      - admin
  /admin.teams.settings.setIcon:
    post:
      description: Sets the icon of a workspace.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.teams.settings.setIcon
      operationId: admin_teams_settings_setIcon
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                image_url:
                  description: Image URL for the icon
                  type: string
                team_id:
                  description: ID for the workspace to set the icon for.
                  type: string
                token:
                  description: 'Authentication token. Requires scope: `admin.teams:write`'
                  type: string
              required:
              - image_url
              - team_id
              - token
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.teams:write
      tags:
      - admin.teams.settings
      - admin
  /admin.teams.settings.setName:
    post:
      description: Set the name of a given workspace.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.teams.settings.setName
      operationId: admin_teams_settings_setName
      parameters:
      - description: 'Authentication token. Requires scope: `admin.teams:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  description: The new name of the workspace.
                  type: string
                team_id:
                  description: ID for the workspace to set the name for.
                  type: string
              required:
              - name
              - team_id
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  description: The new name of the workspace.
                  type: string
                team_id:
                  description: ID for the workspace to set the name for.
                  type: string
              required:
              - name
              - team_id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.teams:write
      tags:
      - admin.teams.settings
      - admin
  /admin.usergroups.addChannels:
    post:
      description: Add one or more default channels to an IDP group.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.usergroups.addChannels
      operationId: admin_usergroups_addChannels
      parameters:
      - description: 'Authentication token. Requires scope: `admin.usergroups:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel_ids:
                  description: Comma separated string of channel IDs.
                  type: string
                team_id:
                  description: The workspace to add default channels in.
                  type: string
                usergroup_id:
                  description: ID of the IDP group to add default channels for.
                  type: string
              required:
              - channel_ids
              - usergroup_id
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel_ids:
                  description: Comma separated string of channel IDs.
                  type: string
                team_id:
                  description: The workspace to add default channels in.
                  type: string
                usergroup_id:
                  description: ID of the IDP group to add default channels for.
                  type: string
              required:
              - channel_ids
              - usergroup_id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response if the token provided is not associated
            with an Org Admin or Owner
      security:
      - slackAuth:
        - admin.usergroups:write
      tags:
      - admin.usergroups
      - admin
  /admin.usergroups.addTeams:
    post:
      description: Associate one or more default workspaces with an organization-wide
        IDP group.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.usergroups.addTeams
      operationId: admin_usergroups_addTeams
      parameters:
      - description: 'Authentication token. Requires scope: `admin.teams:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                auto_provision:
                  description: When `true`, this method automatically creates new
                    workspace accounts for the IDP group members.
                  type: boolean
                team_ids:
                  description: A comma separated list of encoded team (workspace)
                    IDs. Each workspace *MUST* belong to the organization associated
                    with the token.
                  type: string
                usergroup_id:
                  description: An encoded usergroup (IDP Group) ID.
                  type: string
              required:
              - team_ids
              - usergroup_id
          application/x-www-form-urlencoded:
            schema:
              properties:
                auto_provision:
                  description: When `true`, this method automatically creates new
                    workspace accounts for the IDP group members.
                  type: boolean
                team_ids:
                  description: A comma separated list of encoded team (workspace)
                    IDs. Each workspace *MUST* belong to the organization associated
                    with the token.
                  type: string
                usergroup_id:
                  description: An encoded usergroup (IDP Group) ID.
                  type: string
              required:
              - team_ids
              - usergroup_id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.teams:write
      tags:
      - admin.usergroups
      - admin
  /admin.usergroups.listChannels:
    get:
      description: List the channels linked to an org-level IDP group (user group).
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.usergroups.listChannels
      operationId: admin_usergroups_listChannels
      parameters:
      - description: 'Authentication token. Requires scope: `admin.usergroups:read`'
        in: header
        name: token
        required: true
        schema:
          type: string
      - description: ID of the IDP group to list default channels for.
        in: query
        name: usergroup_id
        required: true
        schema:
          type: string
      - description: ID of the the workspace.
        in: query
        name: team_id
        schema:
          type: string
      - description: Flag to include or exclude the count of members per channel.
        in: query
        name: include_num_members
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response if the token provided is not associated
            with an Org Admin or Owner
      security:
      - slackAuth:
        - admin.usergroups:read
      tags:
      - admin.usergroups
      - admin
  /admin.usergroups.removeChannels:
    post:
      description: Remove one or more default channels from an org-level IDP group
        (user group).
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.usergroups.removeChannels
      operationId: admin_usergroups_removeChannels
      parameters:
      - description: 'Authentication token. Requires scope: `admin.usergroups:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel_ids:
                  description: Comma-separated string of channel IDs
                  type: string
                usergroup_id:
                  description: ID of the IDP Group
                  type: string
              required:
              - channel_ids
              - usergroup_id
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel_ids:
                  description: Comma-separated string of channel IDs
                  type: string
                usergroup_id:
                  description: ID of the IDP Group
                  type: string
              required:
              - channel_ids
              - usergroup_id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response if the token provided is not associated
            with an Org Admin or Owner
      security:
      - slackAuth:
        - admin.usergroups:write
      tags:
      - admin.usergroups
      - admin
  /admin.users.assign:
    post:
      description: Add an Enterprise user to a workspace.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.users.assign
      operationId: admin_users_assign
      parameters:
      - description: 'Authentication token. Requires scope: `admin.users:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel_ids:
                  description: Comma separated values of channel IDs to add user in
                    the new workspace.
                  type: string
                is_restricted:
                  description: True if user should be added to the workspace as a
                    guest.
                  type: boolean
                is_ultra_restricted:
                  description: True if user should be added to the workspace as a
                    single-channel guest.
                  type: boolean
                team_id:
                  description: The ID (`T1234`) of the workspace.
                  type: string
                user_id:
                  description: The ID of the user to add to the workspace.
                  type: string
              required:
              - team_id
              - user_id
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel_ids:
                  description: Comma separated values of channel IDs to add user in
                    the new workspace.
                  type: string
                is_restricted:
                  description: True if user should be added to the workspace as a
                    guest.
                  type: boolean
                is_ultra_restricted:
                  description: True if user should be added to the workspace as a
                    single-channel guest.
                  type: boolean
                team_id:
                  description: The ID (`T1234`) of the workspace.
                  type: string
                user_id:
                  description: The ID of the user to add to the workspace.
                  type: string
              required:
              - team_id
              - user_id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.users:write
      tags:
      - admin.users
      - admin
  /admin.users.invite:
    post:
      description: Invite a user to a workspace.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.users.invite
      operationId: admin_users_invite
      parameters:
      - description: 'Authentication token. Requires scope: `admin.users:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel_ids:
                  description: A comma-separated list of `channel_id`s for this user
                    to join. At least one channel is required.
                  type: string
                custom_message:
                  description: An optional message to send to the user in the invite
                    email.
                  type: string
                email:
                  description: The email address of the person to invite.
                  type: string
                guest_expiration_ts:
                  description: Timestamp when guest account should be disabled. Only
                    include this timestamp if you are inviting a guest user and you
                    want their account to expire on a certain date.
                  type: string
                is_restricted:
                  description: 'Is this user a multi-channel guest user? (default:
                    false)'
                  type: boolean
                is_ultra_restricted:
                  description: 'Is this user a single channel guest user? (default:
                    false)'
                  type: boolean
                real_name:
                  description: Full name of the user.
                  type: string
                resend:
                  description: 'Allow this invite to be resent in the future if a
                    user has not signed up yet. (default: false)'
                  type: boolean
                team_id:
                  description: The ID (`T1234`) of the workspace.
                  type: string
              required:
              - channel_ids
              - email
              - team_id
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel_ids:
                  description: A comma-separated list of `channel_id`s for this user
                    to join. At least one channel is required.
                  type: string
                custom_message:
                  description: An optional message to send to the user in the invite
                    email.
                  type: string
                email:
                  description: The email address of the person to invite.
                  type: string
                guest_expiration_ts:
                  description: Timestamp when guest account should be disabled. Only
                    include this timestamp if you are inviting a guest user and you
                    want their account to expire on a certain date.
                  type: string
                is_restricted:
                  description: 'Is this user a multi-channel guest user? (default:
                    false)'
                  type: boolean
                is_ultra_restricted:
                  description: 'Is this user a single channel guest user? (default:
                    false)'
                  type: boolean
                real_name:
                  description: Full name of the user.
                  type: string
                resend:
                  description: 'Allow this invite to be resent in the future if a
                    user has not signed up yet. (default: false)'
                  type: boolean
                team_id:
                  description: The ID (`T1234`) of the workspace.
                  type: string
              required:
              - channel_ids
              - email
              - team_id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.users:write
      tags:
      - admin.users
      - admin
  /admin.users.list:
    get:
      description: List users on a workspace
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.users.list
      operationId: admin_users_list
      parameters:
      - description: 'Authentication token. Requires scope: `admin.users:read`'
        in: header
        name: token
        required: true
        schema:
          type: string
      - description: The ID (`T1234`) of the workspace.
        in: query
        name: team_id
        required: true
        schema:
          type: string
      - description: Set `cursor` to `next_cursor` returned by the previous call to
          list items in the next page.
        in: query
        name: cursor
        schema:
          type: string
      - description: Limit for how many users to be retrieved per page
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.users:read
      tags:
      - admin.users
      - admin
  /admin.users.remove:
    post:
      description: Remove a user from a workspace.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.users.remove
      operationId: admin_users_remove
      parameters:
      - description: 'Authentication token. Requires scope: `admin.users:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                team_id:
                  description: The ID (`T1234`) of the workspace.
                  type: string
                user_id:
                  description: The ID of the user to remove.
                  type: string
              required:
              - team_id
              - user_id
          application/x-www-form-urlencoded:
            schema:
              properties:
                team_id:
                  description: The ID (`T1234`) of the workspace.
                  type: string
                user_id:
                  description: The ID of the user to remove.
                  type: string
              required:
              - team_id
              - user_id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.users:write
      tags:
      - admin.users
      - admin
  /admin.users.session.invalidate:
    post:
      description: Invalidate a single session for a user by session_id
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.users.session.invalidate
      operationId: admin_users_session_invalidate
      parameters:
      - description: 'Authentication token. Requires scope: `admin.users:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                session_id:
                  format: int32
                  type: integer
                team_id:
                  description: ID of the team that the session belongs to
                  type: string
              required:
              - session_id
              - team_id
          application/x-www-form-urlencoded:
            schema:
              properties:
                session_id:
                  format: int32
                  type: integer
                team_id:
                  description: ID of the team that the session belongs to
                  type: string
              required:
              - session_id
              - team_id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.users:write
      tags:
      - admin.users.session
      - admin
  /admin.users.session.reset:
    post:
      description: Wipes all valid sessions on all devices for a given user
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.users.session.reset
      operationId: admin_users_session_reset
      parameters:
      - description: 'Authentication token. Requires scope: `admin.users:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                mobile_only:
                  description: 'Only expire mobile sessions (default: false)'
                  type: boolean
                user_id:
                  description: The ID of the user to wipe sessions for
                  type: string
                web_only:
                  description: 'Only expire web sessions (default: false)'
                  type: boolean
              required:
              - user_id
          application/x-www-form-urlencoded:
            schema:
              properties:
                mobile_only:
                  description: 'Only expire mobile sessions (default: false)'
                  type: boolean
                user_id:
                  description: The ID of the user to wipe sessions for
                  type: string
                web_only:
                  description: 'Only expire web sessions (default: false)'
                  type: boolean
              required:
              - user_id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.users:write
      tags:
      - admin.users.session
      - admin
  /admin.users.setAdmin:
    post:
      description: Set an existing guest, regular user, or owner to be an admin user.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.users.setAdmin
      operationId: admin_users_setAdmin
      parameters:
      - description: 'Authentication token. Requires scope: `admin.users:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                team_id:
                  description: The ID (`T1234`) of the workspace.
                  type: string
                user_id:
                  description: The ID of the user to designate as an admin.
                  type: string
              required:
              - team_id
              - user_id
          application/x-www-form-urlencoded:
            schema:
              properties:
                team_id:
                  description: The ID (`T1234`) of the workspace.
                  type: string
                user_id:
                  description: The ID of the user to designate as an admin.
                  type: string
              required:
              - team_id
              - user_id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.users:write
      tags:
      - admin.users
      - admin
  /admin.users.setExpiration:
    post:
      description: Set an expiration for a guest user
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.users.setExpiration
      operationId: admin_users_setExpiration
      parameters:
      - description: 'Authentication token. Requires scope: `admin.users:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                expiration_ts:
                  description: Timestamp when guest account should be disabled.
                  format: int32
                  type: integer
                team_id:
                  description: The ID (`T1234`) of the workspace.
                  type: string
                user_id:
                  description: The ID of the user to set an expiration for.
                  type: string
              required:
              - expiration_ts
              - team_id
              - user_id
          application/x-www-form-urlencoded:
            schema:
              properties:
                expiration_ts:
                  description: Timestamp when guest account should be disabled.
                  format: int32
                  type: integer
                team_id:
                  description: The ID (`T1234`) of the workspace.
                  type: string
                user_id:
                  description: The ID of the user to set an expiration for.
                  type: string
              required:
              - expiration_ts
              - team_id
              - user_id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.users:write
      tags:
      - admin.users
      - admin
  /admin.users.setOwner:
    post:
      description: Set an existing guest, regular user, or admin user to be a workspace
        owner.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.users.setOwner
      operationId: admin_users_setOwner
      parameters:
      - description: 'Authentication token. Requires scope: `admin.users:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                team_id:
                  description: The ID (`T1234`) of the workspace.
                  type: string
                user_id:
                  description: Id of the user to promote to owner.
                  type: string
              required:
              - team_id
              - user_id
          application/x-www-form-urlencoded:
            schema:
              properties:
                team_id:
                  description: The ID (`T1234`) of the workspace.
                  type: string
                user_id:
                  description: Id of the user to promote to owner.
                  type: string
              required:
              - team_id
              - user_id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.users:write
      tags:
      - admin.users
      - admin
  /admin.users.setRegular:
    post:
      description: Set an existing guest user, admin user, or owner to be a regular
        user.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/admin.users.setRegular
      operationId: admin_users_setRegular
      parameters:
      - description: 'Authentication token. Requires scope: `admin.users:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                team_id:
                  description: The ID (`T1234`) of the workspace.
                  type: string
                user_id:
                  description: The ID of the user to designate as a regular user.
                  type: string
              required:
              - team_id
              - user_id
          application/x-www-form-urlencoded:
            schema:
              properties:
                team_id:
                  description: The ID (`T1234`) of the workspace.
                  type: string
                user_id:
                  description: The ID of the user to designate as a regular user.
                  type: string
              required:
              - team_id
              - user_id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin.users:write
      tags:
      - admin.users
      - admin
  /api.test:
    get:
      description: Checks API calling code.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/api.test
      operationId: api_test
      parameters:
      - description: Error response to return
        in: query
        name: error
        schema:
          type: string
      - description: example property to return
        in: query
        name: foo
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  properties: {}
                  type: object
                description: Schema for successful response api.test method
                title: api.test success schema
                type: object
          description: Standard success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  properties: {}
                  type: object
                description: Schema for error response api.test method
                title: api.test error schema
                type: object
          description: Artificial error response
      security:
      - slackAuth:
        - none
      tags:
      - api
  /apps.event.authorizations.list:
    get:
      description: Get a list of authorizations for the given event context. Each
        authorization represents an app installation that the event is visible to.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/apps.event.authorizations.list
      operationId: apps_event_authorizations_list
      parameters:
      - description: 'Authentication token. Requires scope: `authorizations:read`'
        in: header
        name: token
        required: true
        schema:
          type: string
      - in: query
        name: event_context
        required: true
        schema:
          type: string
      - in: query
        name: cursor
        schema:
          type: string
      - in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - authorizations:read
      tags:
      - apps.event.authorizations
      - apps
  /apps.permissions.info:
    get:
      description: Returns list of permissions this app has on a team.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/apps.permissions.info
      operationId: apps_permissions_info
      parameters:
      - description: 'Authentication token. Requires scope: `none`'
        in: query
        name: token
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from apps.permissions.info
                  method
                title: apps.permissions.info schema
                type: object
          description: Standard success response when used with a user token
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from apps.permissions.info
                  method
                title: apps.permissions.info error schema
                type: object
          description: Standard failure response when used with an invalid token
      security:
      - slackAuth:
        - none
      tags:
      - apps.permissions
      - apps
  /apps.permissions.request:
    get:
      description: Allows an app to request additional scopes
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/apps.permissions.request
      operationId: apps_permissions_request
      parameters:
      - description: 'Authentication token. Requires scope: `none`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - description: A comma separated list of scopes to request for
        in: query
        name: scopes
        required: true
        schema:
          type: string
      - description: Token used to trigger the permissions API
        in: query
        name: trigger_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from apps.permissions.request
                  method
                title: apps.permissions.request schema
                type: object
          description: Standard success response when used with a user token
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from apps.permissions.request
                  method
                title: apps.permissions.request error schema
                type: object
          description: Standard failure response when trigger_id is invalid
      security:
      - slackAuth:
        - none
      tags:
      - apps.permissions
      - apps
  /apps.permissions.resources.list:
    get:
      description: Returns list of resource grants this app has on a team.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/apps.permissions.resources.list
      operationId: apps_permissions_resources_list
      parameters:
      - description: 'Authentication token. Requires scope: `none`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
        in: query
        name: cursor
        schema:
          type: string
      - description: The maximum number of items to return.
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response apps.permissions.resources.list
                  method
                title: apps.permissions.resources.list success schema
                type: object
          description: Typical successful paginated response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from apps.permissions.resources.list
                  method
                title: apps.permissions.resources.list error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - none
      tags:
      - apps.permissions.resources
      - apps
  /apps.permissions.scopes.list:
    get:
      description: Returns list of scopes this app has on a team.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/apps.permissions.scopes.list
      operationId: apps_permissions_scopes_list
      parameters:
      - description: 'Authentication token. Requires scope: `none`'
        in: query
        name: token
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response api.permissions.scopes.list
                  method
                title: api.permissions.scopes.list success schema
                type: object
          description: Typical successful paginated response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from apps.permissions.scopes.list
                  method
                title: apps.permissions.scopes.list error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - none
      tags:
      - apps.permissions.scopes
      - apps
  /apps.permissions.users.list:
    get:
      description: Returns list of user grants and corresponding scopes this app has
        on a team.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/apps.permissions.users.list
      operationId: apps_permissions_users_list
      parameters:
      - description: 'Authentication token. Requires scope: `none`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
        in: query
        name: cursor
        schema:
          type: string
      - description: The maximum number of items to return.
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical successful paginated response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - none
      tags:
      - apps.permissions.users
      - apps
  /apps.permissions.users.request:
    get:
      description: Enables an app to trigger a permissions modal to grant an app access
        to a user access scope.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/apps.permissions.users.request
      operationId: apps_permissions_users_request
      parameters:
      - description: 'Authentication token. Requires scope: `none`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - description: A comma separated list of user scopes to request for
        in: query
        name: scopes
        required: true
        schema:
          type: string
      - description: Token used to trigger the request
        in: query
        name: trigger_id
        required: true
        schema:
          type: string
      - description: The user this scope is being requested for
        in: query
        name: user
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Standard success response when used with a user token
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Standard failure response when trigger_id is invalid
      security:
      - slackAuth:
        - none
      tags:
      - apps.permissions.users
      - apps
  /apps.uninstall:
    get:
      description: Uninstalls your app from a workspace.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/apps.uninstall
      operationId: apps_uninstall
      parameters:
      - description: 'Authentication token. Requires scope: `none`'
        in: query
        name: token
        schema:
          type: string
      - description: Issued when you created your application.
        in: query
        name: client_id
        schema:
          type: string
      - description: Issued when you created your application.
        in: query
        name: client_secret
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from apps.uninstall method
                title: apps.uninstall schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from apps.uninstall method
                title: apps.uninstall error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - none
      tags:
      - apps
  /auth.revoke:
    get:
      description: Revokes a token.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/auth.revoke
      operationId: auth_revoke
      parameters:
      - description: 'Authentication token. Requires scope: `none`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - description: Setting this parameter to `1` triggers a _testing mode_ where
          the specified token will not actually be revoked.
        in: query
        name: test
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from auth.revoke method
                title: auth.revoke schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from auth.revoke method
                title: auth.revoke error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - none
      tags:
      - auth
  /auth.test:
    get:
      description: Checks authentication & identity.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/auth.test
      operationId: auth_test
      parameters:
      - description: 'Authentication token. Requires scope: `none`'
        in: header
        name: token
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response auth.test method
                title: auth.test success schema
                type: object
          description: Standard success response when used with a user token
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response auth.test method
                title: auth.test error schema
                type: object
          description: Standard failure response when used with an invalid token
      security:
      - slackAuth:
        - none
      tags:
      - auth
  /bots.info:
    get:
      description: Gets information about a bot user.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/bots.info
      operationId: bots_info
      parameters:
      - description: 'Authentication token. Requires scope: `users:read`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - description: Bot user to get info on
        in: query
        name: bot
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from bots.info method
                title: bots.info schema
                type: object
          description: When successful, returns bot info by bot ID.
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from bots.info method
                title: bots.info error schema
                type: object
          description: When no bot can be found, it returns an error.
      security:
      - slackAuth:
        - users:read
      tags:
      - bots
  /calls.add:
    post:
      description: Registers a new Call.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/calls.add
      operationId: calls_add
      parameters:
      - description: 'Authentication token. Requires scope: `calls:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                created_by:
                  description: The valid Slack user ID of the user who created this
                    Call. When this method is called with a user token, the `created_by`
                    field is optional and defaults to the authed user of the token.
                    Otherwise, the field is required.
                  type: string
                date_start:
                  description: Call start time in UTC UNIX timestamp format
                  format: int32
                  type: integer
                desktop_app_join_url:
                  description: When supplied, available Slack clients will attempt
                    to directly launch the 3rd-party Call with this URL.
                  type: string
                external_display_id:
                  description: An optional, human-readable ID supplied by the 3rd-party
                    Call provider. If supplied, this ID will be displayed in the Call
                    object.
                  type: string
                external_unique_id:
                  description: An ID supplied by the 3rd-party Call provider. It must
                    be unique across all Calls from that service.
                  type: string
                join_url:
                  description: The URL required for a client to join the Call.
                  type: string
                title:
                  description: The name of the Call.
                  type: string
                users:
                  description: The list of users to register as participants in the
                    Call. [Read more on how to specify users here](/apis/calls#users).
                  type: string
              required:
              - external_unique_id
              - join_url
          application/x-www-form-urlencoded:
            schema:
              properties:
                created_by:
                  description: The valid Slack user ID of the user who created this
                    Call. When this method is called with a user token, the `created_by`
                    field is optional and defaults to the authed user of the token.
                    Otherwise, the field is required.
                  type: string
                date_start:
                  description: Call start time in UTC UNIX timestamp format
                  format: int32
                  type: integer
                desktop_app_join_url:
                  description: When supplied, available Slack clients will attempt
                    to directly launch the 3rd-party Call with this URL.
                  type: string
                external_display_id:
                  description: An optional, human-readable ID supplied by the 3rd-party
                    Call provider. If supplied, this ID will be displayed in the Call
                    object.
                  type: string
                external_unique_id:
                  description: An ID supplied by the 3rd-party Call provider. It must
                    be unique across all Calls from that service.
                  type: string
                join_url:
                  description: The URL required for a client to join the Call.
                  type: string
                title:
                  description: The name of the Call.
                  type: string
                users:
                  description: The list of users to register as participants in the
                    Call. [Read more on how to specify users here](/apis/calls#users).
                  type: string
              required:
              - external_unique_id
              - join_url
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - calls:write
      tags:
      - calls
  /calls.end:
    post:
      description: Ends a Call.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/calls.end
      operationId: calls_end
      parameters:
      - description: 'Authentication token. Requires scope: `calls:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                duration:
                  description: Call duration in seconds
                  format: int32
                  type: integer
                id:
                  description: '`id` returned when registering the call using the
                    [`calls.add`](/methods/calls.add) method.'
                  type: string
              required:
              - id
          application/x-www-form-urlencoded:
            schema:
              properties:
                duration:
                  description: Call duration in seconds
                  format: int32
                  type: integer
                id:
                  description: '`id` returned when registering the call using the
                    [`calls.add`](/methods/calls.add) method.'
                  type: string
              required:
              - id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - calls:write
      tags:
      - calls
  /calls.info:
    get:
      description: Returns information about a Call.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/calls.info
      operationId: calls_info
      parameters:
      - description: 'Authentication token. Requires scope: `calls:read`'
        in: header
        name: token
        required: true
        schema:
          type: string
      - description: '`id` of the Call returned by the [`calls.add`](/methods/calls.add)
          method.'
        in: query
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - calls:read
      tags:
      - calls
  /calls.participants.add:
    post:
      description: Registers new participants added to a Call.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/calls.participants.add
      operationId: calls_participants_add
      parameters:
      - description: 'Authentication token. Requires scope: `calls:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  description: '`id` returned by the [`calls.add`](/methods/calls.add)
                    method.'
                  type: string
                users:
                  description: The list of users to add as participants in the Call.
                    [Read more on how to specify users here](/apis/calls#users).
                  type: string
              required:
              - id
              - users
          application/x-www-form-urlencoded:
            schema:
              properties:
                id:
                  description: '`id` returned by the [`calls.add`](/methods/calls.add)
                    method.'
                  type: string
                users:
                  description: The list of users to add as participants in the Call.
                    [Read more on how to specify users here](/apis/calls#users).
                  type: string
              required:
              - id
              - users
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - calls:write
      tags:
      - calls.participants
      - calls
  /calls.participants.remove:
    post:
      description: Registers participants removed from a Call.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/calls.participants.remove
      operationId: calls_participants_remove
      parameters:
      - description: 'Authentication token. Requires scope: `calls:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  description: '`id` returned by the [`calls.add`](/methods/calls.add)
                    method.'
                  type: string
                users:
                  description: The list of users to remove as participants in the
                    Call. [Read more on how to specify users here](/apis/calls#users).
                  type: string
              required:
              - id
              - users
          application/x-www-form-urlencoded:
            schema:
              properties:
                id:
                  description: '`id` returned by the [`calls.add`](/methods/calls.add)
                    method.'
                  type: string
                users:
                  description: The list of users to remove as participants in the
                    Call. [Read more on how to specify users here](/apis/calls#users).
                  type: string
              required:
              - id
              - users
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - calls:write
      tags:
      - calls.participants
      - calls
  /calls.update:
    post:
      description: Updates information about a Call.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/calls.update
      operationId: calls_update
      parameters:
      - description: 'Authentication token. Requires scope: `calls:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                desktop_app_join_url:
                  description: When supplied, available Slack clients will attempt
                    to directly launch the 3rd-party Call with this URL.
                  type: string
                id:
                  description: '`id` returned by the [`calls.add`](/methods/calls.add)
                    method.'
                  type: string
                join_url:
                  description: The URL required for a client to join the Call.
                  type: string
                title:
                  description: The name of the Call.
                  type: string
              required:
              - id
          application/x-www-form-urlencoded:
            schema:
              properties:
                desktop_app_join_url:
                  description: When supplied, available Slack clients will attempt
                    to directly launch the 3rd-party Call with this URL.
                  type: string
                id:
                  description: '`id` returned by the [`calls.add`](/methods/calls.add)
                    method.'
                  type: string
                join_url:
                  description: The URL required for a client to join the Call.
                  type: string
                title:
                  description: The name of the Call.
                  type: string
              required:
              - id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - calls:write
      tags:
      - calls
  /chat.delete:
    post:
      description: Deletes a message.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/chat.delete
      operationId: chat_delete
      parameters:
      - description: 'Authentication token. Requires scope: `chat:write`'
        in: header
        name: token
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                as_user:
                  description: Pass true to delete the message as the authed user
                    with `chat:write:user` scope. [Bot users](/bot-users) in this
                    context are considered authed users. If unused or false, the message
                    will be deleted with `chat:write:bot` scope.
                  type: boolean
                channel:
                  description: Channel containing the message to be deleted.
                  type: string
                ts:
                  description: Timestamp of the message to be deleted.
                  type: number
          application/x-www-form-urlencoded:
            schema:
              properties:
                as_user:
                  description: Pass true to delete the message as the authed user
                    with `chat:write:user` scope. [Bot users](/bot-users) in this
                    context are considered authed users. If unused or false, the message
                    will be deleted with `chat:write:bot` scope.
                  type: boolean
                channel:
                  description: Channel containing the message to be deleted.
                  type: string
                ts:
                  description: Timestamp of the message to be deleted.
                  type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response of chat.delete method
                title: chat.delete success schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from chat.delete method
                title: chat.delete error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - chat:write:user
        - chat:write:bot
      tags:
      - chat
  /chat.deleteScheduledMessage:
    post:
      description: Deletes a pending scheduled message from the queue.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/chat.deleteScheduledMessage
      operationId: chat_deleteScheduledMessage
      parameters:
      - description: 'Authentication token. Requires scope: `chat:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                as_user:
                  description: Pass true to delete the message as the authed user
                    with `chat:write:user` scope. [Bot users](/bot-users) in this
                    context are considered authed users. If unused or false, the message
                    will be deleted with `chat:write:bot` scope.
                  type: boolean
                channel:
                  description: The channel the scheduled_message is posting to
                  type: string
                scheduled_message_id:
                  description: '`scheduled_message_id` returned from call to chat.scheduleMessage'
                  type: string
              required:
              - channel
              - scheduled_message_id
          application/x-www-form-urlencoded:
            schema:
              properties:
                as_user:
                  description: Pass true to delete the message as the authed user
                    with `chat:write:user` scope. [Bot users](/bot-users) in this
                    context are considered authed users. If unused or false, the message
                    will be deleted with `chat:write:bot` scope.
                  type: boolean
                channel:
                  description: The channel the scheduled_message is posting to
                  type: string
                scheduled_message_id:
                  description: '`scheduled_message_id` returned from call to chat.scheduleMessage'
                  type: string
              required:
              - channel
              - scheduled_message_id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from chat.deleteScheduledMessage
                  method
                title: chat.deleteScheduledMessage schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from chat.deleteScheduledMessage
                  method
                title: chat.deleteScheduledMessage error schema
                type: object
          description: Typical error response if no message is found
      security:
      - slackAuth:
        - chat:write:user
        - chat:write:bot
      tags:
      - chat
  /chat.getPermalink:
    get:
      description: Retrieve a permalink URL for a specific extant message
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/chat.getPermalink
      operationId: chat_getPermalink
      parameters:
      - description: 'Authentication token. Requires scope: `none`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - description: The ID of the conversation or channel containing the message
        in: query
        name: channel
        required: true
        schema:
          type: string
      - description: A message's `ts` value, uniquely identifying it within a channel
        in: query
        name: message_ts
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response chat.getPermalink
                title: chat.getPermalink success schema
                type: object
          description: Standard success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from chat.getPermalink method
                title: chat.getPermalink error schema
                type: object
          description: Error response when channel cannot be found
      security:
      - slackAuth:
        - none
      tags:
      - chat
  /chat.meMessage:
    post:
      description: Share a me message into a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/chat.meMessage
      operationId: chat_meMessage
      parameters:
      - description: 'Authentication token. Requires scope: `chat:write`'
        in: header
        name: token
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel:
                  description: Channel to send message to. Can be a public channel,
                    private group or IM channel. Can be an encoded ID, or a name.
                  type: string
                text:
                  description: Text of the message to send.
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  description: Channel to send message to. Can be a public channel,
                    private group or IM channel. Can be an encoded ID, or a name.
                  type: string
                text:
                  description: Text of the message to send.
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from chat.meMessage method
                title: chat.meMessage schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from chat.meMessage method
                title: chat.meMessage error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - chat:write:user
        - chat:write:bot
      tags:
      - chat
  /chat.postEphemeral:
    post:
      description: Sends an ephemeral message to a user in a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/chat.postEphemeral
      operationId: chat_postEphemeral
      parameters:
      - description: 'Authentication token. Requires scope: `chat:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                as_user:
                  description: Pass true to post the message as the authed user. Defaults
                    to true if the chat:write:bot scope is not included. Otherwise,
                    defaults to false.
                  type: boolean
                attachments:
                  description: A JSON-based array of structured attachments, presented
                    as a URL-encoded string.
                  type: string
                blocks:
                  description: A JSON-based array of structured blocks, presented
                    as a URL-encoded string.
                  type: string
                channel:
                  description: Channel, private group, or IM channel to send message
                    to. Can be an encoded ID, or a name.
                  type: string
                icon_emoji:
                  description: Emoji to use as the icon for this message. Overrides
                    `icon_url`. Must be used in conjunction with `as_user` set to
                    `false`, otherwise ignored. See [authorship](#authorship) below.
                  type: string
                icon_url:
                  description: URL to an image to use as the icon for this message.
                    Must be used in conjunction with `as_user` set to false, otherwise
                    ignored. See [authorship](#authorship) below.
                  type: string
                link_names:
                  description: Find and link channel names and usernames.
                  type: boolean
                parse:
                  description: Change how messages are treated. Defaults to `none`.
                    See [below](#formatting).
                  type: string
                text:
                  description: How this field works and whether it is required depends
                    on other fields you use in your API call. [See below](#text_usage)
                    for more detail.
                  type: string
                thread_ts:
                  description: Provide another message's `ts` value to post this message
                    in a thread. Avoid using a reply's `ts` value; use its parent's
                    value instead. Ephemeral messages in threads are only shown if
                    there is already an active thread.
                  type: string
                user:
                  description: '`id` of the user who will receive the ephemeral message.
                    The user should be in the channel specified by the `channel` argument.'
                  type: string
                username:
                  description: Set your bot's user name. Must be used in conjunction
                    with `as_user` set to false, otherwise ignored. See [authorship](#authorship)
                    below.
                  type: string
              required:
              - channel
              - user
          application/x-www-form-urlencoded:
            schema:
              properties:
                as_user:
                  description: Pass true to post the message as the authed user. Defaults
                    to true if the chat:write:bot scope is not included. Otherwise,
                    defaults to false.
                  type: boolean
                attachments:
                  description: A JSON-based array of structured attachments, presented
                    as a URL-encoded string.
                  type: string
                blocks:
                  description: A JSON-based array of structured blocks, presented
                    as a URL-encoded string.
                  type: string
                channel:
                  description: Channel, private group, or IM channel to send message
                    to. Can be an encoded ID, or a name.
                  type: string
                icon_emoji:
                  description: Emoji to use as the icon for this message. Overrides
                    `icon_url`. Must be used in conjunction with `as_user` set to
                    `false`, otherwise ignored. See [authorship](#authorship) below.
                  type: string
                icon_url:
                  description: URL to an image to use as the icon for this message.
                    Must be used in conjunction with `as_user` set to false, otherwise
                    ignored. See [authorship](#authorship) below.
                  type: string
                link_names:
                  description: Find and link channel names and usernames.
                  type: boolean
                parse:
                  description: Change how messages are treated. Defaults to `none`.
                    See [below](#formatting).
                  type: string
                text:
                  description: How this field works and whether it is required depends
                    on other fields you use in your API call. [See below](#text_usage)
                    for more detail.
                  type: string
                thread_ts:
                  description: Provide another message's `ts` value to post this message
                    in a thread. Avoid using a reply's `ts` value; use its parent's
                    value instead. Ephemeral messages in threads are only shown if
                    there is already an active thread.
                  type: string
                user:
                  description: '`id` of the user who will receive the ephemeral message.
                    The user should be in the channel specified by the `channel` argument.'
                  type: string
                username:
                  description: Set your bot's user name. Must be used in conjunction
                    with `as_user` set to false, otherwise ignored. See [authorship](#authorship)
                    below.
                  type: string
              required:
              - channel
              - user
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from chat.postEphemeral
                  method
                title: chat.postEphemeral success schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from chat.postEphemeral method
                title: chat.postEphemeral error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - chat:write:user
        - chat:write:bot
      tags:
      - chat
  /chat.postMessage:
    post:
      description: Sends a message to a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/chat.postMessage
      operationId: chat_postMessage
      parameters:
      - description: 'Authentication token. Requires scope: `chat:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                as_user:
                  description: Pass true to post the message as the authed user, instead
                    of as a bot. Defaults to false. See [authorship](#authorship)
                    below.
                  type: string
                attachments:
                  description: A JSON-based array of structured attachments, presented
                    as a URL-encoded string.
                  type: string
                blocks:
                  description: A JSON-based array of structured blocks, presented
                    as a URL-encoded string.
                  type: string
                channel:
                  description: Channel, private group, or IM channel to send message
                    to. Can be an encoded ID, or a name. See [below](#channels) for
                    more details.
                  type: string
                icon_emoji:
                  description: Emoji to use as the icon for this message. Overrides
                    `icon_url`. Must be used in conjunction with `as_user` set to
                    `false`, otherwise ignored. See [authorship](#authorship) below.
                  type: string
                icon_url:
                  description: URL to an image to use as the icon for this message.
                    Must be used in conjunction with `as_user` set to false, otherwise
                    ignored. See [authorship](#authorship) below.
                  type: string
                link_names:
                  description: Find and link channel names and usernames.
                  type: boolean
                mrkdwn:
                  description: Disable Slack markup parsing by setting to `false`.
                    Enabled by default.
                  type: boolean
                parse:
                  description: Change how messages are treated. Defaults to `none`.
                    See [below](#formatting).
                  type: string
                reply_broadcast:
                  description: Used in conjunction with `thread_ts` and indicates
                    whether reply should be made visible to everyone in the channel
                    or conversation. Defaults to `false`.
                  type: boolean
                text:
                  description: How this field works and whether it is required depends
                    on other fields you use in your API call. [See below](#text_usage)
                    for more detail.
                  type: string
                thread_ts:
                  description: Provide another message's `ts` value to make this message
                    a reply. Avoid using a reply's `ts` value; use its parent instead.
                  type: string
                unfurl_links:
                  description: Pass true to enable unfurling of primarily text-based
                    content.
                  type: boolean
                unfurl_media:
                  description: Pass false to disable unfurling of media content.
                  type: boolean
                username:
                  description: Set your bot's user name. Must be used in conjunction
                    with `as_user` set to false, otherwise ignored. See [authorship](#authorship)
                    below.
                  type: string
              required:
              - channel
          application/x-www-form-urlencoded:
            schema:
              properties:
                as_user:
                  description: Pass true to post the message as the authed user, instead
                    of as a bot. Defaults to false. See [authorship](#authorship)
                    below.
                  type: string
                attachments:
                  description: A JSON-based array of structured attachments, presented
                    as a URL-encoded string.
                  type: string
                blocks:
                  description: A JSON-based array of structured blocks, presented
                    as a URL-encoded string.
                  type: string
                channel:
                  description: Channel, private group, or IM channel to send message
                    to. Can be an encoded ID, or a name. See [below](#channels) for
                    more details.
                  type: string
                icon_emoji:
                  description: Emoji to use as the icon for this message. Overrides
                    `icon_url`. Must be used in conjunction with `as_user` set to
                    `false`, otherwise ignored. See [authorship](#authorship) below.
                  type: string
                icon_url:
                  description: URL to an image to use as the icon for this message.
                    Must be used in conjunction with `as_user` set to false, otherwise
                    ignored. See [authorship](#authorship) below.
                  type: string
                link_names:
                  description: Find and link channel names and usernames.
                  type: boolean
                mrkdwn:
                  description: Disable Slack markup parsing by setting to `false`.
                    Enabled by default.
                  type: boolean
                parse:
                  description: Change how messages are treated. Defaults to `none`.
                    See [below](#formatting).
                  type: string
                reply_broadcast:
                  description: Used in conjunction with `thread_ts` and indicates
                    whether reply should be made visible to everyone in the channel
                    or conversation. Defaults to `false`.
                  type: boolean
                text:
                  description: How this field works and whether it is required depends
                    on other fields you use in your API call. [See below](#text_usage)
                    for more detail.
                  type: string
                thread_ts:
                  description: Provide another message's `ts` value to make this message
                    a reply. Avoid using a reply's `ts` value; use its parent instead.
                  type: string
                unfurl_links:
                  description: Pass true to enable unfurling of primarily text-based
                    content.
                  type: boolean
                unfurl_media:
                  description: Pass false to disable unfurling of media content.
                  type: boolean
                username:
                  description: Set your bot's user name. Must be used in conjunction
                    with `as_user` set to false, otherwise ignored. See [authorship](#authorship)
                    below.
                  type: string
              required:
              - channel
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response of chat.postMessage method
                title: chat.postMessage success schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response chat.postMessage method
                title: chat.postMessage error schema
                type: object
          description: Typical error response if too many attachments are included
      security:
      - slackAuth:
        - chat:write:user
        - chat:write:bot
      tags:
      - chat
  /chat.scheduleMessage:
    post:
      description: Schedules a message to be sent to a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/chat.scheduleMessage
      operationId: chat_scheduleMessage
      parameters:
      - description: 'Authentication token. Requires scope: `chat:write`'
        in: header
        name: token
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                as_user:
                  description: Pass true to post the message as the authed user, instead
                    of as a bot. Defaults to false. See [chat.postMessage](chat.postMessage#authorship).
                  type: boolean
                attachments:
                  description: A JSON-based array of structured attachments, presented
                    as a URL-encoded string.
                  type: string
                blocks:
                  description: A JSON-based array of structured blocks, presented
                    as a URL-encoded string.
                  type: string
                channel:
                  description: Channel, private group, or DM channel to send message
                    to. Can be an encoded ID, or a name. See [below](#channels) for
                    more details.
                  type: string
                link_names:
                  description: Find and link channel names and usernames.
                  type: boolean
                parse:
                  description: Change how messages are treated. Defaults to `none`.
                    See [chat.postMessage](chat.postMessage#formatting).
                  type: string
                post_at:
                  description: Unix EPOCH timestamp of time in future to send the
                    message.
                  type: string
                reply_broadcast:
                  description: Used in conjunction with `thread_ts` and indicates
                    whether reply should be made visible to everyone in the channel
                    or conversation. Defaults to `false`.
                  type: boolean
                text:
                  description: How this field works and whether it is required depends
                    on other fields you use in your API call. [See below](#text_usage)
                    for more detail.
                  type: string
                thread_ts:
                  description: Provide another message's `ts` value to make this message
                    a reply. Avoid using a reply's `ts` value; use its parent instead.
                  type: number
                unfurl_links:
                  description: Pass true to enable unfurling of primarily text-based
                    content.
                  type: boolean
                unfurl_media:
                  description: Pass false to disable unfurling of media content.
                  type: boolean
          application/x-www-form-urlencoded:
            schema:
              properties:
                as_user:
                  description: Pass true to post the message as the authed user, instead
                    of as a bot. Defaults to false. See [chat.postMessage](chat.postMessage#authorship).
                  type: boolean
                attachments:
                  description: A JSON-based array of structured attachments, presented
                    as a URL-encoded string.
                  type: string
                blocks:
                  description: A JSON-based array of structured blocks, presented
                    as a URL-encoded string.
                  type: string
                channel:
                  description: Channel, private group, or DM channel to send message
                    to. Can be an encoded ID, or a name. See [below](#channels) for
                    more details.
                  type: string
                link_names:
                  description: Find and link channel names and usernames.
                  type: boolean
                parse:
                  description: Change how messages are treated. Defaults to `none`.
                    See [chat.postMessage](chat.postMessage#formatting).
                  type: string
                post_at:
                  description: Unix EPOCH timestamp of time in future to send the
                    message.
                  type: string
                reply_broadcast:
                  description: Used in conjunction with `thread_ts` and indicates
                    whether reply should be made visible to everyone in the channel
                    or conversation. Defaults to `false`.
                  type: boolean
                text:
                  description: How this field works and whether it is required depends
                    on other fields you use in your API call. [See below](#text_usage)
                    for more detail.
                  type: string
                thread_ts:
                  description: Provide another message's `ts` value to make this message
                    a reply. Avoid using a reply's `ts` value; use its parent instead.
                  type: number
                unfurl_links:
                  description: Pass true to enable unfurling of primarily text-based
                    content.
                  type: boolean
                unfurl_media:
                  description: Pass false to disable unfurling of media content.
                  type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response of chat.scheduleMessage
                  method
                title: chat.scheduleMessage success schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response chat.scheduleMessage method
                title: chat.scheduleMessage error schema
                type: object
          description: Typical error response if the `post_at` is invalid (ex. in
            the past or too far into the future)
      security:
      - slackAuth:
        - chat:write:user
        - chat:write:bot
      tags:
      - chat
  /chat.scheduledMessages.list:
    get:
      description: Returns a list of scheduled messages.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/chat.scheduledMessages.list
      operationId: chat_scheduledMessages_list
      parameters:
      - description: 'Authentication token. Requires scope: `none`'
        in: header
        name: token
        schema:
          type: string
      - description: The channel of the scheduled messages
        in: query
        name: channel
        schema:
          type: string
      - description: A UNIX timestamp of the latest value in the time range
        in: query
        name: latest
        schema:
          type: number
      - description: A UNIX timestamp of the oldest value in the time range
        in: query
        name: oldest
        schema:
          type: number
      - description: Maximum number of original entries to return.
        in: query
        name: limit
        schema:
          type: integer
      - description: For pagination purposes, this is the `cursor` value returned
          from a previous call to `chat.scheduledmessages.list` indicating where you
          want to start this call from.
        in: query
        name: cursor
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from chat.scheduledMessages.list
                  method
                title: chat.scheduledMessages.list schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from chat.scheduledMessages.list
                  method
                title: chat.scheduledMessages.list error schema
                type: object
          description: Typical error response if the channel passed is invalid
      security:
      - slackAuth:
        - none
      tags:
      - chat.scheduledMessages
      - chat
  /chat.unfurl:
    post:
      description: Provide custom unfurl behavior for user-posted URLs
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/chat.unfurl
      operationId: chat_unfurl
      parameters:
      - description: 'Authentication token. Requires scope: `links:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel:
                  description: Channel ID of the message
                  type: string
                ts:
                  description: Timestamp of the message to add unfurl behavior to.
                  type: string
                unfurls:
                  description: URL-encoded JSON map with keys set to URLs featured
                    in the the message, pointing to their unfurl blocks or message
                    attachments.
                  type: string
                user_auth_message:
                  description: Provide a simply-formatted string to send as an ephemeral
                    message to the user as invitation to authenticate further and
                    enable full unfurling behavior
                  type: string
                user_auth_required:
                  description: Set to `true` or `1` to indicate the user must install
                    your Slack app to trigger unfurls for this domain
                  type: boolean
                user_auth_url:
                  description: Send users to this custom URL where they will complete
                    authentication in your app to fully trigger unfurling. Value should
                    be properly URL-encoded.
                  type: string
              required:
              - channel
              - ts
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  description: Channel ID of the message
                  type: string
                ts:
                  description: Timestamp of the message to add unfurl behavior to.
                  type: string
                unfurls:
                  description: URL-encoded JSON map with keys set to URLs featured
                    in the the message, pointing to their unfurl blocks or message
                    attachments.
                  type: string
                user_auth_message:
                  description: Provide a simply-formatted string to send as an ephemeral
                    message to the user as invitation to authenticate further and
                    enable full unfurling behavior
                  type: string
                user_auth_required:
                  description: Set to `true` or `1` to indicate the user must install
                    your Slack app to trigger unfurls for this domain
                  type: boolean
                user_auth_url:
                  description: Send users to this custom URL where they will complete
                    authentication in your app to fully trigger unfurling. Value should
                    be properly URL-encoded.
                  type: string
              required:
              - channel
              - ts
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from chat.unfurl method
                title: chat.unfurl success schema
                type: object
          description: Typical, minimal success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from chat.unfurl method
                title: chat.unfurl error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - links:write
      tags:
      - chat
  /chat.update:
    post:
      description: Updates a message.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/chat.update
      operationId: chat_update
      parameters:
      - description: 'Authentication token. Requires scope: `chat:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                as_user:
                  description: Pass true to update the message as the authed user.
                    [Bot users](/bot-users) in this context are considered authed
                    users.
                  type: string
                attachments:
                  description: A JSON-based array of structured attachments, presented
                    as a URL-encoded string. This field is required when not presenting
                    `text`. If you don't include this field, the message's previous
                    `attachments` will be retained. To remove previous `attachments`,
                    include an empty array for this field.
                  type: string
                blocks:
                  description: A JSON-based array of [structured blocks](/block-kit/building),
                    presented as a URL-encoded string. If you don't include this field,
                    the message's previous `blocks` will be retained. To remove previous
                    `blocks`, include an empty array for this field.
                  type: string
                channel:
                  description: Channel containing the message to be updated.
                  type: string
                link_names:
                  description: Find and link channel names and usernames. Defaults
                    to `none`. If you do not specify a value for this field, the original
                    value set for the message will be overwritten with the default,
                    `none`.
                  type: string
                parse:
                  description: Change how messages are treated. Defaults to `client`,
                    unlike `chat.postMessage`. Accepts either `none` or `full`. If
                    you do not specify a value for this field, the original value
                    set for the message will be overwritten with the default, `client`.
                  type: string
                text:
                  description: New text for the message, using the [default formatting
                    rules](/reference/surfaces/formatting). It's not required when
                    presenting `blocks` or `attachments`.
                  type: string
                ts:
                  description: Timestamp of the message to be updated.
                  type: string
              required:
              - channel
              - ts
          application/x-www-form-urlencoded:
            schema:
              properties:
                as_user:
                  description: Pass true to update the message as the authed user.
                    [Bot users](/bot-users) in this context are considered authed
                    users.
                  type: string
                attachments:
                  description: A JSON-based array of structured attachments, presented
                    as a URL-encoded string. This field is required when not presenting
                    `text`. If you don't include this field, the message's previous
                    `attachments` will be retained. To remove previous `attachments`,
                    include an empty array for this field.
                  type: string
                blocks:
                  description: A JSON-based array of [structured blocks](/block-kit/building),
                    presented as a URL-encoded string. If you don't include this field,
                    the message's previous `blocks` will be retained. To remove previous
                    `blocks`, include an empty array for this field.
                  type: string
                channel:
                  description: Channel containing the message to be updated.
                  type: string
                link_names:
                  description: Find and link channel names and usernames. Defaults
                    to `none`. If you do not specify a value for this field, the original
                    value set for the message will be overwritten with the default,
                    `none`.
                  type: string
                parse:
                  description: Change how messages are treated. Defaults to `client`,
                    unlike `chat.postMessage`. Accepts either `none` or `full`. If
                    you do not specify a value for this field, the original value
                    set for the message will be overwritten with the default, `client`.
                  type: string
                text:
                  description: New text for the message, using the [default formatting
                    rules](/reference/surfaces/formatting). It's not required when
                    presenting `blocks` or `attachments`.
                  type: string
                ts:
                  description: Timestamp of the message to be updated.
                  type: string
              required:
              - channel
              - ts
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response of chat.update method
                title: chat.update success schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response chat.update method
                title: chat.update error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - chat:write:user
        - chat:write:bot
      tags:
      - chat
  /conversations.archive:
    post:
      description: Archives a conversation.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.archive
      operationId: conversations_archive
      parameters:
      - description: 'Authentication token. Requires scope: `conversations:write`'
        in: header
        name: token
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel:
                  description: ID of conversation to archive
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  description: ID of conversation to archive
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response conversations.archive
                  method
                title: conversations.archive success schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.archive
                  method
                title: conversations.archive error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
      tags:
      - conversations
  /conversations.close:
    post:
      description: Closes a direct message or multi-person direct message.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.close
      operationId: conversations_close
      parameters:
      - description: 'Authentication token. Requires scope: `conversations:write`'
        in: header
        name: token
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel:
                  description: Conversation to close.
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  description: Conversation to close.
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response conversations.close method
                title: conversations.close success schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.close method
                title: conversations.close error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
      tags:
      - conversations
  /conversations.create:
    post:
      description: Initiates a public or private channel-based conversation
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.create
      operationId: conversations_create
      parameters:
      - description: 'Authentication token. Requires scope: `conversations:write`'
        in: header
        name: token
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                is_private:
                  description: Create a private channel instead of a public one
                  type: boolean
                name:
                  description: Name of the public or private channel to create
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                is_private:
                  description: Create a private channel instead of a public one
                  type: boolean
                name:
                  description: Name of the public or private channel to create
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response conversations.create method
                title: conversations.create success schema
                type: object
          description: If successful, the command returns a rather stark [conversation
            object](/types/conversation)
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.create method
                title: conversations.create error schema
                type: object
          description: Typical error response when name already in use
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
      tags:
      - conversations
  /conversations.history:
    get:
      description: Fetches a conversation's history of messages and events.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.history
      operationId: conversations_history
      parameters:
      - description: 'Authentication token. Requires scope: `conversations:history`'
        in: query
        name: token
        schema:
          type: string
      - description: Conversation ID to fetch history for.
        in: query
        name: channel
        schema:
          type: string
      - description: End of time range of messages to include in results.
        in: query
        name: latest
        schema:
          type: number
      - description: Start of time range of messages to include in results.
        in: query
        name: oldest
        schema:
          type: number
      - description: Include messages with latest or oldest timestamp in results only
          when either timestamp is specified.
        in: query
        name: inclusive
        schema:
          type: boolean
      - description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the users list hasn't
          been reached.
        in: query
        name: limit
        schema:
          type: integer
      - description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
        in: query
        name: cursor
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from conversations.history
                  method
                title: conversations.history success schema
                type: object
          description: Typical success response containing a channel's messages
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.history
                  method
                title: conversations.history error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - channels:history
        - groups:history
        - im:history
        - mpim:history
      tags:
      - conversations
  /conversations.info:
    get:
      description: Retrieve information about a conversation.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.info
      operationId: conversations_info
      parameters:
      - description: 'Authentication token. Requires scope: `conversations:read`'
        in: query
        name: token
        schema:
          type: string
      - description: Conversation ID to learn more about
        in: query
        name: channel
        schema:
          type: string
      - description: Set this to `true` to receive the locale for this conversation.
          Defaults to `false`
        in: query
        name: include_locale
        schema:
          type: boolean
      - description: Set to `true` to include the member count for the specified conversation.
          Defaults to `false`
        in: query
        name: include_num_members
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response conversations.info
                title: conversations.info success schema
                type: object
          description: Typical success response for a public channel. (Also, a response
            from a private channel and a multi-party IM is very similar to this example.)
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.info method
                title: conversations.info error schema
                type: object
          description: Typical error response when a channel cannot be found
      security:
      - slackAuth:
        - channels:read
        - groups:read
        - im:read
        - mpim:read
      tags:
      - conversations
  /conversations.invite:
    post:
      description: Invites users to a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.invite
      operationId: conversations_invite
      parameters:
      - description: 'Authentication token. Requires scope: `conversations:write`'
        in: header
        name: token
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel:
                  description: The ID of the public or private channel to invite user(s)
                    to.
                  type: string
                users:
                  description: A comma separated list of user IDs. Up to 1000 users
                    may be listed.
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  description: The ID of the public or private channel to invite user(s)
                    to.
                  type: string
                users:
                  description: A comma separated list of user IDs. Up to 1000 users
                    may be listed.
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from conversations.invite
                  method
                title: conversations.invite error schema
                type: object
          description: Typical success response when an invitation is extended
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.invite method
                title: conversations.invite error schema
                type: object
          description: Typical error response when an invite is attempted on a conversation
            type that does not support it
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
      tags:
      - conversations
  /conversations.join:
    post:
      description: Joins an existing conversation.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.join
      operationId: conversations_join
      parameters:
      - description: 'Authentication token. Requires scope: `channels:write`'
        in: header
        name: token
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel:
                  description: ID of conversation to join
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  description: ID of conversation to join
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from conversations.join
                  method
                title: conversations.join success schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.join method
                title: conversations.join error schema
                type: object
          description: Typical error response if the conversation is archived and
            cannot be joined
      security:
      - slackAuth:
        - channels:write
      tags:
      - conversations
  /conversations.kick:
    post:
      description: Removes a user from a conversation.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.kick
      operationId: conversations_kick
      parameters:
      - description: 'Authentication token. Requires scope: `conversations:write`'
        in: header
        name: token
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel:
                  description: ID of conversation to remove user from.
                  type: string
                user:
                  description: User ID to be removed.
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  description: ID of conversation to remove user from.
                  type: string
                user:
                  description: User ID to be removed.
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response conversations.kick method
                title: conversations.kick success schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response conversations.kick method
                title: conversations.kick error schema
                type: object
          description: Typical error response when you attempt to kick yourself from
            a channel
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
      tags:
      - conversations
  /conversations.leave:
    post:
      description: Leaves a conversation.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.leave
      operationId: conversations_leave
      parameters:
      - description: 'Authentication token. Requires scope: `conversations:write`'
        in: header
        name: token
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel:
                  description: Conversation to leave
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  description: Conversation to leave
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from conversations.leave
                  method
                title: conversations.leave success schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.leave method
                title: conversations.leave error schema
                type: object
          description: Typical error response when attempting to leave a workspace's
            "general" channel
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
      tags:
      - conversations
  /conversations.list:
    get:
      description: Lists all channels in a Slack team.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.list
      operationId: conversations_list
      parameters:
      - description: 'Authentication token. Requires scope: `conversations:read`'
        in: query
        name: token
        schema:
          type: string
      - description: Set to `true` to exclude archived channels from the list
        in: query
        name: exclude_archived
        schema:
          type: boolean
      - description: Mix and match channel types by providing a comma-separated list
          of any combination of `public_channel`, `private_channel`, `mpim`, `im`
        explode: false
        in: query
        name: types
        schema:
          items:
            $ref: '#/components/schemas/conversations.list_ConversationType'
          type: array
        style: form
      - description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the list hasn't been
          reached. Must be an integer no larger than 1000.
        in: query
        name: limit
        schema:
          type: integer
      - description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
        in: query
        name: cursor
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/conversations.list_ResponseBody'
          description: Typical success response with only public channels
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/conversations.list_ErrorResponseBody'
          description: Typical error response
      security:
      - slackAuth:
        - channels:read
        - groups:read
        - im:read
        - mpim:read
      tags:
      - conversations
  /conversations.mark:
    post:
      description: Sets the read cursor in a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.mark
      operationId: conversations_mark
      parameters:
      - description: 'Authentication token. Requires scope: `conversations:write`'
        in: header
        name: token
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel:
                  description: Channel or conversation to set the read cursor for.
                  type: string
                ts:
                  description: Unique identifier of message you want marked as most
                    recently seen in this conversation.
                  type: number
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  description: Channel or conversation to set the read cursor for.
                  type: string
                ts:
                  description: Unique identifier of message you want marked as most
                    recently seen in this conversation.
                  type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response conversations.mark method
                title: conversations.mark success schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.mark method
                title: conversations.mark error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
      tags:
      - conversations
  /conversations.members:
    get:
      description: Retrieve members of a conversation.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.members
      operationId: conversations_members
      parameters:
      - description: 'Authentication token. Requires scope: `conversations:read`'
        in: query
        name: token
        schema:
          type: string
      - description: ID of the conversation to retrieve members for
        in: query
        name: channel
        schema:
          type: string
      - description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the users list hasn't
          been reached.
        in: query
        name: limit
        schema:
          type: integer
      - description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
        in: query
        name: cursor
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response conversations.members
                  method
                title: conversations.members success schema
                type: object
          description: Typical paginated success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response conversations.members method
                title: conversations.members error schema
                type: object
          description: Typical error response when an invalid cursor is provided
      security:
      - slackAuth:
        - channels:read
        - groups:read
        - im:read
        - mpim:read
      tags:
      - conversations
  /conversations.open:
    post:
      description: Opens or resumes a direct message or multi-person direct message.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.open
      operationId: conversations_open
      parameters:
      - description: 'Authentication token. Requires scope: `conversations:write`'
        in: header
        name: token
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel:
                  description: Resume a conversation by supplying an `im` or `mpim`'s
                    ID. Or provide the `users` field instead.
                  type: string
                return_im:
                  description: Boolean, indicates you want the full IM channel definition
                    in the response.
                  type: boolean
                users:
                  description: Comma separated lists of users. If only one user is
                    included, this creates a 1:1 DM.  The ordering of the users is
                    preserved whenever a multi-person direct message is returned.
                    Supply a `channel` when not supplying `users`.
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  description: Resume a conversation by supplying an `im` or `mpim`'s
                    ID. Or provide the `users` field instead.
                  type: string
                return_im:
                  description: Boolean, indicates you want the full IM channel definition
                    in the response.
                  type: boolean
                users:
                  description: Comma separated lists of users. If only one user is
                    included, this creates a 1:1 DM.  The ordering of the users is
                    preserved whenever a multi-person direct message is returned.
                    Supply a `channel` when not supplying `users`.
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from conversations.open
                  method when opening channels, ims, mpims
                title: conversations.open success schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.open method
                title: conversations.open error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
      tags:
      - conversations
  /conversations.rename:
    post:
      description: Renames a conversation.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.rename
      operationId: conversations_rename
      parameters:
      - description: 'Authentication token. Requires scope: `conversations:write`'
        in: header
        name: token
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel:
                  description: ID of conversation to rename
                  type: string
                name:
                  description: New name for conversation.
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  description: ID of conversation to rename
                  type: string
                name:
                  description: New name for conversation.
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from conversations.rename
                  method
                title: conversations.rename success schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.rename method
                title: conversations.rename error schema
                type: object
          description: Typical error response when the calling user is not a member
            of the conversation
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
      tags:
      - conversations
  /conversations.replies:
    get:
      description: Retrieve a thread of messages posted to a conversation
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.replies
      operationId: conversations_replies
      parameters:
      - description: 'Authentication token. Requires scope: `conversations:history`'
        in: query
        name: token
        schema:
          type: string
      - description: Conversation ID to fetch thread from.
        in: query
        name: channel
        schema:
          type: string
      - description: Unique identifier of a thread's parent message. `ts` must be
          the timestamp of an existing message with 0 or more replies. If there are
          no replies then just the single message referenced by `ts` will return -
          it is just an ordinary, unthreaded message.
        in: query
        name: ts
        schema:
          type: number
      - description: End of time range of messages to include in results.
        in: query
        name: latest
        schema:
          type: number
      - description: Start of time range of messages to include in results.
        in: query
        name: oldest
        schema:
          type: number
      - description: Include messages with latest or oldest timestamp in results only
          when either timestamp is specified.
        in: query
        name: inclusive
        schema:
          type: boolean
      - description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the users list hasn't
          been reached.
        in: query
        name: limit
        schema:
          type: integer
      - description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
        in: query
        name: cursor
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from conversations.replies
                  method
                title: conversations.replies success schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.replies
                  method
                title: conversations.replies error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - channels:history
        - groups:history
        - im:history
        - mpim:history
      tags:
      - conversations
  /conversations.setPurpose:
    post:
      description: Sets the purpose for a conversation.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.setPurpose
      operationId: conversations_setPurpose
      parameters:
      - description: 'Authentication token. Requires scope: `conversations:write`'
        in: header
        name: token
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel:
                  description: Conversation to set the purpose of
                  type: string
                purpose:
                  description: A new, specialer purpose
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  description: Conversation to set the purpose of
                  type: string
                purpose:
                  description: A new, specialer purpose
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from conversations.setPurpose
                  method
                title: conversations.setPurpose success schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.setPurpose
                  method
                title: conversations.setPurpose error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
      tags:
      - conversations
  /conversations.setTopic:
    post:
      description: Sets the topic for a conversation.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.setTopic
      operationId: conversations_setTopic
      parameters:
      - description: 'Authentication token. Requires scope: `conversations:write`'
        in: header
        name: token
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel:
                  description: Conversation to set the topic of
                  type: string
                topic:
                  description: The new topic string. Does not support formatting or
                    linkification.
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  description: Conversation to set the topic of
                  type: string
                topic:
                  description: The new topic string. Does not support formatting or
                    linkification.
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from conversations.setTopic
                  method
                title: conversations.setTopic success schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.setTopic
                  method
                title: conversations.setTopic error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
      tags:
      - conversations
  /conversations.unarchive:
    post:
      description: Reverses conversation archival.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/conversations.unarchive
      operationId: conversations_unarchive
      parameters:
      - description: 'Authentication token. Requires scope: `conversations:write`'
        in: header
        name: token
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel:
                  description: ID of conversation to unarchive
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  description: ID of conversation to unarchive
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from conversations.unarchive
                  method
                title: conversations.unarchive success schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from conversations.unarchive
                  method
                title: conversations.unarchive error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - channels:write
        - groups:write
        - im:write
        - mpim:write
      tags:
      - conversations
  /dialog.open:
    get:
      description: Open a dialog with a user
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/dialog.open
      operationId: dialog_open
      parameters:
      - description: 'Authentication token. Requires scope: `none`'
        in: header
        name: token
        required: true
        schema:
          type: string
      - description: The dialog definition. This must be a JSON-encoded string.
        in: query
        name: dialog
        required: true
        schema:
          type: string
      - description: Exchange a trigger to post to the user.
        in: query
        name: trigger_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from dialog.open method
                title: dialog.open schema
                type: object
          description: Typical success response is quite minimal.
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from dialog.open method
                title: dialog.open error schema
                type: object
          description: Typical error response, before getting to any possible validation
            errors.
      security:
      - slackAuth:
        - none
      tags:
      - dialog
  /dnd.endDnd:
    post:
      description: Ends the current user's Do Not Disturb session immediately.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/dnd.endDnd
      operationId: dnd_endDnd
      parameters:
      - description: 'Authentication token. Requires scope: `dnd:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from dnd.endDnd method
                title: dnd.endDnd schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from dnd.endDnd method
                title: dnd.endDnd error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - dnd:write
      tags:
      - dnd
  /dnd.endSnooze:
    post:
      description: Ends the current user's snooze mode immediately.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/dnd.endSnooze
      operationId: dnd_endSnooze
      parameters:
      - description: 'Authentication token. Requires scope: `dnd:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from dnd.endSnooze method
                title: dnd.endSnooze schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from dnd.endSnooze method
                title: dnd.endSnooze error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - dnd:write
      tags:
      - dnd
  /dnd.info:
    get:
      description: Retrieves a user's current Do Not Disturb status.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/dnd.info
      operationId: dnd_info
      parameters:
      - description: 'Authentication token. Requires scope: `dnd:read`'
        in: query
        name: token
        schema:
          type: string
      - description: User to fetch status for (defaults to current user)
        in: query
        name: user
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from dnd.info method
                title: dnd.info schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from dnd.info method
                title: dnd.info error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - dnd:read
      tags:
      - dnd
  /dnd.setSnooze:
    post:
      description: Turns on Do Not Disturb mode for the current user, or changes its
        duration.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/dnd.setSnooze
      operationId: dnd_setSnooze
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                num_minutes:
                  description: Number of minutes, from now, to snooze until.
                  type: string
                token:
                  description: 'Authentication token. Requires scope: `dnd:write`'
                  type: string
              required:
              - num_minutes
              - token
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from dnd.setSnooze method
                title: dnd.setSnooze schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from dnd.setSnooze method
                title: dnd.setSnooze error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - dnd:write
      tags:
      - dnd
  /dnd.teamInfo:
    get:
      description: Retrieves the Do Not Disturb status for up to 50 users on a team.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/dnd.teamInfo
      operationId: dnd_teamInfo
      parameters:
      - description: 'Authentication token. Requires scope: `dnd:read`'
        in: query
        name: token
        schema:
          type: string
      - description: Comma-separated list of users to fetch Do Not Disturb status
          for
        in: query
        name: users
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - dnd:read
      tags:
      - dnd
  /files.comments.delete:
    post:
      description: Deletes an existing comment on a file.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.comments.delete
      operationId: files_comments_delete
      parameters:
      - description: 'Authentication token. Requires scope: `files:write:user`'
        in: header
        name: token
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                file:
                  description: File to delete a comment from.
                  type: string
                id:
                  description: The comment to delete.
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                file:
                  description: File to delete a comment from.
                  type: string
                id:
                  description: The comment to delete.
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response files.comments.delete
                  method
                title: files.comments.delete schema
                type: object
          description: Standard success response is very simple
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response files.comments.delete method
                title: files.comments.delete error schema
                type: object
          description: Standard failure response when used with an invalid token
      security:
      - slackAuth:
        - files:write:user
      tags:
      - files.comments
      - files
  /files.delete:
    post:
      description: Deletes a file.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.delete
      operationId: files_delete
      parameters:
      - description: 'Authentication token. Requires scope: `files:write:user`'
        in: header
        name: token
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                file:
                  description: ID of file to delete.
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                file:
                  description: ID of file to delete.
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response files.delete method
                title: files.delete schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response files.delete method
                title: files.delete error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - files:write:user
      tags:
      - files
  /files.info:
    get:
      description: Gets information about a file.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.info
      operationId: files_info
      parameters:
      - description: 'Authentication token. Requires scope: `files:read`'
        in: query
        name: token
        schema:
          type: string
      - description: Specify a file by providing its ID.
        in: query
        name: file
        schema:
          type: string
      - in: query
        name: count
        schema:
          type: string
      - in: query
        name: page
        schema:
          type: string
      - description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the list hasn't been
          reached.
        in: query
        name: limit
        schema:
          type: integer
      - description: 'Parameter for pagination. File comments are paginated for a
          single file. Set `cursor` equal to the `next_cursor` attribute returned
          by the previous request''s `response_metadata`. This parameter is optional,
          but pagination is mandatory: the default value simply fetches the first
          "page" of the collection of comments. See [pagination](/docs/pagination)
          for more details.'
        in: query
        name: cursor
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from files.info method
                title: files.info schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from files.info method
                title: files.info error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - files:read
      tags:
      - files
  /files.list:
    get:
      description: List for a team, in a channel, or from a user with applied filters.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.list
      operationId: files_list
      parameters:
      - description: 'Authentication token. Requires scope: `files:read`'
        in: query
        name: token
        schema:
          type: string
      - description: Filter files created by a single user.
        in: query
        name: user
        schema:
          type: string
      - description: Filter files appearing in a specific channel, indicated by its
          ID.
        in: query
        name: channel
        schema:
          type: string
      - description: Filter files created after this timestamp (inclusive).
        in: query
        name: ts_from
        schema:
          type: number
      - description: Filter files created before this timestamp (inclusive).
        in: query
        name: ts_to
        schema:
          type: number
      - description: Filter files by type ([see below](#file_types)). You can pass
          multiple values in the types argument, like `types=spaces,snippets`.The
          default value is `all`, which does not filter the list.
        in: query
        name: types
        schema:
          type: string
      - in: query
        name: count
        schema:
          type: string
      - in: query
        name: page
        schema:
          type: string
      - description: Show truncated file info for files hidden due to being too old,
          and the team who owns the file being over the file limit.
        in: query
        name: show_files_hidden_by_limit
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from files.list method
                title: files.list schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from files.list method
                title: files.list error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - files:read
      tags:
      - files
  /files.remote.add:
    post:
      description: Adds a file from a remote service
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.remote.add
      operationId: files_remote_add
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                external_id:
                  description: Creator defined GUID for the file.
                  type: string
                external_url:
                  description: URL of the remote file.
                  type: string
                filetype:
                  description: type of file
                  type: string
                indexable_file_contents:
                  description: A text file (txt, pdf, doc, etc.) containing textual
                    search terms that are used to improve discovery of the remote
                    file.
                  type: string
                preview_image:
                  description: Preview of the document via `multipart/form-data`.
                  type: string
                title:
                  description: Title of the file being shared.
                  type: string
                token:
                  description: 'Authentication token. Requires scope: `remote_files:write`'
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - remote_files:write
      tags:
      - files.remote
      - files
  /files.remote.info:
    get:
      description: Retrieve information about a remote file added to Slack
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.remote.info
      operationId: files_remote_info
      parameters:
      - description: 'Authentication token. Requires scope: `remote_files:read`'
        in: query
        name: token
        schema:
          type: string
      - description: Specify a file by providing its ID.
        in: query
        name: file
        schema:
          type: string
      - description: Creator defined GUID for the file.
        in: query
        name: external_id
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - remote_files:read
      tags:
      - files.remote
      - files
  /files.remote.list:
    get:
      description: Retrieve information about a remote file added to Slack
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.remote.list
      operationId: files_remote_list
      parameters:
      - description: 'Authentication token. Requires scope: `remote_files:read`'
        in: query
        name: token
        schema:
          type: string
      - description: Filter files appearing in a specific channel, indicated by its
          ID.
        in: query
        name: channel
        schema:
          type: string
      - description: Filter files created after this timestamp (inclusive).
        in: query
        name: ts_from
        schema:
          type: number
      - description: Filter files created before this timestamp (inclusive).
        in: query
        name: ts_to
        schema:
          type: number
      - description: The maximum number of items to return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
        in: query
        name: cursor
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - remote_files:read
      tags:
      - files.remote
      - files
  /files.remote.remove:
    post:
      description: Remove a remote file.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.remote.remove
      operationId: files_remote_remove
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                external_id:
                  description: Creator defined GUID for the file.
                  type: string
                file:
                  description: Specify a file by providing its ID.
                  type: string
                token:
                  description: 'Authentication token. Requires scope: `remote_files:write`'
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - remote_files:write
      tags:
      - files.remote
      - files
  /files.remote.share:
    get:
      description: Share a remote file into a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.remote.share
      operationId: files_remote_share
      parameters:
      - description: 'Authentication token. Requires scope: `remote_files:share`'
        in: query
        name: token
        schema:
          type: string
      - description: Specify a file registered with Slack by providing its ID. Either
          this field or `external_id` or both are required.
        in: query
        name: file
        schema:
          type: string
      - description: The globally unique identifier (GUID) for the file, as set by
          the app registering the file with Slack.  Either this field or `file` or
          both are required.
        in: query
        name: external_id
        schema:
          type: string
      - description: Comma-separated list of channel IDs where the file will be shared.
        in: query
        name: channels
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - remote_files:share
      tags:
      - files.remote
      - files
  /files.remote.update:
    post:
      description: Updates an existing remote file.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.remote.update
      operationId: files_remote_update
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                external_id:
                  description: Creator defined GUID for the file.
                  type: string
                external_url:
                  description: URL of the remote file.
                  type: string
                file:
                  description: Specify a file by providing its ID.
                  type: string
                filetype:
                  description: type of file
                  type: string
                indexable_file_contents:
                  description: File containing contents that can be used to improve
                    searchability for the remote file.
                  type: string
                preview_image:
                  description: Preview of the document via `multipart/form-data`.
                  type: string
                title:
                  description: Title of the file being shared.
                  type: string
                token:
                  description: 'Authentication token. Requires scope: `remote_files:write`'
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - remote_files:write
      tags:
      - files.remote
      - files
  /files.revokePublicURL:
    post:
      description: Revokes public/external sharing access for a file
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.revokePublicURL
      operationId: files_revokePublicURL
      parameters:
      - description: 'Authentication token. Requires scope: `files:write:user`'
        in: header
        name: token
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                file:
                  description: File to revoke
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                file:
                  description: File to revoke
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from files.revokePublicURL
                  method
                title: files.revokePublicURL schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from files.revokePublicURL
                  method
                title: files.revokePublicURL error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - files:write:user
      tags:
      - files
  /files.sharedPublicURL:
    post:
      description: Enables a file for public/external sharing.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.sharedPublicURL
      operationId: files_sharedPublicURL
      parameters:
      - description: 'Authentication token. Requires scope: `files:write:user`'
        in: header
        name: token
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                file:
                  description: File to share
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                file:
                  description: File to share
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from files.sharedPublicURL
                  method
                title: files.sharedPublicURL schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from files.sharedPublicURL
                  method
                title: files.sharedPublicURL error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - files:write:user
      tags:
      - files
  /files.upload:
    post:
      description: Uploads or creates a file.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/files.upload
      operationId: files_upload
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                channels:
                  description: Comma-separated list of channel names or IDs where
                    the file will be shared.
                  type: string
                content:
                  description: File contents via a POST variable. If omitting this
                    parameter, you must provide a `file`.
                  type: string
                file:
                  description: File contents via `multipart/form-data`. If omitting
                    this parameter, you must submit `content`.
                  type: string
                filename:
                  description: Filename of file.
                  type: string
                filetype:
                  description: A [file type](/types/file#file_types) identifier.
                  type: string
                initial_comment:
                  description: The message text introducing the file in specified
                    `channels`.
                  type: string
                thread_ts:
                  description: Provide another message's `ts` value to upload this
                    file as a reply. Never use a reply's `ts` value; use its parent
                    instead.
                  type: number
                title:
                  description: Title of file.
                  type: string
                token:
                  description: 'Authentication token. Requires scope: `files:write:user`'
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response files.upload method
                title: files.upload schema
                type: object
          description: Success response after uploading a file to a channel with an
            initial message
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response files.upload method
                title: files.upload error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - files:write:user
      tags:
      - files
  /migration.exchange:
    get:
      description: For Enterprise Grid workspaces, map local user IDs to global user
        IDs
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/migration.exchange
      operationId: migration_exchange
      parameters:
      - description: 'Authentication token. Requires scope: `tokens.basic`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - description: A comma-separated list of user ids, up to 400 per request
        in: query
        name: users
        required: true
        schema:
          type: string
      - description: Specify team_id starts with `T` in case of Org Token
        in: query
        name: team_id
        schema:
          type: string
      - description: Specify `true` to convert `W` global user IDs to workspace-specific
          `U` IDs. Defaults to `false`.
        in: query
        name: to_old
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from migration.exchange
                  method
                title: migration.exchange success schema
                type: object
          description: Typical success response when mappings exist for the specified
            user IDs
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from migration.exchange method
                title: migration.exchange error schema
                type: object
          description: Typical error response when there are no mappings to provide
      security:
      - slackAuth:
        - tokens.basic
      tags:
      - migration
  /oauth.access:
    get:
      description: Exchanges a temporary OAuth verifier code for an access token.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/oauth.access
      operationId: oauth_access
      parameters:
      - description: Issued when you created your application.
        in: query
        name: client_id
        schema:
          type: string
      - description: Issued when you created your application.
        in: query
        name: client_secret
        schema:
          type: string
      - description: The `code` param returned via the OAuth callback.
        in: query
        name: code
        schema:
          type: string
      - description: This must match the originally submitted URI (if one was sent).
        in: query
        name: redirect_uri
        schema:
          type: string
      - description: Request the user to add your app only to a single channel. Only
          valid with a [legacy workspace app](https://api.slack.com/legacy-workspace-apps).
        in: query
        name: single_channel
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Successful user token negotiation for a single scope
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - none
      tags:
      - oauth
  /oauth.token:
    get:
      description: Exchanges a temporary OAuth verifier code for a workspace token.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/oauth.token
      operationId: oauth_token
      parameters:
      - description: Issued when you created your application.
        in: query
        name: client_id
        schema:
          type: string
      - description: Issued when you created your application.
        in: query
        name: client_secret
        schema:
          type: string
      - description: The `code` param returned via the OAuth callback.
        in: query
        name: code
        schema:
          type: string
      - description: This must match the originally submitted URI (if one was sent).
        in: query
        name: redirect_uri
        schema:
          type: string
      - description: Request the user to add your app only to a single channel.
        in: query
        name: single_channel
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Success example using a workspace app produces a very different
            kind of response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - none
      tags:
      - oauth
  /oauth.v2.access:
    get:
      description: Exchanges a temporary OAuth verifier code for an access token.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/oauth.v2.access
      operationId: oauth_v2_access
      parameters:
      - description: Issued when you created your application.
        in: query
        name: client_id
        schema:
          type: string
      - description: Issued when you created your application.
        in: query
        name: client_secret
        schema:
          type: string
      - description: The `code` param returned via the OAuth callback.
        in: query
        name: code
        required: true
        schema:
          type: string
      - description: This must match the originally submitted URI (if one was sent).
        in: query
        name: redirect_uri
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Successful token request with scopes for both a bot user and
            a user token
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - none
      tags:
      - oauth.v2
      - oauth
  /pins.add:
    post:
      description: Pins an item to a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/pins.add
      operationId: pins_add
      parameters:
      - description: 'Authentication token. Requires scope: `pins:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel:
                  description: Channel to pin the item in.
                  type: string
                timestamp:
                  description: Timestamp of the message to pin.
                  type: string
              required:
              - channel
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  description: Channel to pin the item in.
                  type: string
                timestamp:
                  description: Timestamp of the message to pin.
                  type: string
              required:
              - channel
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from pins.add method
                title: pins.add schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from pins.add method
                title: pins.add error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - pins:write
      tags:
      - pins
  /pins.list:
    get:
      description: Lists items pinned to a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/pins.list
      operationId: pins_list
      parameters:
      - description: 'Authentication token. Requires scope: `pins:read`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - description: Channel to get pinned items for.
        in: query
        name: channel
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: Schema for successful response from pins.list method
                title: pins.list success schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from pins.list method
                title: pins.list error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - pins:read
      tags:
      - pins
  /pins.remove:
    post:
      description: Un-pins an item from a channel.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/pins.remove
      operationId: pins_remove
      parameters:
      - description: 'Authentication token. Requires scope: `pins:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel:
                  description: Channel where the item is pinned to.
                  type: string
                timestamp:
                  description: Timestamp of the message to un-pin.
                  type: string
              required:
              - channel
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  description: Channel where the item is pinned to.
                  type: string
                timestamp:
                  description: Timestamp of the message to un-pin.
                  type: string
              required:
              - channel
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from pins.remove method
                title: pins.remove schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from pins.remove method
                title: pins.remove error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - pins:write
      tags:
      - pins
  /reactions.add:
    post:
      description: Adds a reaction to an item.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/reactions.add
      operationId: reactions_add
      parameters:
      - description: 'Authentication token. Requires scope: `reactions:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel:
                  description: Channel where the message to add reaction to was posted.
                  type: string
                name:
                  description: Reaction (emoji) name.
                  type: string
                timestamp:
                  description: Timestamp of the message to add reaction to.
                  type: string
              required:
              - channel
              - name
              - timestamp
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  description: Channel where the message to add reaction to was posted.
                  type: string
                name:
                  description: Reaction (emoji) name.
                  type: string
                timestamp:
                  description: Timestamp of the message to add reaction to.
                  type: string
              required:
              - channel
              - name
              - timestamp
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from reactions.add method
                title: reactions.add schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from reactions.add method
                title: reactions.add error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - reactions:write
      tags:
      - reactions
  /reactions.get:
    get:
      description: Gets reactions for an item.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/reactions.get
      operationId: reactions_get
      parameters:
      - description: 'Authentication token. Requires scope: `reactions:read`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - description: Channel where the message to get reactions for was posted.
        in: query
        name: channel
        schema:
          type: string
      - description: File to get reactions for.
        in: query
        name: file
        schema:
          type: string
      - description: File comment to get reactions for.
        in: query
        name: file_comment
        schema:
          type: string
      - description: If true always return the complete reaction list.
        in: query
        name: full
        schema:
          type: boolean
      - description: Timestamp of the message to get reactions for.
        in: query
        name: timestamp
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: Schema for successful response from reactions.get method
                oneOf:
                - properties:
                    channel:
                      $ref: '#/components/schemas/defs_channel'
                    message:
                      $ref: '#/components/schemas/objs_message'
                    ok:
                      $ref: '#/components/schemas/defs_ok_true'
                    type:
                      enum:
                      - message
                      type: string
                  required:
                  - channel
                  - message
                  - ok
                  - type
                  type: object
                - properties:
                    file:
                      $ref: '#/components/schemas/objs_file'
                    ok:
                      $ref: '#/components/schemas/defs_ok_true'
                    type:
                      enum:
                      - file
                      type: string
                  required:
                  - file
                  - ok
                  - type
                  type: object
                - properties:
                    comment:
                      $ref: '#/components/schemas/objs_comment'
                    file:
                      $ref: '#/components/schemas/objs_file'
                    ok:
                      $ref: '#/components/schemas/defs_ok_true'
                    type:
                      enum:
                      - file_comment
                      type: string
                  required:
                  - comment
                  - file
                  - ok
                  - type
                  type: object
                title: reactions.get success schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from reactions.get method
                title: reactions.get error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - reactions:read
      tags:
      - reactions
  /reactions.list:
    get:
      description: Lists reactions made by a user.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/reactions.list
      operationId: reactions_list
      parameters:
      - description: 'Authentication token. Requires scope: `reactions:read`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - description: Show reactions made by this user. Defaults to the authed user.
        in: query
        name: user
        schema:
          type: string
      - description: If true always return the complete reaction list.
        in: query
        name: full
        schema:
          type: boolean
      - in: query
        name: count
        schema:
          type: integer
      - in: query
        name: page
        schema:
          type: integer
      - description: 'Parameter for pagination. Set `cursor` equal to the `next_cursor`
          attribute returned by the previous request''s `response_metadata`. This
          parameter is optional, but pagination is mandatory: the default value simply
          fetches the first "page" of the collection. See [pagination](/docs/pagination)
          for more details.'
        in: query
        name: cursor
        schema:
          type: string
      - description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the list hasn't been
          reached.
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from reactions.list method
                title: reactions.list schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from reactions.list method
                title: reactions.list error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - reactions:read
      tags:
      - reactions
  /reactions.remove:
    post:
      description: Removes a reaction from an item.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/reactions.remove
      operationId: reactions_remove
      parameters:
      - description: 'Authentication token. Requires scope: `reactions:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel:
                  description: Channel where the message to remove reaction from was
                    posted.
                  type: string
                file:
                  description: File to remove reaction from.
                  type: string
                file_comment:
                  description: File comment to remove reaction from.
                  type: string
                name:
                  description: Reaction (emoji) name.
                  type: string
                timestamp:
                  description: Timestamp of the message to remove reaction from.
                  type: string
              required:
              - name
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  description: Channel where the message to remove reaction from was
                    posted.
                  type: string
                file:
                  description: File to remove reaction from.
                  type: string
                file_comment:
                  description: File comment to remove reaction from.
                  type: string
                name:
                  description: Reaction (emoji) name.
                  type: string
                timestamp:
                  description: Timestamp of the message to remove reaction from.
                  type: string
              required:
              - name
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from reactions.remove
                  method
                title: reactions.remove schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from reactions.remove method
                title: reactions.remove error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - reactions:write
      tags:
      - reactions
  /reminders.add:
    post:
      description: Creates a reminder.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/reminders.add
      operationId: reminders_add
      parameters:
      - description: 'Authentication token. Requires scope: `reminders:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                text:
                  description: The content of the reminder
                  type: string
                time:
                  description: 'When this reminder should happen: the Unix timestamp
                    (up to five years from now), the number of seconds until the reminder
                    (if within 24 hours), or a natural language description (Ex. "in
                    15 minutes," or "every Thursday")'
                  type: string
                user:
                  description: The user who will receive the reminder. If no user
                    is specified, the reminder will go to user who created it.
                  type: string
              required:
              - text
              - time
          application/x-www-form-urlencoded:
            schema:
              properties:
                text:
                  description: The content of the reminder
                  type: string
                time:
                  description: 'When this reminder should happen: the Unix timestamp
                    (up to five years from now), the number of seconds until the reminder
                    (if within 24 hours), or a natural language description (Ex. "in
                    15 minutes," or "every Thursday")'
                  type: string
                user:
                  description: The user who will receive the reminder. If no user
                    is specified, the reminder will go to user who created it.
                  type: string
              required:
              - text
              - time
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from reminders.add method
                title: reminders.add schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from reminders.add method
                title: reminders.add error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - reminders:write
      tags:
      - reminders
  /reminders.complete:
    post:
      description: Marks a reminder as complete.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/reminders.complete
      operationId: reminders_complete
      parameters:
      - description: 'Authentication token. Requires scope: `reminders:write`'
        in: header
        name: token
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                reminder:
                  description: The ID of the reminder to be marked as complete
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                reminder:
                  description: The ID of the reminder to be marked as complete
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from reminders.complete
                  method
                title: reminders.complete schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from reminders.complete method
                title: reminders.complete error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - reminders:write
      tags:
      - reminders
  /reminders.delete:
    post:
      description: Deletes a reminder.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/reminders.delete
      operationId: reminders_delete
      parameters:
      - description: 'Authentication token. Requires scope: `reminders:write`'
        in: header
        name: token
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                reminder:
                  description: The ID of the reminder
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                reminder:
                  description: The ID of the reminder
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from reminders.delete
                  method
                title: reminders.delete schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from reminders.delete method
                title: reminders.delete error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - reminders:write
      tags:
      - reminders
  /reminders.info:
    get:
      description: Gets information about a reminder.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/reminders.info
      operationId: reminders_info
      parameters:
      - description: 'Authentication token. Requires scope: `reminders:read`'
        in: query
        name: token
        schema:
          type: string
      - description: The ID of the reminder
        in: query
        name: reminder
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from reminders.info method
                title: reminders.info schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from reminders.info method
                title: reminders.info error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - reminders:read
      tags:
      - reminders
  /reminders.list:
    get:
      description: Lists all reminders created by or for a given user.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/reminders.list
      operationId: reminders_list
      parameters:
      - description: 'Authentication token. Requires scope: `reminders:read`'
        in: query
        name: token
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from reminders.list method
                title: reminders.list schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from reminders.list method
                title: reminders.list error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - reminders:read
      tags:
      - reminders
  /rtm.connect:
    get:
      description: Starts a Real Time Messaging session.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/rtm.connect
      operationId: rtm_connect
      parameters:
      - description: 'Authentication token. Requires scope: `rtm:stream`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - description: Batch presence deliveries via subscription. Enabling changes
          the shape of `presence_change` events. See [batch presence](/docs/presence-and-status#batching).
        in: query
        name: batch_presence_aware
        schema:
          type: boolean
      - description: Only deliver presence events when requested by subscription.
          See [presence subscriptions](/docs/presence-and-status#subscriptions).
        in: query
        name: presence_sub
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from rtm.connect method
                title: rtm.connect schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from rtm.connect method
                title: rtm.connect error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - rtm:stream
      tags:
      - rtm
  /search.messages:
    get:
      description: Searches for messages matching a query.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/search.messages
      operationId: search_messages
      parameters:
      - description: 'Authentication token. Requires scope: `search:read`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - description: Pass the number of results you want per "page". Maximum of `100`.
        in: query
        name: count
        schema:
          type: integer
      - description: Pass a value of `true` to enable query highlight markers (see
          below).
        in: query
        name: highlight
        schema:
          type: boolean
      - in: query
        name: page
        schema:
          type: integer
      - description: Search query.
        in: query
        name: query
        required: true
        schema:
          type: string
      - description: Return matches sorted by either `score` or `timestamp`.
        in: query
        name: sort
        schema:
          type: string
      - description: Change sort direction to ascending (`asc`) or descending (`desc`).
        in: query
        name: sort_dir
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - search:read
      tags:
      - search
  /stars.add:
    post:
      description: Adds a star to an item.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/stars.add
      operationId: stars_add
      parameters:
      - description: 'Authentication token. Requires scope: `stars:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel:
                  description: Channel to add star to, or channel where the message
                    to add star to was posted (used with `timestamp`).
                  type: string
                file:
                  description: File to add star to.
                  type: string
                file_comment:
                  description: File comment to add star to.
                  type: string
                timestamp:
                  description: Timestamp of the message to add star to.
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  description: Channel to add star to, or channel where the message
                    to add star to was posted (used with `timestamp`).
                  type: string
                file:
                  description: File to add star to.
                  type: string
                file_comment:
                  description: File comment to add star to.
                  type: string
                timestamp:
                  description: Timestamp of the message to add star to.
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from stars.add method
                title: stars.add schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from stars.add method
                title: stars.add error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - stars:write
      tags:
      - stars
  /stars.list:
    get:
      description: Lists stars for a user.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/stars.list
      operationId: stars_list
      parameters:
      - description: 'Authentication token. Requires scope: `stars:read`'
        in: query
        name: token
        schema:
          type: string
      - in: query
        name: count
        schema:
          type: string
      - in: query
        name: page
        schema:
          type: string
      - description: 'Parameter for pagination. Set `cursor` equal to the `next_cursor`
          attribute returned by the previous request''s `response_metadata`. This
          parameter is optional, but pagination is mandatory: the default value simply
          fetches the first "page" of the collection. See [pagination](/docs/pagination)
          for more details.'
        in: query
        name: cursor
        schema:
          type: string
      - description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the list hasn't been
          reached.
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from stars.list method
                title: stars.list schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from stars.list method
                title: stars.list error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - stars:read
      tags:
      - stars
  /stars.remove:
    post:
      description: Removes a star from an item.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/stars.remove
      operationId: stars_remove
      parameters:
      - description: 'Authentication token. Requires scope: `stars:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channel:
                  description: Channel to remove star from, or channel where the message
                    to remove star from was posted (used with `timestamp`).
                  type: string
                file:
                  description: File to remove star from.
                  type: string
                file_comment:
                  description: File comment to remove star from.
                  type: string
                timestamp:
                  description: Timestamp of the message to remove star from.
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                channel:
                  description: Channel to remove star from, or channel where the message
                    to remove star from was posted (used with `timestamp`).
                  type: string
                file:
                  description: File to remove star from.
                  type: string
                file_comment:
                  description: File comment to remove star from.
                  type: string
                timestamp:
                  description: Timestamp of the message to remove star from.
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from stars.remove method
                title: stars.remove schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from stars.remove method
                title: stars.remove error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - stars:write
      tags:
      - stars
  /team.accessLogs:
    get:
      description: Gets the access logs for the current team.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/team.accessLogs
      operationId: team_accessLogs
      parameters:
      - description: 'Authentication token. Requires scope: `admin`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - description: End of time range of logs to include in results (inclusive).
        in: query
        name: before
        schema:
          type: string
      - in: query
        name: count
        schema:
          type: string
      - in: query
        name: page
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from team.accessLogs method
                title: team.accessLogs schema
                type: object
          description: This response demonstrates pagination and two access log entries.
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from team.accessLogs method
                title: team.accessLogs error schema
                type: object
          description: 'A workspace must be on a paid plan to use this method, otherwise
            the `paid_only` error is thrown:'
      security:
      - slackAuth:
        - admin
      tags:
      - team
  /team.billableInfo:
    get:
      description: Gets billable users information for the current team.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/team.billableInfo
      operationId: team_billableInfo
      parameters:
      - description: 'Authentication token. Requires scope: `admin`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - description: A user to retrieve the billable information for. Defaults to
          all users.
        in: query
        name: user
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin
      tags:
      - team
  /team.info:
    get:
      description: Gets information about the current team.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/team.info
      operationId: team_info
      parameters:
      - description: 'Authentication token. Requires scope: `team:read`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - description: Team to get info on, if omitted, will return information about
          the current team. Will only return team that the authenticated token is
          allowed to see through external shared channels
        in: query
        name: team
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from team.info method
                title: team.info schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from team.info method
                title: team.info error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - team:read
      tags:
      - team
  /team.integrationLogs:
    get:
      description: Gets the integration logs for the current team.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/team.integrationLogs
      operationId: team_integrationLogs
      parameters:
      - description: 'Authentication token. Requires scope: `admin`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - description: Filter logs to this Slack app. Defaults to all logs.
        in: query
        name: app_id
        schema:
          type: string
      - description: Filter logs with this change type. Defaults to all logs.
        in: query
        name: change_type
        schema:
          type: string
      - in: query
        name: count
        schema:
          type: string
      - in: query
        name: page
        schema:
          type: string
      - description: Filter logs to this service. Defaults to all logs.
        in: query
        name: service_id
        schema:
          type: string
      - description: Filter logs generated by this user’s actions. Defaults to all
          logs.
        in: query
        name: user
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from team.integrationLogs
                  method
                title: team.integrationLogs schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from team.integrationLogs method
                title: team.integrationLogs error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - admin
      tags:
      - team
  /team.profile.get:
    get:
      description: Retrieve a team's profile.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/team.profile.get
      operationId: team_profile_get
      parameters:
      - description: 'Authentication token. Requires scope: `users.profile:read`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - description: Filter by visibility.
        in: query
        name: visibility
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from team.profile.get
                  method
                title: team.profile.get success schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from team.profile.get method
                title: team.profile.get error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - users.profile:read
      tags:
      - team.profile
      - team
  /usergroups.create:
    post:
      description: Create a User Group
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/usergroups.create
      operationId: usergroups_create
      parameters:
      - description: 'Authentication token. Requires scope: `usergroups:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channels:
                  description: A comma separated string of encoded channel IDs for
                    which the User Group uses as a default.
                  type: string
                description:
                  description: A short description of the User Group.
                  type: string
                handle:
                  description: A mention handle. Must be unique among channels, users
                    and User Groups.
                  type: string
                include_count:
                  description: Include the number of users in each User Group.
                  type: boolean
                name:
                  description: A name for the User Group. Must be unique among User
                    Groups.
                  type: string
              required:
              - name
          application/x-www-form-urlencoded:
            schema:
              properties:
                channels:
                  description: A comma separated string of encoded channel IDs for
                    which the User Group uses as a default.
                  type: string
                description:
                  description: A short description of the User Group.
                  type: string
                handle:
                  description: A mention handle. Must be unique among channels, users
                    and User Groups.
                  type: string
                include_count:
                  description: Include the number of users in each User Group.
                  type: boolean
                name:
                  description: A name for the User Group. Must be unique among User
                    Groups.
                  type: string
              required:
              - name
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from usergroups.create
                  method
                title: usergroups.create schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from usergroups.create method
                title: usergroups.create error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - usergroups:write
      tags:
      - usergroups
  /usergroups.disable:
    post:
      description: Disable an existing User Group
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/usergroups.disable
      operationId: usergroups_disable
      parameters:
      - description: 'Authentication token. Requires scope: `usergroups:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                include_count:
                  description: Include the number of users in the User Group.
                  type: boolean
                usergroup:
                  description: The encoded ID of the User Group to disable.
                  type: string
              required:
              - usergroup
          application/x-www-form-urlencoded:
            schema:
              properties:
                include_count:
                  description: Include the number of users in the User Group.
                  type: boolean
                usergroup:
                  description: The encoded ID of the User Group to disable.
                  type: string
              required:
              - usergroup
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from usergroups.disable
                  method
                title: usergroups.disable schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from usergroups.disable method
                title: usergroups.disable error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - usergroups:write
      tags:
      - usergroups
  /usergroups.enable:
    post:
      description: Enable a User Group
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/usergroups.enable
      operationId: usergroups_enable
      parameters:
      - description: 'Authentication token. Requires scope: `usergroups:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                include_count:
                  description: Include the number of users in the User Group.
                  type: boolean
                usergroup:
                  description: The encoded ID of the User Group to enable.
                  type: string
              required:
              - usergroup
          application/x-www-form-urlencoded:
            schema:
              properties:
                include_count:
                  description: Include the number of users in the User Group.
                  type: boolean
                usergroup:
                  description: The encoded ID of the User Group to enable.
                  type: string
              required:
              - usergroup
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from usergroups.enable
                  method
                title: usergroups.enable schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from usergroups.enable method
                title: usergroups.enable error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - usergroups:write
      tags:
      - usergroups
  /usergroups.list:
    get:
      description: List all User Groups for a team
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/usergroups.list
      operationId: usergroups_list
      parameters:
      - description: Include the list of users for each User Group.
        in: query
        name: include_users
        schema:
          type: boolean
      - description: 'Authentication token. Requires scope: `usergroups:read`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - description: Include the number of users in each User Group.
        in: query
        name: include_count
        schema:
          type: boolean
      - description: Include disabled User Groups.
        in: query
        name: include_disabled
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from usergroups.list method
                title: usergroups.list schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from usergroups.list method
                title: usergroups.list error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - usergroups:read
      tags:
      - usergroups
  /usergroups.update:
    post:
      description: Update an existing User Group
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/usergroups.update
      operationId: usergroups_update
      parameters:
      - description: 'Authentication token. Requires scope: `usergroups:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                channels:
                  description: A comma separated string of encoded channel IDs for
                    which the User Group uses as a default.
                  type: string
                description:
                  description: A short description of the User Group.
                  type: string
                handle:
                  description: A mention handle. Must be unique among channels, users
                    and User Groups.
                  type: string
                include_count:
                  description: Include the number of users in the User Group.
                  type: boolean
                name:
                  description: A name for the User Group. Must be unique among User
                    Groups.
                  type: string
                usergroup:
                  description: The encoded ID of the User Group to update.
                  type: string
              required:
              - usergroup
          application/x-www-form-urlencoded:
            schema:
              properties:
                channels:
                  description: A comma separated string of encoded channel IDs for
                    which the User Group uses as a default.
                  type: string
                description:
                  description: A short description of the User Group.
                  type: string
                handle:
                  description: A mention handle. Must be unique among channels, users
                    and User Groups.
                  type: string
                include_count:
                  description: Include the number of users in the User Group.
                  type: boolean
                name:
                  description: A name for the User Group. Must be unique among User
                    Groups.
                  type: string
                usergroup:
                  description: The encoded ID of the User Group to update.
                  type: string
              required:
              - usergroup
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from usergroups.update
                  method
                title: usergroups.update schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from usergroups.update method
                title: usergroups.update error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - usergroups:write
      tags:
      - usergroups
  /usergroups.users.list:
    get:
      description: List all users in a User Group
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/usergroups.users.list
      operationId: usergroups_users_list
      parameters:
      - description: 'Authentication token. Requires scope: `usergroups:read`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - description: Allow results that involve disabled User Groups.
        in: query
        name: include_disabled
        schema:
          type: boolean
      - description: The encoded ID of the User Group to update.
        in: query
        name: usergroup
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from usergroups.users.list
                  method
                title: usergroups.users.list schema
                type: object
          description: Standard success response when used with a user token
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from usergroups.users.list
                  method
                title: usergroups.users.list error schema
                type: object
          description: Standard failure response when used with an invalid token
      security:
      - slackAuth:
        - usergroups:read
      tags:
      - usergroups.users
      - usergroups
  /usergroups.users.update:
    post:
      description: Update the list of users for a User Group
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/usergroups.users.update
      operationId: usergroups_users_update
      parameters:
      - description: 'Authentication token. Requires scope: `usergroups:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                include_count:
                  description: Include the number of users in the User Group.
                  type: boolean
                usergroup:
                  description: The encoded ID of the User Group to update.
                  type: string
                users:
                  description: A comma separated string of encoded user IDs that represent
                    the entire list of users for the User Group.
                  type: string
              required:
              - usergroup
              - users
          application/x-www-form-urlencoded:
            schema:
              properties:
                include_count:
                  description: Include the number of users in the User Group.
                  type: boolean
                usergroup:
                  description: The encoded ID of the User Group to update.
                  type: string
                users:
                  description: A comma separated string of encoded user IDs that represent
                    the entire list of users for the User Group.
                  type: string
              required:
              - usergroup
              - users
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from usergroups.users.update
                  method
                title: usergroups.users.update schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from usergroups.users.update
                  method
                title: usergroups.users.update error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - usergroups:write
      tags:
      - usergroups.users
      - usergroups
  /users.conversations:
    get:
      description: List conversations the calling user may access.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.conversations
      operationId: users_conversations
      parameters:
      - description: 'Authentication token. Requires scope: `conversations:read`'
        in: query
        name: token
        schema:
          type: string
      - description: Browse conversations by a specific user ID's membership. Non-public
          channels are restricted to those where the calling user shares membership.
        in: query
        name: user
        schema:
          type: string
      - description: Mix and match channel types by providing a comma-separated list
          of any combination of `public_channel`, `private_channel`, `mpim`, `im`
        in: query
        name: types
        schema:
          type: string
      - description: Set to `true` to exclude archived channels from the list
        in: query
        name: exclude_archived
        schema:
          type: boolean
      - description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the list hasn't been
          reached. Must be an integer no larger than 1000.
        in: query
        name: limit
        schema:
          type: integer
      - description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
        in: query
        name: cursor
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from users.conversations
                  method. Returned conversation objects do not include `num_members`
                  or `is_member`
                title: users.conversations success schema
                type: object
          description: Typical success response with only public channels. Note how
            `num_members` and `is_member` are not returned like typical `conversations`
            objects.
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from users.conversations method
                title: users.conversations error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - channels:read
        - groups:read
        - im:read
        - mpim:read
      tags:
      - users
  /users.deletePhoto:
    post:
      description: Delete the user profile photo
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.deletePhoto
      operationId: users_deletePhoto
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                token:
                  description: 'Authentication token. Requires scope: `users.profile:write`'
                  type: string
              required:
              - token
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from users.deletePhoto
                  method
                title: users.deletePhoto schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from users.deletePhoto method
                title: users.deletePhoto error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - users.profile:write
      tags:
      - users
  /users.getPresence:
    get:
      description: Gets user presence information.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.getPresence
      operationId: users_getPresence
      parameters:
      - description: 'Authentication token. Requires scope: `users:read`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - description: User to get presence info on. Defaults to the authed user.
        in: query
        name: user
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Generated from users.getPresence with shasum e7251aec575d8863f9e0eb38663ae9dc26655f65
                title: 'API method: users.getPresence'
                type: object
          description: When requesting information for a different user, this method
            just returns the current presence (either `active` or `away`).
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  properties: {}
                  type: object
                description: Schema for error response users.getPresence method
                title: users.counts error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - users:read
      tags:
      - users
  /users.identity:
    get:
      description: Get a user's identity.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.identity
      operationId: users_identity
      parameters:
      - description: 'Authentication token. Requires scope: `identity.basic`'
        in: query
        name: token
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: Schema for successful response from users.identity method
                properties:
                  temp_oneof_00:
                    description: Schema for 'identity.basic' scope
                    properties:
                      ok:
                        $ref: '#/components/schemas/defs_ok_true'
                      team:
                        properties:
                          id:
                            $ref: '#/components/schemas/defs_team'
                        required:
                        - id
                        type: object
                      user:
                        properties:
                          id:
                            $ref: '#/components/schemas/defs_user_id'
                          name:
                            type: string
                        required:
                        - id
                        - name
                        type: object
                    required:
                    - ok
                    - team
                    - user
                    type: object
                  temp_oneof_01:
                    description: Schema for 'identity.basic,identity.email' scopes
                    properties:
                      ok:
                        $ref: '#/components/schemas/defs_ok_true'
                      team:
                        properties:
                          id:
                            $ref: '#/components/schemas/defs_team'
                        required:
                        - id
                        type: object
                      user:
                        properties:
                          email:
                            format: email
                            type: string
                          id:
                            $ref: '#/components/schemas/defs_user_id'
                          name:
                            type: string
                        required:
                        - email
                        - id
                        - name
                        type: object
                    required:
                    - ok
                    - team
                    - user
                    type: object
                  temp_oneof_02:
                    description: Schema for 'identity.basic,identity.avatar' scopes
                    properties:
                      ok:
                        $ref: '#/components/schemas/defs_ok_true'
                      team:
                        properties:
                          id:
                            $ref: '#/components/schemas/defs_team'
                        required:
                        - id
                        type: object
                      user:
                        properties:
                          id:
                            $ref: '#/components/schemas/defs_user_id'
                          image_24:
                            format: url
                            type: string
                          image_32:
                            format: url
                            type: string
                          image_48:
                            format: url
                            type: string
                          image_72:
                            format: url
                            type: string
                          image_192:
                            format: url
                            type: string
                          image_512:
                            format: url
                            type: string
                          name:
                            type: string
                        required:
                        - id
                        - image_192
                        - image_24
                        - image_32
                        - image_48
                        - image_512
                        - image_72
                        - name
                        type: object
                    required:
                    - ok
                    - team
                    - user
                    type: object
                  temp_oneof_03:
                    description: Schema for 'identity.basic,identity.team' scopes
                    properties:
                      ok:
                        $ref: '#/components/schemas/defs_ok_true'
                      team:
                        properties:
                          domain:
                            type: string
                          id:
                            $ref: '#/components/schemas/defs_team'
                          image_34:
                            format: url
                            type: string
                          image_44:
                            format: url
                            type: string
                          image_68:
                            format: url
                            type: string
                          image_88:
                            format: url
                            type: string
                          image_102:
                            format: url
                            type: string
                          image_132:
                            format: url
                            type: string
                          image_230:
                            format: url
                            type: string
                          image_default:
                            type: boolean
                          name:
                            type: string
                        required:
                        - domain
                        - id
                        - image_102
                        - image_132
                        - image_230
                        - image_34
                        - image_44
                        - image_68
                        - image_88
                        - image_default
                        - name
                        type: object
                      user:
                        properties:
                          id:
                            $ref: '#/components/schemas/defs_user_id'
                          name:
                            type: string
                        required:
                        - id
                        - name
                        type: object
                    required:
                    - ok
                    - team
                    - user
                    type: object
                title: users.identity schema
                type: object
          description: 'You will receive at a minimum the following information:'
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from users.identity method
                title: users.identity error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - identity.basic
      tags:
      - users
  /users.info:
    get:
      description: Gets information about a user.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.info
      operationId: users_info
      parameters:
      - description: 'Authentication token. Requires scope: `users:read`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - description: Set this to `true` to receive the locale for this user. Defaults
          to `false`
        in: query
        name: include_locale
        schema:
          type: boolean
      - description: User to get info on
        in: query
        name: user
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from users.info method
                title: users.info success schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from users.info method
                title: users.info error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - users:read
      tags:
      - users
  /users.list:
    get:
      description: Lists all users in a Slack team.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.list
      operationId: users_list
      parameters:
      - description: 'Authentication token. Requires scope: `users:read`'
        in: query
        name: token
        schema:
          type: string
      - description: The maximum number of items to return. Fewer than the requested
          number of items may be returned, even if the end of the users list hasn't
          been reached. Providing no `limit` value will result in Slack attempting
          to deliver you the entire result set. If the collection is too large you
          may experience `limit_required` or HTTP 500 errors.
        in: query
        name: limit
        schema:
          type: integer
      - description: Paginate through collections of data by setting the `cursor`
          parameter to a `next_cursor` attribute returned by a previous request's
          `response_metadata`. Default value fetches the first "page" of the collection.
          See [pagination](/docs/pagination) for more detail.
        in: query
        name: cursor
        schema:
          type: string
      - description: Set this to `true` to receive the locale for users. Defaults
          to `false`
        in: query
        name: include_locale
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users.list_ResponseBody'
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users.list_ErrorResponseBody'
          description: Typical error response
      security:
      - slackAuth:
        - users:read
      tags:
      - users
  /users.lookupByEmail:
    get:
      description: Find a user with an email address.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.lookupByEmail
      operationId: users_lookupByEmail
      parameters:
      - description: 'Authentication token. Requires scope: `users:read.email`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - description: An email address belonging to a user in the workspace
        in: query
        name: email
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from users.lookupByEmail
                  method
                title: users.lookupByEmail success schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from users.lookupByEmail method
                title: users.lookupByEmail error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - users:read.email
      tags:
      - users
  /users.profile.get:
    get:
      description: Retrieves a user's profile information.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.profile.get
      operationId: users_profile_get
      parameters:
      - description: 'Authentication token. Requires scope: `users.profile:read`'
        in: query
        name: token
        required: true
        schema:
          type: string
      - description: Include labels for each ID in custom profile fields
        in: query
        name: include_labels
        schema:
          type: boolean
      - description: User to retrieve profile info for
        in: query
        name: user
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from users.profile.get
                  method
                title: users.profile.get schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from users.profile.get method
                title: users.profile.get error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - users.profile:read
      tags:
      - users.profile
      - users
  /users.profile.set:
    post:
      description: Set the profile information for a user.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.profile.set
      operationId: users_profile_set
      parameters:
      - description: 'Authentication token. Requires scope: `users.profile:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  description: Name of a single key to set. Usable only if `profile`
                    is not passed.
                  type: string
                profile:
                  description: Collection of key:value pairs presented as a URL-encoded
                    JSON hash. At most 50 fields may be set. Each field name is limited
                    to 255 characters.
                  type: string
                user:
                  description: ID of user to change. This argument may only be specified
                    by team admins on paid teams.
                  type: string
                value:
                  description: Value to set a single key to. Usable only if `profile`
                    is not passed.
                  type: string
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  description: Name of a single key to set. Usable only if `profile`
                    is not passed.
                  type: string
                profile:
                  description: Collection of key:value pairs presented as a URL-encoded
                    JSON hash. At most 50 fields may be set. Each field name is limited
                    to 255 characters.
                  type: string
                user:
                  description: ID of user to change. This argument may only be specified
                    by team admins on paid teams.
                  type: string
                value:
                  description: Value to set a single key to. Usable only if `profile`
                    is not passed.
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from users.profile.set
                  method
                title: users.profile.set schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from users.profile.set method
                title: users.profile.set error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - users.profile:write
      tags:
      - users.profile
      - users
  /users.setActive:
    post:
      description: Marked a user as active. Deprecated and non-functional.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.setActive
      operationId: users_setActive
      parameters:
      - description: 'Authentication token. Requires scope: `users:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from users.setActive method
                title: users.setActive schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from users.setActive method
                title: users.setActive error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - users:write
      tags:
      - users
  /users.setPhoto:
    post:
      description: Set the user profile photo
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.setPhoto
      operationId: users_setPhoto
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                crop_w:
                  description: Width/height of crop box (always square)
                  type: string
                crop_x:
                  description: X coordinate of top-left corner of crop box
                  type: string
                crop_y:
                  description: Y coordinate of top-left corner of crop box
                  type: string
                image:
                  description: File contents via `multipart/form-data`.
                  type: string
                token:
                  description: 'Authentication token. Requires scope: `users.profile:write`'
                  type: string
              required:
              - token
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from users.setPhoto method
                title: users.setPhoto schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from users.setPhoto method
                title: users.setPhoto error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - users.profile:write
      tags:
      - users
  /users.setPresence:
    post:
      description: Manually sets user presence.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/users.setPresence
      operationId: users_setPresence
      parameters:
      - description: 'Authentication token. Requires scope: `users:write`'
        in: header
        name: token
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                presence:
                  description: Either `auto` or `away`
                  type: string
              required:
              - presence
          application/x-www-form-urlencoded:
            schema:
              properties:
                presence:
                  description: Either `auto` or `away`
                  type: string
              required:
              - presence
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for successful response from users.setPresence
                  method
                title: users.setPresence schema
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: Schema for error response from users.setPresence method
                title: users.setPresence error schema
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - users:write
      tags:
      - users
  /views.open:
    get:
      description: Open a view for a user.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/views.open
      operationId: views_open
      parameters:
      - description: 'Authentication token. Requires scope: `none`'
        in: header
        name: token
        required: true
        schema:
          type: string
      - description: Exchange a trigger to post to the user.
        in: query
        name: trigger_id
        required: true
        schema:
          type: string
      - description: A [view payload](/reference/surfaces/views). This must be a JSON-encoded
          string.
        in: query
        name: view
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response includes the opened view payload.
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response, before getting to any possible validation
            errors.
      security:
      - slackAuth:
        - none
      tags:
      - views
  /views.publish:
    get:
      description: Publish a static view for a User.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/views.publish
      operationId: views_publish
      parameters:
      - description: 'Authentication token. Requires scope: `none`'
        in: header
        name: token
        required: true
        schema:
          type: string
      - description: '`id` of the user you want publish a view to.'
        in: query
        name: user_id
        required: true
        schema:
          type: string
      - description: A [view payload](/reference/surfaces/views). This must be a JSON-encoded
          string.
        in: query
        name: view
        required: true
        schema:
          type: string
      - description: A string that represents view state to protect against possible
          race conditions.
        in: query
        name: hash
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response includes the published view payload.
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response, before getting to any possible validation
            errors.
      security:
      - slackAuth:
        - none
      tags:
      - views
  /views.push:
    get:
      description: Push a view onto the stack of a root view.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/views.push
      operationId: views_push
      parameters:
      - description: 'Authentication token. Requires scope: `none`'
        in: header
        name: token
        required: true
        schema:
          type: string
      - description: Exchange a trigger to post to the user.
        in: query
        name: trigger_id
        required: true
        schema:
          type: string
      - description: A [view payload](/reference/surfaces/views). This must be a JSON-encoded
          string.
        in: query
        name: view
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response includes the pushed view payload.
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response.
      security:
      - slackAuth:
        - none
      tags:
      - views
  /views.update:
    get:
      description: Update an existing view.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/views.update
      operationId: views_update
      parameters:
      - description: 'Authentication token. Requires scope: `none`'
        in: header
        name: token
        required: true
        schema:
          type: string
      - description: A unique identifier of the view to be updated. Either `view_id`
          or `external_id` is required.
        in: query
        name: view_id
        schema:
          type: string
      - description: A unique identifier of the view set by the developer. Must be
          unique for all views on a team. Max length of 255 characters. Either `view_id`
          or `external_id` is required.
        in: query
        name: external_id
        schema:
          type: string
      - description: A [view object](/reference/surfaces/views). This must be a JSON-encoded
          string.
        in: query
        name: view
        schema:
          type: string
      - description: A string that represents view state to protect against possible
          race conditions.
        in: query
        name: hash
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response includes the updated view payload.
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response.
      security:
      - slackAuth:
        - none
      tags:
      - views
  /workflows.stepCompleted:
    get:
      description: Indicate that an app's step in a workflow completed execution.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/workflows.stepCompleted
      operationId: workflows_stepCompleted
      parameters:
      - description: 'Authentication token. Requires scope: `workflow.steps:execute`'
        in: header
        name: token
        required: true
        schema:
          type: string
      - description: Context identifier that maps to the correct workflow step execution.
        in: query
        name: workflow_step_execute_id
        required: true
        schema:
          type: string
      - description: Key-value object of outputs from your step. Keys of this object
          reflect the configured `key` properties of your [`outputs`](/reference/workflows/workflow_step#output)
          array from your `workflow_step` object.
        in: query
        name: outputs
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - workflow.steps:execute
      tags:
      - workflows
  /workflows.stepFailed:
    get:
      description: Indicate that an app's step in a workflow failed to execute.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/workflows.stepFailed
      operationId: workflows_stepFailed
      parameters:
      - description: 'Authentication token. Requires scope: `workflow.steps:execute`'
        in: header
        name: token
        required: true
        schema:
          type: string
      - description: Context identifier that maps to the correct workflow step execution.
        in: query
        name: workflow_step_execute_id
        required: true
        schema:
          type: string
      - description: A JSON-based object with a `message` property that should contain
          a human readable error message.
        in: query
        name: error
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - workflow.steps:execute
      tags:
      - workflows
  /workflows.updateStep:
    get:
      description: Update the configuration for a workflow extension step.
      externalDocs:
        description: API method documentation
        url: https://api.slack.com/methods/workflows.updateStep
      operationId: workflows_updateStep
      parameters:
      - description: 'Authentication token. Requires scope: `workflow.steps:execute`'
        in: header
        name: token
        required: true
        schema:
          type: string
      - description: A context identifier provided with `view_submission` payloads
          used to call back to `workflows.updateStep`.
        in: query
        name: workflow_step_edit_id
        required: true
        schema:
          type: string
      - description: 'A JSON key-value map of inputs required from a user during configuration.
          This is the data your app expects to receive when the workflow step starts.
          **Please note**: the embedded variable format is set and replaced by the
          workflow system. You cannot create custom variables that will be replaced
          at runtime. [Read more about variables in workflow steps here](/workflows/steps#variables).'
        in: query
        name: inputs
        schema:
          type: string
      - description: An JSON array of output objects used during step execution. This
          is the data your app agrees to provide when your workflow step was executed.
        in: query
        name: outputs
        schema:
          type: string
      - description: An optional field that can be used to override the step name
          that is shown in the Workflow Builder.
        in: query
        name: step_name
        schema:
          type: string
      - description: An optional field that can be used to override app image that
          is shown in the Workflow Builder.
        in: query
        name: step_image_url
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _OK_ response
                  or a verbose schema is not available for this method.
                title: Default success template
                type: object
          description: Typical success response
        default:
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                description: This method either only returns a brief _not OK_ response
                  or a verbose schema is not available for this method.
                title: Default error template
                type: object
          description: Typical error response
      security:
      - slackAuth:
        - workflow.steps:execute
      tags:
      - workflows
servers:
- description: Public slack API
  url: https://slack.com/api
tags:
- description: admin.apps
  name: admin.apps
- description: admin
  name: admin
- description: admin.apps.approved
  name: admin.apps.approved
- description: admin.apps.requests
  name: admin.apps.requests
- description: admin.apps.restricted
  name: admin.apps.restricted
- description: admin.conversations
  name: admin.conversations
- description: admin.conversations.ekm
  name: admin.conversations.ekm
- description: admin.conversations.restrictAccess
  name: admin.conversations.restrictAccess
- description: admin.emoji
  name: admin.emoji
- description: admin.inviteRequests
  name: admin.inviteRequests
- description: admin.inviteRequests.approved
  name: admin.inviteRequests.approved
- description: admin.inviteRequests.denied
  name: admin.inviteRequests.denied
- description: admin.teams.admins
  name: admin.teams.admins
- description: admin.teams
  name: admin.teams
- description: admin.teams.owners
  name: admin.teams.owners
- description: admin.teams.settings
  name: admin.teams.settings
- description: admin.usergroups
  name: admin.usergroups
- description: admin.users
  name: admin.users
- description: admin.users.session
  name: admin.users.session
- description: api
  name: api
- description: apps
  name: apps
- description: apps.event.authorizations
  name: apps.event.authorizations
- description: apps.permissions
  name: apps.permissions
- description: apps.permissions.resources
  name: apps.permissions.resources
- description: apps.permissions.scopes
  name: apps.permissions.scopes
- description: apps.permissions.users
  name: apps.permissions.users
- description: auth
  name: auth
- description: bots
  name: bots
- description: calls
  name: calls
- description: calls.participants
  name: calls.participants
- description: chat
  name: chat
- description: chat.scheduledMessages
  name: chat.scheduledMessages
- description: conversations
  name: conversations
- description: dialog
  name: dialog
- description: dnd
  name: dnd
- description: emoji
  name: emoji
- description: files
  name: files
- description: files.comments
  name: files.comments
- description: files.remote
  name: files.remote
- description: migration
  name: migration
- description: oauth
  name: oauth
- description: oauth.v2
  name: oauth.v2
- description: pins
  name: pins
- description: reactions
  name: reactions
- description: reminders
  name: reminders
- description: rtm
  name: rtm
- description: search
  name: search
- description: stars
  name: stars
- description: team
  name: team
- description: team.profile
  name: team.profile
- description: usergroups
  name: usergroups
- description: usergroups.users
  name: usergroups.users
- description: users
  name: users
- description: users.profile
  name: users.profile
- description: views
  name: views
- description: workflows
  name: workflows
